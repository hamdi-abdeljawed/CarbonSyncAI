{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SETUP\\\\Desktop\\\\yap-t carbonsync ai\\\\frontend\\\\src\\\\components\\\\ModelPerformance.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport Chart from 'chart.js/auto';\nimport './ModelPerformance.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ModelPerformance = ({\n  data,\n  forecast,\n  impacts\n}) => {\n  _s();\n  const errorMetricsRef = useRef(null);\n  const errorChartRef = useRef(null);\n  const errorChartInstance = useRef(null);\n  const [modelInfo, setModelInfo] = useState({\n    name: \"Prophet Time Series\",\n    version: \"1.0.1\",\n    type: \"Additive Regression Model\",\n    components: [\"Trend\", \"Seasonality\", \"Holidays\"],\n    hyperparameters: {\n      changepoint_prior_scale: 0.05,\n      seasonality_prior_scale: 10.0,\n      seasonality_mode: \"additive\",\n      growth: \"linear\"\n    },\n    accuracy: {\n      training: \"92.4%\",\n      validation: \"89.7%\"\n    }\n  });\n\n  // Clean up chart on unmount\n  useEffect(() => {\n    return () => {\n      if (errorChartInstance.current) {\n        errorChartInstance.current.destroy();\n        errorChartInstance.current = null;\n      }\n    };\n  }, []);\n  useEffect(() => {\n    if (!data || !forecast || data.length === 0 || forecast.length === 0) return;\n\n    // Calculate performance metrics\n    const metrics = calculatePerformanceMetrics(data, forecast);\n    displayPerformanceMetrics(metrics);\n    createErrorChart(metrics);\n  }, [data, forecast]);\n  const calculatePerformanceMetrics = (data, forecast) => {\n    // Group actual data by month for comparison\n    const monthlyActualData = {};\n    data.forEach(item => {\n      if (!item.date || !item.emissions) return;\n      const date = new Date(item.date);\n      const monthKey = `${date.getFullYear()}-${String(date.getMonth() + 1).padStart(2, '0')}`;\n      if (!monthlyActualData[monthKey]) {\n        monthlyActualData[monthKey] = {\n          date: new Date(date.getFullYear(), date.getMonth(), 1),\n          emissions: 0\n        };\n      }\n      monthlyActualData[monthKey].emissions += parseFloat(item.emissions) || 0;\n    });\n\n    // Convert to array and sort by date\n    const actualData = Object.values(monthlyActualData).sort((a, b) => a.date - b.date);\n\n    // Get forecast data for comparison\n    // Only compare months that exist in both datasets\n    const comparableData = [];\n    actualData.forEach(actual => {\n      const actualMonth = actual.date.getMonth();\n      const actualYear = actual.date.getFullYear();\n      const matchingForecast = forecast.find(f => {\n        const forecastDate = new Date(f.ds);\n        return forecastDate.getMonth() === actualMonth && forecastDate.getFullYear() === actualYear;\n      });\n      if (matchingForecast) {\n        comparableData.push({\n          date: actual.date,\n          actual: actual.emissions,\n          forecast: matchingForecast.predicted_emissions,\n          error: Math.abs(actual.emissions - matchingForecast.predicted_emissions),\n          percentError: Math.abs((actual.emissions - matchingForecast.predicted_emissions) / actual.emissions) * 100\n        });\n      }\n    });\n\n    // Calculate metrics\n    let mae = 0;\n    let rmse = 0;\n    let mape = 0;\n    let r2 = 0.85; // Mock value for demonstration\n\n    if (comparableData.length > 0) {\n      mae = comparableData.reduce((sum, item) => sum + item.error, 0) / comparableData.length;\n      rmse = Math.sqrt(comparableData.reduce((sum, item) => sum + Math.pow(item.error, 2), 0) / comparableData.length);\n      mape = comparableData.reduce((sum, item) => sum + item.percentError, 0) / comparableData.length;\n    }\n    return {\n      mae,\n      rmse,\n      mape,\n      r2,\n      comparableData\n    };\n  };\n  const displayPerformanceMetrics = metrics => {\n    if (!errorMetricsRef.current) return;\n    errorMetricsRef.current.innerHTML = '';\n\n    // Create model info section\n    const modelInfoSection = document.createElement('div');\n    modelInfoSection.className = 'model-info-section';\n    const modelTitle = document.createElement('h4');\n    modelTitle.className = 'model-title';\n    modelTitle.textContent = 'Model Information';\n    modelInfoSection.appendChild(modelTitle);\n    const modelDetails = document.createElement('div');\n    modelDetails.className = 'model-details';\n\n    // Model name and type\n    const modelBasics = document.createElement('div');\n    modelBasics.className = 'model-basics';\n    const modelNameLabel = document.createElement('div');\n    modelNameLabel.className = 'model-label';\n    modelNameLabel.textContent = 'Model:';\n    const modelNameValue = document.createElement('div');\n    modelNameValue.className = 'model-value';\n    modelNameValue.textContent = `${modelInfo.name} v${modelInfo.version}`;\n    const modelTypeLabel = document.createElement('div');\n    modelTypeLabel.className = 'model-label';\n    modelTypeLabel.textContent = 'Type:';\n    const modelTypeValue = document.createElement('div');\n    modelTypeValue.className = 'model-value';\n    modelTypeValue.textContent = modelInfo.type;\n    modelBasics.appendChild(modelNameLabel);\n    modelBasics.appendChild(modelNameValue);\n    modelBasics.appendChild(modelTypeLabel);\n    modelBasics.appendChild(modelTypeValue);\n\n    // Model components\n    const modelComponents = document.createElement('div');\n    modelComponents.className = 'model-components';\n    const componentsLabel = document.createElement('div');\n    componentsLabel.className = 'model-label';\n    componentsLabel.textContent = 'Components:';\n    const componentsValue = document.createElement('div');\n    componentsValue.className = 'model-value components-list';\n    modelInfo.components.forEach(component => {\n      const componentItem = document.createElement('span');\n      componentItem.className = 'component-item';\n      componentItem.textContent = component;\n      componentsValue.appendChild(componentItem);\n    });\n    modelComponents.appendChild(componentsLabel);\n    modelComponents.appendChild(componentsValue);\n\n    // Model hyperparameters\n    const modelHyperparams = document.createElement('div');\n    modelHyperparams.className = 'model-hyperparams';\n    const hyperparamsLabel = document.createElement('div');\n    hyperparamsLabel.className = 'model-label';\n    hyperparamsLabel.textContent = 'Hyperparameters:';\n    const hyperparamsList = document.createElement('div');\n    hyperparamsList.className = 'hyperparams-list';\n    Object.entries(modelInfo.hyperparameters).forEach(([key, value]) => {\n      const hyperparamItem = document.createElement('div');\n      hyperparamItem.className = 'hyperparam-item';\n      const keySpan = document.createElement('span');\n      keySpan.className = 'hyperparam-key';\n      keySpan.textContent = key.replace(/_/g, ' ');\n      const valueSpan = document.createElement('span');\n      valueSpan.className = 'hyperparam-value';\n      valueSpan.textContent = value;\n      hyperparamItem.appendChild(keySpan);\n      hyperparamItem.appendChild(valueSpan);\n      hyperparamsList.appendChild(hyperparamItem);\n    });\n    modelHyperparams.appendChild(hyperparamsLabel);\n    modelHyperparams.appendChild(hyperparamsList);\n\n    // Combine all model info sections\n    modelDetails.appendChild(modelBasics);\n    modelDetails.appendChild(modelComponents);\n    modelDetails.appendChild(modelHyperparams);\n    modelInfoSection.appendChild(modelDetails);\n    errorMetricsRef.current.appendChild(modelInfoSection);\n\n    // Create metrics container\n    const metricsContainer = document.createElement('div');\n    metricsContainer.className = 'metrics-container';\n\n    // MAE Metric\n    const maeMetric = document.createElement('div');\n    maeMetric.className = 'metric-card';\n    const maeTitle = document.createElement('div');\n    maeTitle.className = 'metric-title';\n    maeTitle.textContent = 'Mean Absolute Error';\n    const maeValue = document.createElement('div');\n    maeValue.className = 'metric-value';\n    maeValue.textContent = `${metrics.mae.toFixed(2)} tons CO2e`;\n    const maeQuality = document.createElement('div');\n    maeQuality.className = `metric-quality ${metrics.mae < 2 ? 'good' : metrics.mae < 5 ? 'average' : 'poor'}`;\n    maeQuality.textContent = metrics.mae < 2 ? 'Good' : metrics.mae < 5 ? 'Average' : 'Poor';\n    const maeDescription = document.createElement('div');\n    maeDescription.className = 'metric-description';\n    maeDescription.textContent = 'Average absolute difference between forecast and actual values';\n    maeMetric.appendChild(maeTitle);\n    maeMetric.appendChild(maeValue);\n    maeMetric.appendChild(maeQuality);\n    maeMetric.appendChild(maeDescription);\n    metricsContainer.appendChild(maeMetric);\n\n    // RMSE Metric\n    const rmseMetric = document.createElement('div');\n    rmseMetric.className = 'metric-card';\n    const rmseTitle = document.createElement('div');\n    rmseTitle.className = 'metric-title';\n    rmseTitle.textContent = 'Root Mean Square Error';\n    const rmseValue = document.createElement('div');\n    rmseValue.className = 'metric-value';\n    rmseValue.textContent = `${metrics.rmse.toFixed(2)} tons CO2e`;\n    const rmseQuality = document.createElement('div');\n    rmseQuality.className = `metric-quality ${metrics.rmse < 3 ? 'good' : metrics.rmse < 7 ? 'average' : 'poor'}`;\n    rmseQuality.textContent = metrics.rmse < 3 ? 'Good' : metrics.rmse < 7 ? 'Average' : 'Poor';\n    const rmseDescription = document.createElement('div');\n    rmseDescription.className = 'metric-description';\n    rmseDescription.textContent = 'Square root of the average of squared differences';\n    rmseMetric.appendChild(rmseTitle);\n    rmseMetric.appendChild(rmseValue);\n    rmseMetric.appendChild(rmseQuality);\n    rmseMetric.appendChild(rmseDescription);\n    metricsContainer.appendChild(rmseMetric);\n\n    // MAPE Metric\n    const mapeMetric = document.createElement('div');\n    mapeMetric.className = 'metric-card';\n    const mapeTitle = document.createElement('div');\n    mapeTitle.className = 'metric-title';\n    mapeTitle.textContent = 'Mean Absolute Percentage Error';\n    const mapeValue = document.createElement('div');\n    mapeValue.className = 'metric-value';\n    mapeValue.textContent = `${metrics.mape.toFixed(2)}%`;\n    const mapeQuality = document.createElement('div');\n    mapeQuality.className = `metric-quality ${metrics.mape < 10 ? 'good' : metrics.mape < 20 ? 'average' : 'poor'}`;\n    mapeQuality.textContent = metrics.mape < 10 ? 'Good' : metrics.mape < 20 ? 'Average' : 'Poor';\n    const mapeDescription = document.createElement('div');\n    mapeDescription.className = 'metric-description';\n    mapeDescription.textContent = 'Average percentage difference between forecast and actual';\n    mapeMetric.appendChild(mapeTitle);\n    mapeMetric.appendChild(mapeValue);\n    mapeMetric.appendChild(mapeQuality);\n    mapeMetric.appendChild(mapeDescription);\n    metricsContainer.appendChild(mapeMetric);\n\n    // R-squared Metric\n    const r2Metric = document.createElement('div');\n    r2Metric.className = 'metric-card';\n    const r2Title = document.createElement('div');\n    r2Title.className = 'metric-title';\n    r2Title.textContent = 'R-squared (R²)';\n    const r2Value = document.createElement('div');\n    r2Value.className = 'metric-value';\n    r2Value.textContent = metrics.r2.toFixed(2);\n    const r2Quality = document.createElement('div');\n    r2Quality.className = `metric-quality ${metrics.r2 > 0.8 ? 'good' : metrics.r2 > 0.6 ? 'average' : 'poor'}`;\n    r2Quality.textContent = metrics.r2 > 0.8 ? 'Good' : metrics.r2 > 0.6 ? 'Average' : 'Poor';\n    const r2Description = document.createElement('div');\n    r2Description.className = 'metric-description';\n    r2Description.textContent = 'Proportion of variance explained by the model';\n    r2Metric.appendChild(r2Title);\n    r2Metric.appendChild(r2Value);\n    r2Metric.appendChild(r2Quality);\n    r2Metric.appendChild(r2Description);\n    metricsContainer.appendChild(r2Metric);\n    errorMetricsRef.current.appendChild(metricsContainer);\n\n    // Add overall model assessment\n    const overallAssessment = document.createElement('div');\n    overallAssessment.className = 'overall-assessment';\n    const assessmentTitle = document.createElement('h4');\n    assessmentTitle.textContent = 'Overall Model Assessment';\n    const assessmentContent = document.createElement('div');\n    assessmentContent.className = 'assessment-content';\n\n    // Calculate overall score (simple average of normalized metrics)\n    const maeScore = Math.min(1, Math.max(0, 1 - metrics.mae / 10));\n    const rmseScore = Math.min(1, Math.max(0, 1 - metrics.rmse / 15));\n    const mapeScore = Math.min(1, Math.max(0, 1 - metrics.mape / 50));\n    const r2Score = Math.min(1, Math.max(0, metrics.r2));\n    const overallScore = (maeScore + rmseScore + mapeScore + r2Score) / 4;\n    const scorePercentage = Math.round(overallScore * 100);\n    const scoreGauge = document.createElement('div');\n    scoreGauge.className = 'score-gauge';\n    const scoreValue = document.createElement('div');\n    scoreValue.className = 'score-value';\n    scoreValue.textContent = `${scorePercentage}%`;\n    const scoreBar = document.createElement('div');\n    scoreBar.className = 'score-bar';\n    const scoreProgress = document.createElement('div');\n    scoreProgress.className = 'score-progress';\n    scoreProgress.style.width = `${scorePercentage}%`;\n    scoreProgress.style.backgroundColor = scorePercentage >= 80 ? '#00ff00' : scorePercentage >= 60 ? '#ffff00' : '#ff0000';\n    scoreBar.appendChild(scoreProgress);\n    scoreGauge.appendChild(scoreValue);\n    scoreGauge.appendChild(scoreBar);\n    const assessmentText = document.createElement('p');\n    assessmentText.className = 'assessment-text';\n    if (scorePercentage >= 80) {\n      assessmentText.textContent = 'The model is performing well with high accuracy. Predictions are reliable for decision-making.';\n    } else if (scorePercentage >= 60) {\n      assessmentText.textContent = 'The model is performing adequately. Predictions should be used with some caution.';\n    } else {\n      assessmentText.textContent = 'The model performance is below optimal levels. Consider retraining with more data or adjusting parameters.';\n    }\n    assessmentContent.appendChild(scoreGauge);\n    assessmentContent.appendChild(assessmentText);\n    overallAssessment.appendChild(assessmentTitle);\n    overallAssessment.appendChild(assessmentContent);\n    errorMetricsRef.current.appendChild(overallAssessment);\n  };\n  const createErrorChart = metrics => {\n    if (!errorChartRef.current || !metrics.comparableData || metrics.comparableData.length === 0) return;\n\n    // Destroy previous chart if it exists\n    if (errorChartInstance.current) {\n      errorChartInstance.current.destroy();\n      errorChartInstance.current = null;\n    }\n    try {\n      const ctx = errorChartRef.current.getContext('2d');\n\n      // Prepare data\n      const labels = metrics.comparableData.map(d => {\n        const date = new Date(d.date);\n        return date.toLocaleDateString('default', {\n          month: 'short',\n          year: 'numeric'\n        });\n      });\n      const actualValues = metrics.comparableData.map(d => d.actual);\n      const forecastValues = metrics.comparableData.map(d => d.forecast);\n      const errorValues = metrics.comparableData.map(d => d.error);\n\n      // Create chart\n      errorChartInstance.current = new Chart(ctx, {\n        type: 'bar',\n        data: {\n          labels: labels,\n          datasets: [{\n            type: 'line',\n            label: 'Actual Emissions',\n            data: actualValues,\n            borderColor: '#00FFFF',\n            backgroundColor: 'rgba(0, 255, 255, 0.1)',\n            borderWidth: 3,\n            pointBackgroundColor: '#00FFFF',\n            pointBorderColor: '#00FFFF',\n            pointRadius: 5,\n            pointHoverRadius: 7,\n            tension: 0.4,\n            yAxisID: 'y'\n          }, {\n            type: 'line',\n            label: 'Forecast Emissions',\n            data: forecastValues,\n            borderColor: '#FF00FF',\n            backgroundColor: 'rgba(255, 0, 255, 0.1)',\n            borderWidth: 3,\n            pointBackgroundColor: '#FF00FF',\n            pointBorderColor: '#FF00FF',\n            pointRadius: 5,\n            pointHoverRadius: 7,\n            tension: 0.4,\n            yAxisID: 'y'\n          }, {\n            type: 'bar',\n            label: 'Forecast Error',\n            data: errorValues,\n            backgroundColor: 'rgba(255, 165, 0, 0.6)',\n            borderColor: 'rgba(255, 165, 0, 0.8)',\n            borderWidth: 1,\n            yAxisID: 'y1'\n          }]\n        },\n        options: {\n          responsive: true,\n          maintainAspectRatio: false,\n          animation: {\n            duration: 2000,\n            easing: 'easeOutQuart'\n          },\n          scales: {\n            x: {\n              title: {\n                display: true,\n                text: 'Month',\n                color: '#ccc',\n                font: {\n                  family: 'Orbitron',\n                  size: 14\n                }\n              },\n              grid: {\n                color: 'rgba(255, 255, 255, 0.1)'\n              },\n              ticks: {\n                color: '#ccc',\n                font: {\n                  family: 'Roboto',\n                  size: 12\n                }\n              }\n            },\n            y: {\n              type: 'linear',\n              position: 'left',\n              title: {\n                display: true,\n                text: 'Emissions (tons CO2e)',\n                color: '#ccc',\n                font: {\n                  family: 'Orbitron',\n                  size: 14\n                }\n              },\n              grid: {\n                color: 'rgba(255, 255, 255, 0.1)'\n              },\n              ticks: {\n                color: '#ccc',\n                font: {\n                  family: 'Roboto',\n                  size: 12\n                }\n              }\n            },\n            y1: {\n              type: 'linear',\n              position: 'right',\n              title: {\n                display: true,\n                text: 'Error (tons CO2e)',\n                color: '#ccc',\n                font: {\n                  family: 'Orbitron',\n                  size: 14\n                }\n              },\n              grid: {\n                drawOnChartArea: false\n              },\n              ticks: {\n                color: '#ccc',\n                font: {\n                  family: 'Roboto',\n                  size: 12\n                }\n              }\n            }\n          },\n          plugins: {\n            title: {\n              display: true,\n              text: 'Forecast Performance Analysis',\n              color: '#fff',\n              font: {\n                family: 'Orbitron',\n                size: 18,\n                weight: 'bold'\n              },\n              padding: {\n                top: 10,\n                bottom: 30\n              }\n            },\n            legend: {\n              position: 'top',\n              labels: {\n                font: {\n                  family: 'Orbitron',\n                  size: 12\n                },\n                color: '#fff',\n                padding: 20\n              }\n            },\n            tooltip: {\n              enabled: true,\n              mode: 'index',\n              intersect: false,\n              backgroundColor: 'rgba(0, 0, 0, 0.8)',\n              titleFont: {\n                family: 'Orbitron',\n                size: 14\n              },\n              bodyFont: {\n                family: 'Roboto',\n                size: 13\n              },\n              borderColor: 'rgba(0, 255, 255, 0.3)',\n              borderWidth: 1\n            }\n          }\n        }\n      });\n    } catch (error) {\n      console.error(\"Error creating error chart:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"model-performance-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"section-title\",\n      children: \"Model Performance Metrics\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 583,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-metrics\",\n      ref: errorMetricsRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 585,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"performance-chart-container\",\n      children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n        ref: errorChartRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 588,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 587,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 582,\n    columnNumber: 5\n  }, this);\n};\n_s(ModelPerformance, \"KH3MyrLAeYW8R1/UbdoLCaH6S0Q=\");\n_c = ModelPerformance;\nexport default ModelPerformance;\nvar _c;\n$RefreshReg$(_c, \"ModelPerformance\");","map":{"version":3,"names":["React","useEffect","useRef","useState","Chart","jsxDEV","_jsxDEV","ModelPerformance","data","forecast","impacts","_s","errorMetricsRef","errorChartRef","errorChartInstance","modelInfo","setModelInfo","name","version","type","components","hyperparameters","changepoint_prior_scale","seasonality_prior_scale","seasonality_mode","growth","accuracy","training","validation","current","destroy","length","metrics","calculatePerformanceMetrics","displayPerformanceMetrics","createErrorChart","monthlyActualData","forEach","item","date","emissions","Date","monthKey","getFullYear","String","getMonth","padStart","parseFloat","actualData","Object","values","sort","a","b","comparableData","actual","actualMonth","actualYear","matchingForecast","find","f","forecastDate","ds","push","predicted_emissions","error","Math","abs","percentError","mae","rmse","mape","r2","reduce","sum","sqrt","pow","innerHTML","modelInfoSection","document","createElement","className","modelTitle","textContent","appendChild","modelDetails","modelBasics","modelNameLabel","modelNameValue","modelTypeLabel","modelTypeValue","modelComponents","componentsLabel","componentsValue","component","componentItem","modelHyperparams","hyperparamsLabel","hyperparamsList","entries","key","value","hyperparamItem","keySpan","replace","valueSpan","metricsContainer","maeMetric","maeTitle","maeValue","toFixed","maeQuality","maeDescription","rmseMetric","rmseTitle","rmseValue","rmseQuality","rmseDescription","mapeMetric","mapeTitle","mapeValue","mapeQuality","mapeDescription","r2Metric","r2Title","r2Value","r2Quality","r2Description","overallAssessment","assessmentTitle","assessmentContent","maeScore","min","max","rmseScore","mapeScore","r2Score","overallScore","scorePercentage","round","scoreGauge","scoreValue","scoreBar","scoreProgress","style","width","backgroundColor","assessmentText","ctx","getContext","labels","map","d","toLocaleDateString","month","year","actualValues","forecastValues","errorValues","datasets","label","borderColor","borderWidth","pointBackgroundColor","pointBorderColor","pointRadius","pointHoverRadius","tension","yAxisID","options","responsive","maintainAspectRatio","animation","duration","easing","scales","x","title","display","text","color","font","family","size","grid","ticks","y","position","y1","drawOnChartArea","plugins","weight","padding","top","bottom","legend","tooltip","enabled","mode","intersect","titleFont","bodyFont","console","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","_c","$RefreshReg$"],"sources":["C:/Users/SETUP/Desktop/yap-t carbonsync ai/frontend/src/components/ModelPerformance.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport Chart from 'chart.js/auto';\nimport './ModelPerformance.css';\n\nconst ModelPerformance = ({ data, forecast, impacts }) => {\n  const errorMetricsRef = useRef(null);\n  const errorChartRef = useRef(null);\n  const errorChartInstance = useRef(null);\n  const [modelInfo, setModelInfo] = useState({\n    name: \"Prophet Time Series\",\n    version: \"1.0.1\",\n    type: \"Additive Regression Model\",\n    components: [\"Trend\", \"Seasonality\", \"Holidays\"],\n    hyperparameters: {\n      changepoint_prior_scale: 0.05,\n      seasonality_prior_scale: 10.0,\n      seasonality_mode: \"additive\",\n      growth: \"linear\"\n    },\n    accuracy: {\n      training: \"92.4%\",\n      validation: \"89.7%\"\n    }\n  });\n\n  // Clean up chart on unmount\n  useEffect(() => {\n    return () => {\n      if (errorChartInstance.current) {\n        errorChartInstance.current.destroy();\n        errorChartInstance.current = null;\n      }\n    };\n  }, []);\n\n  useEffect(() => {\n    if (!data || !forecast || data.length === 0 || forecast.length === 0) return;\n\n    // Calculate performance metrics\n    const metrics = calculatePerformanceMetrics(data, forecast);\n    displayPerformanceMetrics(metrics);\n    createErrorChart(metrics);\n  }, [data, forecast]);\n\n  const calculatePerformanceMetrics = (data, forecast) => {\n    // Group actual data by month for comparison\n    const monthlyActualData = {};\n    \n    data.forEach(item => {\n      if (!item.date || !item.emissions) return;\n      \n      const date = new Date(item.date);\n      const monthKey = `${date.getFullYear()}-${String(date.getMonth() + 1).padStart(2, '0')}`;\n      \n      if (!monthlyActualData[monthKey]) {\n        monthlyActualData[monthKey] = {\n          date: new Date(date.getFullYear(), date.getMonth(), 1),\n          emissions: 0\n        };\n      }\n      \n      monthlyActualData[monthKey].emissions += parseFloat(item.emissions) || 0;\n    });\n    \n    // Convert to array and sort by date\n    const actualData = Object.values(monthlyActualData).sort((a, b) => a.date - b.date);\n    \n    // Get forecast data for comparison\n    // Only compare months that exist in both datasets\n    const comparableData = [];\n    \n    actualData.forEach(actual => {\n      const actualMonth = actual.date.getMonth();\n      const actualYear = actual.date.getFullYear();\n      \n      const matchingForecast = forecast.find(f => {\n        const forecastDate = new Date(f.ds);\n        return forecastDate.getMonth() === actualMonth && forecastDate.getFullYear() === actualYear;\n      });\n      \n      if (matchingForecast) {\n        comparableData.push({\n          date: actual.date,\n          actual: actual.emissions,\n          forecast: matchingForecast.predicted_emissions,\n          error: Math.abs(actual.emissions - matchingForecast.predicted_emissions),\n          percentError: Math.abs((actual.emissions - matchingForecast.predicted_emissions) / actual.emissions) * 100\n        });\n      }\n    });\n    \n    // Calculate metrics\n    let mae = 0;\n    let rmse = 0;\n    let mape = 0;\n    let r2 = 0.85; // Mock value for demonstration\n    \n    if (comparableData.length > 0) {\n      mae = comparableData.reduce((sum, item) => sum + item.error, 0) / comparableData.length;\n      \n      rmse = Math.sqrt(\n        comparableData.reduce((sum, item) => sum + Math.pow(item.error, 2), 0) / comparableData.length\n      );\n      \n      mape = comparableData.reduce((sum, item) => sum + item.percentError, 0) / comparableData.length;\n    }\n    \n    return {\n      mae,\n      rmse,\n      mape,\n      r2,\n      comparableData\n    };\n  };\n\n  const displayPerformanceMetrics = (metrics) => {\n    if (!errorMetricsRef.current) return;\n    \n    errorMetricsRef.current.innerHTML = '';\n    \n    // Create model info section\n    const modelInfoSection = document.createElement('div');\n    modelInfoSection.className = 'model-info-section';\n    \n    const modelTitle = document.createElement('h4');\n    modelTitle.className = 'model-title';\n    modelTitle.textContent = 'Model Information';\n    modelInfoSection.appendChild(modelTitle);\n    \n    const modelDetails = document.createElement('div');\n    modelDetails.className = 'model-details';\n    \n    // Model name and type\n    const modelBasics = document.createElement('div');\n    modelBasics.className = 'model-basics';\n    \n    const modelNameLabel = document.createElement('div');\n    modelNameLabel.className = 'model-label';\n    modelNameLabel.textContent = 'Model:';\n    \n    const modelNameValue = document.createElement('div');\n    modelNameValue.className = 'model-value';\n    modelNameValue.textContent = `${modelInfo.name} v${modelInfo.version}`;\n    \n    const modelTypeLabel = document.createElement('div');\n    modelTypeLabel.className = 'model-label';\n    modelTypeLabel.textContent = 'Type:';\n    \n    const modelTypeValue = document.createElement('div');\n    modelTypeValue.className = 'model-value';\n    modelTypeValue.textContent = modelInfo.type;\n    \n    modelBasics.appendChild(modelNameLabel);\n    modelBasics.appendChild(modelNameValue);\n    modelBasics.appendChild(modelTypeLabel);\n    modelBasics.appendChild(modelTypeValue);\n    \n    // Model components\n    const modelComponents = document.createElement('div');\n    modelComponents.className = 'model-components';\n    \n    const componentsLabel = document.createElement('div');\n    componentsLabel.className = 'model-label';\n    componentsLabel.textContent = 'Components:';\n    \n    const componentsValue = document.createElement('div');\n    componentsValue.className = 'model-value components-list';\n    \n    modelInfo.components.forEach(component => {\n      const componentItem = document.createElement('span');\n      componentItem.className = 'component-item';\n      componentItem.textContent = component;\n      componentsValue.appendChild(componentItem);\n    });\n    \n    modelComponents.appendChild(componentsLabel);\n    modelComponents.appendChild(componentsValue);\n    \n    // Model hyperparameters\n    const modelHyperparams = document.createElement('div');\n    modelHyperparams.className = 'model-hyperparams';\n    \n    const hyperparamsLabel = document.createElement('div');\n    hyperparamsLabel.className = 'model-label';\n    hyperparamsLabel.textContent = 'Hyperparameters:';\n    \n    const hyperparamsList = document.createElement('div');\n    hyperparamsList.className = 'hyperparams-list';\n    \n    Object.entries(modelInfo.hyperparameters).forEach(([key, value]) => {\n      const hyperparamItem = document.createElement('div');\n      hyperparamItem.className = 'hyperparam-item';\n      \n      const keySpan = document.createElement('span');\n      keySpan.className = 'hyperparam-key';\n      keySpan.textContent = key.replace(/_/g, ' ');\n      \n      const valueSpan = document.createElement('span');\n      valueSpan.className = 'hyperparam-value';\n      valueSpan.textContent = value;\n      \n      hyperparamItem.appendChild(keySpan);\n      hyperparamItem.appendChild(valueSpan);\n      hyperparamsList.appendChild(hyperparamItem);\n    });\n    \n    modelHyperparams.appendChild(hyperparamsLabel);\n    modelHyperparams.appendChild(hyperparamsList);\n    \n    // Combine all model info sections\n    modelDetails.appendChild(modelBasics);\n    modelDetails.appendChild(modelComponents);\n    modelDetails.appendChild(modelHyperparams);\n    \n    modelInfoSection.appendChild(modelDetails);\n    errorMetricsRef.current.appendChild(modelInfoSection);\n    \n    // Create metrics container\n    const metricsContainer = document.createElement('div');\n    metricsContainer.className = 'metrics-container';\n    \n    // MAE Metric\n    const maeMetric = document.createElement('div');\n    maeMetric.className = 'metric-card';\n    \n    const maeTitle = document.createElement('div');\n    maeTitle.className = 'metric-title';\n    maeTitle.textContent = 'Mean Absolute Error';\n    \n    const maeValue = document.createElement('div');\n    maeValue.className = 'metric-value';\n    maeValue.textContent = `${metrics.mae.toFixed(2)} tons CO2e`;\n    \n    const maeQuality = document.createElement('div');\n    maeQuality.className = `metric-quality ${metrics.mae < 2 ? 'good' : metrics.mae < 5 ? 'average' : 'poor'}`;\n    maeQuality.textContent = metrics.mae < 2 ? 'Good' : metrics.mae < 5 ? 'Average' : 'Poor';\n    \n    const maeDescription = document.createElement('div');\n    maeDescription.className = 'metric-description';\n    maeDescription.textContent = 'Average absolute difference between forecast and actual values';\n    \n    maeMetric.appendChild(maeTitle);\n    maeMetric.appendChild(maeValue);\n    maeMetric.appendChild(maeQuality);\n    maeMetric.appendChild(maeDescription);\n    metricsContainer.appendChild(maeMetric);\n    \n    // RMSE Metric\n    const rmseMetric = document.createElement('div');\n    rmseMetric.className = 'metric-card';\n    \n    const rmseTitle = document.createElement('div');\n    rmseTitle.className = 'metric-title';\n    rmseTitle.textContent = 'Root Mean Square Error';\n    \n    const rmseValue = document.createElement('div');\n    rmseValue.className = 'metric-value';\n    rmseValue.textContent = `${metrics.rmse.toFixed(2)} tons CO2e`;\n    \n    const rmseQuality = document.createElement('div');\n    rmseQuality.className = `metric-quality ${metrics.rmse < 3 ? 'good' : metrics.rmse < 7 ? 'average' : 'poor'}`;\n    rmseQuality.textContent = metrics.rmse < 3 ? 'Good' : metrics.rmse < 7 ? 'Average' : 'Poor';\n    \n    const rmseDescription = document.createElement('div');\n    rmseDescription.className = 'metric-description';\n    rmseDescription.textContent = 'Square root of the average of squared differences';\n    \n    rmseMetric.appendChild(rmseTitle);\n    rmseMetric.appendChild(rmseValue);\n    rmseMetric.appendChild(rmseQuality);\n    rmseMetric.appendChild(rmseDescription);\n    metricsContainer.appendChild(rmseMetric);\n    \n    // MAPE Metric\n    const mapeMetric = document.createElement('div');\n    mapeMetric.className = 'metric-card';\n    \n    const mapeTitle = document.createElement('div');\n    mapeTitle.className = 'metric-title';\n    mapeTitle.textContent = 'Mean Absolute Percentage Error';\n    \n    const mapeValue = document.createElement('div');\n    mapeValue.className = 'metric-value';\n    mapeValue.textContent = `${metrics.mape.toFixed(2)}%`;\n    \n    const mapeQuality = document.createElement('div');\n    mapeQuality.className = `metric-quality ${metrics.mape < 10 ? 'good' : metrics.mape < 20 ? 'average' : 'poor'}`;\n    mapeQuality.textContent = metrics.mape < 10 ? 'Good' : metrics.mape < 20 ? 'Average' : 'Poor';\n    \n    const mapeDescription = document.createElement('div');\n    mapeDescription.className = 'metric-description';\n    mapeDescription.textContent = 'Average percentage difference between forecast and actual';\n    \n    mapeMetric.appendChild(mapeTitle);\n    mapeMetric.appendChild(mapeValue);\n    mapeMetric.appendChild(mapeQuality);\n    mapeMetric.appendChild(mapeDescription);\n    metricsContainer.appendChild(mapeMetric);\n    \n    // R-squared Metric\n    const r2Metric = document.createElement('div');\n    r2Metric.className = 'metric-card';\n    \n    const r2Title = document.createElement('div');\n    r2Title.className = 'metric-title';\n    r2Title.textContent = 'R-squared (R²)';\n    \n    const r2Value = document.createElement('div');\n    r2Value.className = 'metric-value';\n    r2Value.textContent = metrics.r2.toFixed(2);\n    \n    const r2Quality = document.createElement('div');\n    r2Quality.className = `metric-quality ${metrics.r2 > 0.8 ? 'good' : metrics.r2 > 0.6 ? 'average' : 'poor'}`;\n    r2Quality.textContent = metrics.r2 > 0.8 ? 'Good' : metrics.r2 > 0.6 ? 'Average' : 'Poor';\n    \n    const r2Description = document.createElement('div');\n    r2Description.className = 'metric-description';\n    r2Description.textContent = 'Proportion of variance explained by the model';\n    \n    r2Metric.appendChild(r2Title);\n    r2Metric.appendChild(r2Value);\n    r2Metric.appendChild(r2Quality);\n    r2Metric.appendChild(r2Description);\n    metricsContainer.appendChild(r2Metric);\n    \n    errorMetricsRef.current.appendChild(metricsContainer);\n    \n    // Add overall model assessment\n    const overallAssessment = document.createElement('div');\n    overallAssessment.className = 'overall-assessment';\n    \n    const assessmentTitle = document.createElement('h4');\n    assessmentTitle.textContent = 'Overall Model Assessment';\n    \n    const assessmentContent = document.createElement('div');\n    assessmentContent.className = 'assessment-content';\n    \n    // Calculate overall score (simple average of normalized metrics)\n    const maeScore = Math.min(1, Math.max(0, 1 - (metrics.mae / 10)));\n    const rmseScore = Math.min(1, Math.max(0, 1 - (metrics.rmse / 15)));\n    const mapeScore = Math.min(1, Math.max(0, 1 - (metrics.mape / 50)));\n    const r2Score = Math.min(1, Math.max(0, metrics.r2));\n    \n    const overallScore = (maeScore + rmseScore + mapeScore + r2Score) / 4;\n    const scorePercentage = Math.round(overallScore * 100);\n    \n    const scoreGauge = document.createElement('div');\n    scoreGauge.className = 'score-gauge';\n    \n    const scoreValue = document.createElement('div');\n    scoreValue.className = 'score-value';\n    scoreValue.textContent = `${scorePercentage}%`;\n    \n    const scoreBar = document.createElement('div');\n    scoreBar.className = 'score-bar';\n    \n    const scoreProgress = document.createElement('div');\n    scoreProgress.className = 'score-progress';\n    scoreProgress.style.width = `${scorePercentage}%`;\n    scoreProgress.style.backgroundColor = scorePercentage >= 80 ? '#00ff00' : \n                                         scorePercentage >= 60 ? '#ffff00' : '#ff0000';\n    \n    scoreBar.appendChild(scoreProgress);\n    scoreGauge.appendChild(scoreValue);\n    scoreGauge.appendChild(scoreBar);\n    \n    const assessmentText = document.createElement('p');\n    assessmentText.className = 'assessment-text';\n    \n    if (scorePercentage >= 80) {\n      assessmentText.textContent = 'The model is performing well with high accuracy. Predictions are reliable for decision-making.';\n    } else if (scorePercentage >= 60) {\n      assessmentText.textContent = 'The model is performing adequately. Predictions should be used with some caution.';\n    } else {\n      assessmentText.textContent = 'The model performance is below optimal levels. Consider retraining with more data or adjusting parameters.';\n    }\n    \n    assessmentContent.appendChild(scoreGauge);\n    assessmentContent.appendChild(assessmentText);\n    \n    overallAssessment.appendChild(assessmentTitle);\n    overallAssessment.appendChild(assessmentContent);\n    \n    errorMetricsRef.current.appendChild(overallAssessment);\n  };\n\n  const createErrorChart = (metrics) => {\n    if (!errorChartRef.current || !metrics.comparableData || metrics.comparableData.length === 0) return;\n    \n    // Destroy previous chart if it exists\n    if (errorChartInstance.current) {\n      errorChartInstance.current.destroy();\n      errorChartInstance.current = null;\n    }\n    \n    try {\n      const ctx = errorChartRef.current.getContext('2d');\n      \n      // Prepare data\n      const labels = metrics.comparableData.map(d => {\n        const date = new Date(d.date);\n        return date.toLocaleDateString('default', { month: 'short', year: 'numeric' });\n      });\n      \n      const actualValues = metrics.comparableData.map(d => d.actual);\n      const forecastValues = metrics.comparableData.map(d => d.forecast);\n      const errorValues = metrics.comparableData.map(d => d.error);\n      \n      // Create chart\n      errorChartInstance.current = new Chart(ctx, {\n        type: 'bar',\n        data: {\n          labels: labels,\n          datasets: [\n            {\n              type: 'line',\n              label: 'Actual Emissions',\n              data: actualValues,\n              borderColor: '#00FFFF',\n              backgroundColor: 'rgba(0, 255, 255, 0.1)',\n              borderWidth: 3,\n              pointBackgroundColor: '#00FFFF',\n              pointBorderColor: '#00FFFF',\n              pointRadius: 5,\n              pointHoverRadius: 7,\n              tension: 0.4,\n              yAxisID: 'y'\n            },\n            {\n              type: 'line',\n              label: 'Forecast Emissions',\n              data: forecastValues,\n              borderColor: '#FF00FF',\n              backgroundColor: 'rgba(255, 0, 255, 0.1)',\n              borderWidth: 3,\n              pointBackgroundColor: '#FF00FF',\n              pointBorderColor: '#FF00FF',\n              pointRadius: 5,\n              pointHoverRadius: 7,\n              tension: 0.4,\n              yAxisID: 'y'\n            },\n            {\n              type: 'bar',\n              label: 'Forecast Error',\n              data: errorValues,\n              backgroundColor: 'rgba(255, 165, 0, 0.6)',\n              borderColor: 'rgba(255, 165, 0, 0.8)',\n              borderWidth: 1,\n              yAxisID: 'y1'\n            }\n          ]\n        },\n        options: {\n          responsive: true,\n          maintainAspectRatio: false,\n          animation: {\n            duration: 2000,\n            easing: 'easeOutQuart'\n          },\n          scales: {\n            x: {\n              title: {\n                display: true,\n                text: 'Month',\n                color: '#ccc',\n                font: {\n                  family: 'Orbitron',\n                  size: 14\n                }\n              },\n              grid: {\n                color: 'rgba(255, 255, 255, 0.1)'\n              },\n              ticks: {\n                color: '#ccc',\n                font: {\n                  family: 'Roboto',\n                  size: 12\n                }\n              }\n            },\n            y: {\n              type: 'linear',\n              position: 'left',\n              title: {\n                display: true,\n                text: 'Emissions (tons CO2e)',\n                color: '#ccc',\n                font: {\n                  family: 'Orbitron',\n                  size: 14\n                }\n              },\n              grid: {\n                color: 'rgba(255, 255, 255, 0.1)'\n              },\n              ticks: {\n                color: '#ccc',\n                font: {\n                  family: 'Roboto',\n                  size: 12\n                }\n              }\n            },\n            y1: {\n              type: 'linear',\n              position: 'right',\n              title: {\n                display: true,\n                text: 'Error (tons CO2e)',\n                color: '#ccc',\n                font: {\n                  family: 'Orbitron',\n                  size: 14\n                }\n              },\n              grid: {\n                drawOnChartArea: false\n              },\n              ticks: {\n                color: '#ccc',\n                font: {\n                  family: 'Roboto',\n                  size: 12\n                }\n              }\n            }\n          },\n          plugins: {\n            title: {\n              display: true,\n              text: 'Forecast Performance Analysis',\n              color: '#fff',\n              font: {\n                family: 'Orbitron',\n                size: 18,\n                weight: 'bold'\n              },\n              padding: {\n                top: 10,\n                bottom: 30\n              }\n            },\n            legend: {\n              position: 'top',\n              labels: {\n                font: {\n                  family: 'Orbitron',\n                  size: 12\n                },\n                color: '#fff',\n                padding: 20\n              }\n            },\n            tooltip: {\n              enabled: true,\n              mode: 'index',\n              intersect: false,\n              backgroundColor: 'rgba(0, 0, 0, 0.8)',\n              titleFont: {\n                family: 'Orbitron',\n                size: 14\n              },\n              bodyFont: {\n                family: 'Roboto',\n                size: 13\n              },\n              borderColor: 'rgba(0, 255, 255, 0.3)',\n              borderWidth: 1\n            }\n          }\n        }\n      });\n    } catch (error) {\n      console.error(\"Error creating error chart:\", error);\n    }\n  };\n\n  return (\n    <div className=\"model-performance-container\">\n      <h3 className=\"section-title\">Model Performance Metrics</h3>\n      \n      <div className=\"error-metrics\" ref={errorMetricsRef}></div>\n      \n      <div className=\"performance-chart-container\">\n        <canvas ref={errorChartRef}></canvas>\n      </div>\n    </div>\n  );\n};\n\nexport default ModelPerformance;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}