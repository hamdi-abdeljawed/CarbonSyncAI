{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SETUP\\\\Desktop\\\\yap-t carbonsync ai\\\\frontend\\\\src\\\\components\\\\DataTable.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { useTable } from 'react-table';\nimport './DataTable.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DataTable = ({\n  data,\n  onDataUpdate,\n  summary,\n  readOnly = false,\n  isForecasted = false\n}) => {\n  _s();\n  const [tableData, setTableData] = useState([]);\n\n  // Initialize table data when data prop changes\n  useEffect(() => {\n    if (data && data.length > 0) {\n      setTableData(data);\n    } else {\n      setTableData([]);\n    }\n  }, [data]);\n\n  // Define columns based on data structure\n  const getColumns = useCallback(() => {\n    if (!tableData || tableData.length === 0) return [];\n    const firstRow = tableData[0];\n    const columns = Object.keys(firstRow).filter(key => key !== 'id') // Exclude id from display\n    .map(key => {\n      // Determine if column is numeric\n      const isNumeric = ['energy_use', 'transport', 'waste', 'water', 'fuel', 'emissions', 'production', 'grid_intensity', 'predicted_emissions', 'lower_bound', 'upper_bound'].includes(key);\n      return {\n        Header: key.split('_').map(word => word.charAt(0).toUpperCase() + word.slice(1)).join(' '),\n        accessor: key,\n        Cell: ({\n          value,\n          row,\n          column\n        }) => {\n          if (readOnly) {\n            // Format date if it's a date column\n            if (column.id === 'date' || column.id === 'ds') {\n              return new Date(value).toLocaleDateString();\n            }\n\n            // Format numeric values\n            if (isNumeric) {\n              return typeof value === 'number' ? value.toFixed(2) : value;\n            }\n            return value;\n          }\n          return /*#__PURE__*/_jsxDEV(\"input\", {\n            type: isNumeric ? 'number' : 'text',\n            value: value || '',\n            onChange: e => {\n              const updatedData = [...tableData];\n              const rowIndex = updatedData.findIndex(r => r.id === row.original.id);\n              if (rowIndex !== -1) {\n                updatedData[rowIndex] = {\n                  ...updatedData[rowIndex],\n                  [column.id]: isNumeric ? e.target.value === '' ? '' : parseFloat(e.target.value) : e.target.value\n                };\n                setTableData(updatedData);\n                if (onDataUpdate) onDataUpdate(updatedData);\n              }\n            },\n            className: `cell-input ${isNumeric ? 'numeric' : ''}`,\n            disabled: readOnly\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 15\n          }, this);\n        }\n      };\n    });\n    return columns;\n  }, [tableData, readOnly, onDataUpdate]);\n  const columns = React.useMemo(() => getColumns(), [getColumns]);\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow\n  } = useTable({\n    columns,\n    data: tableData\n  });\n\n  // Add a new row to the table\n  const handleAddRow = () => {\n    if (!tableData || tableData.length === 0) return;\n    const newRow = {};\n    const lastRow = tableData[tableData.length - 1];\n\n    // Initialize with empty values\n    Object.keys(lastRow).forEach(key => {\n      if (key === 'id') {\n        newRow[key] = Date.now(); // Use timestamp as unique id\n      } else if (key === 'date') {\n        // Set date to today\n        newRow[key] = new Date().toISOString().split('T')[0];\n      } else {\n        newRow[key] = '';\n      }\n    });\n    const updatedData = [...tableData, newRow];\n    setTableData(updatedData);\n    if (onDataUpdate) onDataUpdate(updatedData);\n  };\n\n  // Delete a row from the table\n  const handleDeleteRow = id => {\n    const updatedData = tableData.filter(row => row.id !== id);\n    setTableData(updatedData);\n    if (onDataUpdate) onDataUpdate(updatedData);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"data-table-container\",\n    children: [summary && !isForecasted && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"data-summary\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Data Summary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"summary-grid\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"summary-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"summary-label\",\n            children: \"Total Rows:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"summary-value\",\n            children: summary.total_rows\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"summary-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"summary-label\",\n            children: \"Departments:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"summary-value\",\n            children: summary.departments.join(', ')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"summary-stats\",\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"summary-table\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Metric\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 139,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Mean\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 140,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Min\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 141,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Max\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 142,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: Object.keys(summary.mean).map(key => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: key.split('_').map(word => word.charAt(0).toUpperCase() + word.slice(1)).join(' ')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 148,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: summary.mean[key].toFixed(2)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 149,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: summary.min[key].toFixed(2)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 150,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: summary.max[key].toFixed(2)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 151,\n                columnNumber: 21\n              }, this)]\n            }, key, true, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 9\n    }, this), tableData.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"table-wrapper\",\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        ...getTableProps(),\n        className: \"data-table\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: headerGroups.map(headerGroup => /*#__PURE__*/_jsxDEV(\"tr\", {\n            ...headerGroup.getHeaderGroupProps(),\n            children: [headerGroup.headers.map(column => /*#__PURE__*/_jsxDEV(\"th\", {\n              ...column.getHeaderProps(),\n              children: column.render('Header')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 21\n            }, this)), !readOnly && /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"action-column\",\n              children: \"Actions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          ...getTableBodyProps(),\n          children: rows.map(row => {\n            prepareRow(row);\n            return /*#__PURE__*/_jsxDEV(\"tr\", {\n              ...row.getRowProps(),\n              className: \"data-row\",\n              children: [row.cells.map(cell => /*#__PURE__*/_jsxDEV(\"td\", {\n                ...cell.getCellProps(),\n                className: isForecasted && cell.column.id === 'predicted_emissions' ? 'highlighted-cell' : '',\n                children: cell.render('Cell')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 183,\n                columnNumber: 23\n              }, this)), !readOnly && /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"action-column\",\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"delete-btn\",\n                  onClick: () => handleDeleteRow(row.original.id),\n                  children: \"\\xD7\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 189,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 188,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 19\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"no-data\",\n      children: \"No data available. Upload a file or add data manually.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 9\n    }, this), !readOnly && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"table-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-secondary\",\n        onClick: handleAddRow,\n        children: \"Add Row\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 121,\n    columnNumber: 5\n  }, this);\n};\n_s(DataTable, \"Gs+3T7zOaVRC82wrnBW8ZVMuC6Q=\", false, function () {\n  return [useTable];\n});\n_c = DataTable;\nexport default DataTable;\nvar _c;\n$RefreshReg$(_c, \"DataTable\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","useTable","jsxDEV","_jsxDEV","DataTable","data","onDataUpdate","summary","readOnly","isForecasted","_s","tableData","setTableData","length","getColumns","firstRow","columns","Object","keys","filter","key","map","isNumeric","includes","Header","split","word","charAt","toUpperCase","slice","join","accessor","Cell","value","row","column","id","Date","toLocaleDateString","toFixed","type","onChange","e","updatedData","rowIndex","findIndex","r","original","target","parseFloat","className","disabled","fileName","_jsxFileName","lineNumber","columnNumber","useMemo","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","handleAddRow","newRow","lastRow","forEach","now","toISOString","handleDeleteRow","children","total_rows","departments","mean","min","max","headerGroup","getHeaderGroupProps","headers","getHeaderProps","render","getRowProps","cells","cell","getCellProps","onClick","_c","$RefreshReg$"],"sources":["C:/Users/SETUP/Desktop/yap-t carbonsync ai/frontend/src/components/DataTable.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport { useTable } from 'react-table';\nimport './DataTable.css';\n\nconst DataTable = ({ data, onDataUpdate, summary, readOnly = false, isForecasted = false }) => {\n  const [tableData, setTableData] = useState([]);\n  \n  // Initialize table data when data prop changes\n  useEffect(() => {\n    if (data && data.length > 0) {\n      setTableData(data);\n    } else {\n      setTableData([]);\n    }\n  }, [data]);\n\n  // Define columns based on data structure\n  const getColumns = useCallback(() => {\n    if (!tableData || tableData.length === 0) return [];\n    \n    const firstRow = tableData[0];\n    const columns = Object.keys(firstRow)\n      .filter(key => key !== 'id') // Exclude id from display\n      .map(key => {\n        // Determine if column is numeric\n        const isNumeric = ['energy_use', 'transport', 'waste', 'water', 'fuel', \n                           'emissions', 'production', 'grid_intensity', \n                           'predicted_emissions', 'lower_bound', 'upper_bound'].includes(key);\n        \n        return {\n          Header: key.split('_').map(word => word.charAt(0).toUpperCase() + word.slice(1)).join(' '),\n          accessor: key,\n          Cell: ({ value, row, column }) => {\n            if (readOnly) {\n              // Format date if it's a date column\n              if (column.id === 'date' || column.id === 'ds') {\n                return new Date(value).toLocaleDateString();\n              }\n              \n              // Format numeric values\n              if (isNumeric) {\n                return typeof value === 'number' ? value.toFixed(2) : value;\n              }\n              \n              return value;\n            }\n            \n            return (\n              <input\n                type={isNumeric ? 'number' : 'text'}\n                value={value || ''}\n                onChange={e => {\n                  const updatedData = [...tableData];\n                  const rowIndex = updatedData.findIndex(r => r.id === row.original.id);\n                  \n                  if (rowIndex !== -1) {\n                    updatedData[rowIndex] = {\n                      ...updatedData[rowIndex],\n                      [column.id]: isNumeric ? \n                        (e.target.value === '' ? '' : parseFloat(e.target.value)) : \n                        e.target.value\n                    };\n                    \n                    setTableData(updatedData);\n                    if (onDataUpdate) onDataUpdate(updatedData);\n                  }\n                }}\n                className={`cell-input ${isNumeric ? 'numeric' : ''}`}\n                disabled={readOnly}\n              />\n            );\n          }\n        };\n      });\n    \n    return columns;\n  }, [tableData, readOnly, onDataUpdate]);\n\n  const columns = React.useMemo(() => getColumns(), [getColumns]);\n  \n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow,\n  } = useTable({ columns, data: tableData });\n\n  // Add a new row to the table\n  const handleAddRow = () => {\n    if (!tableData || tableData.length === 0) return;\n    \n    const newRow = {};\n    const lastRow = tableData[tableData.length - 1];\n    \n    // Initialize with empty values\n    Object.keys(lastRow).forEach(key => {\n      if (key === 'id') {\n        newRow[key] = Date.now(); // Use timestamp as unique id\n      } else if (key === 'date') {\n        // Set date to today\n        newRow[key] = new Date().toISOString().split('T')[0];\n      } else {\n        newRow[key] = '';\n      }\n    });\n    \n    const updatedData = [...tableData, newRow];\n    setTableData(updatedData);\n    if (onDataUpdate) onDataUpdate(updatedData);\n  };\n\n  // Delete a row from the table\n  const handleDeleteRow = (id) => {\n    const updatedData = tableData.filter(row => row.id !== id);\n    setTableData(updatedData);\n    if (onDataUpdate) onDataUpdate(updatedData);\n  };\n\n  return (\n    <div className=\"data-table-container\">\n      {summary && !isForecasted && (\n        <div className=\"data-summary\">\n          <h3>Data Summary</h3>\n          <div className=\"summary-grid\">\n            <div className=\"summary-item\">\n              <span className=\"summary-label\">Total Rows:</span>\n              <span className=\"summary-value\">{summary.total_rows}</span>\n            </div>\n            <div className=\"summary-item\">\n              <span className=\"summary-label\">Departments:</span>\n              <span className=\"summary-value\">{summary.departments.join(', ')}</span>\n            </div>\n          </div>\n          <div className=\"summary-stats\">\n            <table className=\"summary-table\">\n              <thead>\n                <tr>\n                  <th>Metric</th>\n                  <th>Mean</th>\n                  <th>Min</th>\n                  <th>Max</th>\n                </tr>\n              </thead>\n              <tbody>\n                {Object.keys(summary.mean).map(key => (\n                  <tr key={key}>\n                    <td>{key.split('_').map(word => word.charAt(0).toUpperCase() + word.slice(1)).join(' ')}</td>\n                    <td>{summary.mean[key].toFixed(2)}</td>\n                    <td>{summary.min[key].toFixed(2)}</td>\n                    <td>{summary.max[key].toFixed(2)}</td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          </div>\n        </div>\n      )}\n      \n      {tableData.length > 0 ? (\n        <div className=\"table-wrapper\">\n          <table {...getTableProps()} className=\"data-table\">\n            <thead>\n              {headerGroups.map(headerGroup => (\n                <tr {...headerGroup.getHeaderGroupProps()}>\n                  {headerGroup.headers.map(column => (\n                    <th {...column.getHeaderProps()}>\n                      {column.render('Header')}\n                    </th>\n                  ))}\n                  {!readOnly && (\n                    <th className=\"action-column\">Actions</th>\n                  )}\n                </tr>\n              ))}\n            </thead>\n            <tbody {...getTableBodyProps()}>\n              {rows.map(row => {\n                prepareRow(row);\n                return (\n                  <tr {...row.getRowProps()} className=\"data-row\">\n                    {row.cells.map(cell => (\n                      <td {...cell.getCellProps()} className={isForecasted && cell.column.id === 'predicted_emissions' ? 'highlighted-cell' : ''}>\n                        {cell.render('Cell')}\n                      </td>\n                    ))}\n                    {!readOnly && (\n                      <td className=\"action-column\">\n                        <button \n                          className=\"delete-btn\" \n                          onClick={() => handleDeleteRow(row.original.id)}\n                        >\n                          ×\n                        </button>\n                      </td>\n                    )}\n                  </tr>\n                );\n              })}\n            </tbody>\n          </table>\n        </div>\n      ) : (\n        <div className=\"no-data\">No data available. Upload a file or add data manually.</div>\n      )}\n      \n      {!readOnly && (\n        <div className=\"table-actions\">\n          <button className=\"btn btn-secondary\" onClick={handleAddRow}>\n            Add Row\n          </button>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default DataTable;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}