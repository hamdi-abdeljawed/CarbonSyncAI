{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SETUP\\\\Desktop\\\\yap-t carbonsync ai\\\\frontend\\\\src\\\\components\\\\DataTable.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback, useMemo } from 'react';\nimport { useTable } from 'react-table';\nimport './DataTable.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DataTable = ({\n  data,\n  onDataUpdate,\n  summary,\n  readOnly = false,\n  isForecasted = false\n}) => {\n  _s();\n  const [tableData, setTableData] = useState([]);\n  const [updateTimeout, setUpdateTimeout] = useState(null);\n  const [showSummary, setShowSummary] = useState(true);\n\n  // Initialize table data when data prop changes\n  useEffect(() => {\n    if (data && data.length > 0) {\n      setTableData(data);\n    } else {\n      setTableData([]);\n    }\n  }, [data]);\n\n  // Function to update parent component with debounce\n  const updateParent = useCallback(newData => {\n    if (updateTimeout) {\n      clearTimeout(updateTimeout);\n    }\n    const timeoutId = setTimeout(() => {\n      if (onDataUpdate) {\n        onDataUpdate(newData);\n      }\n    }, 300); // Reduced debounce time for better responsiveness\n\n    setUpdateTimeout(timeoutId);\n  }, [onDataUpdate, updateTimeout]);\n\n  // Clean up timeout on unmount\n  useEffect(() => {\n    return () => {\n      if (updateTimeout) {\n        clearTimeout(updateTimeout);\n      }\n    };\n  }, [updateTimeout]);\n\n  // Handle cell value change\n  const handleCellChange = useCallback((rowId, columnId, value, isNumeric) => {\n    setTableData(prevData => {\n      const newData = prevData.map(row => {\n        if (row.id === rowId) {\n          return {\n            ...row,\n            [columnId]: value\n          };\n        }\n        return row;\n      });\n      return newData;\n    });\n\n    // Only update parent after a short delay to prevent cursor jumping\n    const timer = setTimeout(() => {\n      setTableData(prevData => {\n        const formattedData = prevData.map(row => {\n          const newRow = {\n            ...row\n          };\n\n          // Format numeric fields only when updating parent\n          if (row.id === rowId && isNumeric && value !== '') {\n            newRow[columnId] = parseFloat(value);\n          }\n          return newRow;\n        });\n        updateParent(formattedData);\n        return formattedData;\n      });\n    }, 200); // Reduced delay for better responsiveness\n\n    return () => clearTimeout(timer);\n  }, [updateParent]);\n\n  // Define columns based on data structure with improved headers\n  const columns = useMemo(() => {\n    if (!tableData || tableData.length === 0) return [];\n    const firstRow = tableData[0];\n    return Object.keys(firstRow).filter(key => key !== 'id') // Exclude id from display\n    .map(key => {\n      // Determine if column is numeric\n      const isNumeric = ['energy_kwh', 'production_units', 'transport_km', 'waste_kg', 'water_m3', 'fuel_l', 'grid_intensity', 'y', 'predicted_emissions', 'lower_bound', 'upper_bound'].includes(key);\n\n      // Format header with units\n      let header = key;\n      if (key === 'date' || key === 'ds') {\n        header = 'Date';\n      } else if (key === 'energy_kwh') {\n        header = 'Energy Use (kWh)';\n      } else if (key === 'transport_km') {\n        header = 'Transport (km)';\n      } else if (key === 'waste_kg') {\n        header = 'Waste (tons)';\n      } else if (key === 'water_m3') {\n        header = 'Water (liters)';\n      } else if (key === 'fuel_l') {\n        header = 'Fuel (liters)';\n      } else if (key === 'y') {\n        header = 'Emissions (tons CO2e)';\n      } else if (key === 'production_units') {\n        header = 'Production (units)';\n      } else if (key === 'grid_intensity') {\n        header = 'Grid Intensity (kg CO2e/kWh)';\n      } else {\n        header = key.split('_').map(word => word.charAt(0).toUpperCase() + word.slice(1)).join(' ');\n      }\n      return {\n        Header: header,\n        accessor: key,\n        Cell: ({\n          value,\n          row\n        }) => {\n          if (readOnly) {\n            // Format date if it's a date column\n            if (key === 'date' || key === 'ds') {\n              return new Date(value).toLocaleDateString();\n            }\n\n            // Format numeric values\n            if (isNumeric) {\n              return typeof value === 'number' ? value.toFixed(2) : value;\n            }\n            return value;\n          }\n          return /*#__PURE__*/_jsxDEV(\"input\", {\n            type: isNumeric ? 'text' : 'text' // Use text for all to prevent browser validation\n            ,\n            value: value || '',\n            onChange: e => handleCellChange(row.original.id, key, e.target.value, isNumeric),\n            onBlur: e => {\n              if (isNumeric && e.target.value !== '') {\n                // Format on blur\n                const numValue = parseFloat(e.target.value);\n                if (!isNaN(numValue)) {\n                  handleCellChange(row.original.id, key, numValue, isNumeric);\n                }\n              }\n            },\n            className: `cell-input ${isNumeric ? 'numeric' : ''} ${isNumeric && value !== '' && isNaN(parseFloat(value)) ? 'invalid' : ''}`,\n            disabled: readOnly\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 15\n          }, this);\n        }\n      };\n    });\n  }, [tableData, readOnly, handleCellChange]);\n\n  // Create table instance\n  const tableInstance = useTable({\n    columns,\n    data: tableData\n  });\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow\n  } = tableInstance;\n\n  // Add a new row to the table\n  const handleAddRow = useCallback(() => {\n    if (!tableData || tableData.length === 0) return;\n    const newRow = {};\n    const lastRow = tableData[tableData.length - 1];\n\n    // Initialize with empty values\n    Object.keys(lastRow).forEach(key => {\n      if (key === 'id') {\n        newRow[key] = Date.now(); // Use timestamp as unique id\n      } else if (key === 'date' || key === 'ds') {\n        // Set date to today\n        newRow[key] = new Date().toISOString().split('T')[0];\n      } else {\n        newRow[key] = '';\n      }\n    });\n    const newData = [...tableData, newRow];\n    setTableData(newData);\n    // Don't update parent immediately to prevent cursor issues\n    setTimeout(() => updateParent(newData), 100);\n  }, [tableData, updateParent]);\n\n  // Delete a row from the table\n  const handleDeleteRow = useCallback(id => {\n    const newData = tableData.filter(row => row.id !== id);\n    setTableData(newData);\n    updateParent(newData);\n  }, [tableData, updateParent]);\n\n  // Toggle summary visibility\n  const toggleSummary = () => {\n    setShowSummary(!showSummary);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"data-table-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"table-controls\",\n      children: [!readOnly && /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"add-row-btn\",\n        onClick: handleAddRow,\n        children: \"Add Row\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 11\n      }, this), summary && !isForecasted && /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"toggle-summary-btn\",\n        onClick: toggleSummary,\n        children: showSummary ? 'Hide Summary' : 'Show Summary'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"table-wrapper\",\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        ...getTableProps(),\n        className: \"data-table\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: headerGroups.map(headerGroup => /*#__PURE__*/_jsxDEV(\"tr\", {\n            ...headerGroup.getHeaderGroupProps(),\n            children: [headerGroup.headers.map(column => /*#__PURE__*/_jsxDEV(\"th\", {\n              ...column.getHeaderProps(),\n              children: column.render('Header')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 230,\n              columnNumber: 19\n            }, this)), !readOnly && /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"action-column\",\n              children: \"Actions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 232,\n              columnNumber: 31\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          ...getTableBodyProps(),\n          children: rows.map(row => {\n            prepareRow(row);\n            return /*#__PURE__*/_jsxDEV(\"tr\", {\n              ...row.getRowProps(),\n              children: [row.cells.map(cell => /*#__PURE__*/_jsxDEV(\"td\", {\n                ...cell.getCellProps(),\n                children: cell.render('Cell')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 242,\n                columnNumber: 21\n              }, this)), !readOnly && /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"action-cell\",\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"delete-row-btn\",\n                  onClick: () => handleDeleteRow(row.original.id),\n                  children: \"Delete\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 246,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 245,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 240,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 7\n    }, this), summary && !isForecasted && showSummary && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"data-summary-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Data Summary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"summary-stats\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"summary-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"summary-label\",\n            children: \"Total Rows:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"summary-value\",\n            children: summary.total_rows\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"summary-metrics\",\n          children: summary.mean && Object.keys(summary.mean).map(key => {\n            var _summary$std$key;\n            let displayKey = key;\n            let unit = '';\n\n            // Format key name and add units\n            if (key === 'energy_kwh') {\n              displayKey = 'Energy Use';\n              unit = 'kWh';\n            } else if (key === 'transport_km') {\n              displayKey = 'Transport';\n              unit = 'km';\n            } else if (key === 'waste_kg') {\n              displayKey = 'Waste';\n              unit = 'tons';\n            } else if (key === 'water_m3') {\n              displayKey = 'Water';\n              unit = 'liters';\n            } else if (key === 'fuel_l') {\n              displayKey = 'Fuel';\n              unit = 'liters';\n            } else if (key === 'y') {\n              displayKey = 'Emissions';\n              unit = 'tons CO2e';\n            } else if (key === 'production_units') {\n              displayKey = 'Production';\n              unit = 'units';\n            } else if (key === 'grid_intensity') {\n              displayKey = 'Grid Intensity';\n              unit = 'kg CO2e/kWh';\n            }\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"metric-card\",\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                children: displayKey\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 304,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"metric-row\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"metric-label\",\n                  children: \"Mean:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 306,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"metric-value\",\n                  children: [summary.mean[key].toFixed(2), \" \", unit]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 307,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 305,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"metric-row\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"metric-label\",\n                  children: \"Min:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 310,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"metric-value\",\n                  children: [summary.min[key].toFixed(2), \" \", unit]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 311,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 309,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"metric-row\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"metric-label\",\n                  children: \"Max:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 314,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"metric-value\",\n                  children: [summary.max[key].toFixed(2), \" \", unit]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 315,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 313,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"metric-row\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"metric-label\",\n                  children: \"Std Dev:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 318,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"metric-value\",\n                  children: [summary.std ? ((_summary$std$key = summary.std[key]) === null || _summary$std$key === void 0 ? void 0 : _summary$std$key.toFixed(2)) || 'N/A' : 'N/A', \" \", unit]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 319,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 317,\n                columnNumber: 21\n              }, this)]\n            }, key, true, {\n              fileName: _jsxFileName,\n              lineNumber: 303,\n              columnNumber: 19\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 210,\n    columnNumber: 5\n  }, this);\n};\n_s(DataTable, \"kNQ+MAji7qFsun7gh3swmQ1XHOA=\", false, function () {\n  return [useTable];\n});\n_c = DataTable;\nexport default DataTable;\nvar _c;\n$RefreshReg$(_c, \"DataTable\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","useMemo","useTable","jsxDEV","_jsxDEV","DataTable","data","onDataUpdate","summary","readOnly","isForecasted","_s","tableData","setTableData","updateTimeout","setUpdateTimeout","showSummary","setShowSummary","length","updateParent","newData","clearTimeout","timeoutId","setTimeout","handleCellChange","rowId","columnId","value","isNumeric","prevData","map","row","id","timer","formattedData","newRow","parseFloat","columns","firstRow","Object","keys","filter","key","includes","header","split","word","charAt","toUpperCase","slice","join","Header","accessor","Cell","Date","toLocaleDateString","toFixed","type","onChange","e","original","target","onBlur","numValue","isNaN","className","disabled","fileName","_jsxFileName","lineNumber","columnNumber","tableInstance","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","handleAddRow","lastRow","forEach","now","toISOString","handleDeleteRow","toggleSummary","children","onClick","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","render","getRowProps","cells","cell","getCellProps","total_rows","mean","_summary$std$key","displayKey","unit","min","max","std","_c","$RefreshReg$"],"sources":["C:/Users/SETUP/Desktop/yap-t carbonsync ai/frontend/src/components/DataTable.js"],"sourcesContent":["import React, { useState, useEffect, useCallback, useMemo } from 'react';\nimport { useTable } from 'react-table';\nimport './DataTable.css';\n\nconst DataTable = ({ data, onDataUpdate, summary, readOnly = false, isForecasted = false }) => {\n  const [tableData, setTableData] = useState([]);\n  const [updateTimeout, setUpdateTimeout] = useState(null);\n  const [showSummary, setShowSummary] = useState(true);\n  \n  // Initialize table data when data prop changes\n  useEffect(() => {\n    if (data && data.length > 0) {\n      setTableData(data);\n    } else {\n      setTableData([]);\n    }\n  }, [data]);\n\n  // Function to update parent component with debounce\n  const updateParent = useCallback((newData) => {\n    if (updateTimeout) {\n      clearTimeout(updateTimeout);\n    }\n    \n    const timeoutId = setTimeout(() => {\n      if (onDataUpdate) {\n        onDataUpdate(newData);\n      }\n    }, 300); // Reduced debounce time for better responsiveness\n    \n    setUpdateTimeout(timeoutId);\n  }, [onDataUpdate, updateTimeout]);\n\n  // Clean up timeout on unmount\n  useEffect(() => {\n    return () => {\n      if (updateTimeout) {\n        clearTimeout(updateTimeout);\n      }\n    };\n  }, [updateTimeout]);\n\n  // Handle cell value change\n  const handleCellChange = useCallback((rowId, columnId, value, isNumeric) => {\n    setTableData(prevData => {\n      const newData = prevData.map(row => {\n        if (row.id === rowId) {\n          return {\n            ...row,\n            [columnId]: value\n          };\n        }\n        return row;\n      });\n      \n      return newData;\n    });\n    \n    // Only update parent after a short delay to prevent cursor jumping\n    const timer = setTimeout(() => {\n      setTableData(prevData => {\n        const formattedData = prevData.map(row => {\n          const newRow = {...row};\n          \n          // Format numeric fields only when updating parent\n          if (row.id === rowId && isNumeric && value !== '') {\n            newRow[columnId] = parseFloat(value);\n          }\n          \n          return newRow;\n        });\n        \n        updateParent(formattedData);\n        return formattedData;\n      });\n    }, 200); // Reduced delay for better responsiveness\n    \n    return () => clearTimeout(timer);\n  }, [updateParent]);\n\n  // Define columns based on data structure with improved headers\n  const columns = useMemo(() => {\n    if (!tableData || tableData.length === 0) return [];\n    \n    const firstRow = tableData[0];\n    return Object.keys(firstRow)\n      .filter(key => key !== 'id') // Exclude id from display\n      .map(key => {\n        // Determine if column is numeric\n        const isNumeric = ['energy_kwh', 'production_units', 'transport_km', 'waste_kg', \n                           'water_m3', 'fuel_l', 'grid_intensity', 'y', \n                           'predicted_emissions', 'lower_bound', 'upper_bound'].includes(key);\n        \n        // Format header with units\n        let header = key;\n        if (key === 'date' || key === 'ds') {\n          header = 'Date';\n        } else if (key === 'energy_kwh') {\n          header = 'Energy Use (kWh)';\n        } else if (key === 'transport_km') {\n          header = 'Transport (km)';\n        } else if (key === 'waste_kg') {\n          header = 'Waste (tons)';\n        } else if (key === 'water_m3') {\n          header = 'Water (liters)';\n        } else if (key === 'fuel_l') {\n          header = 'Fuel (liters)';\n        } else if (key === 'y') {\n          header = 'Emissions (tons CO2e)';\n        } else if (key === 'production_units') {\n          header = 'Production (units)';\n        } else if (key === 'grid_intensity') {\n          header = 'Grid Intensity (kg CO2e/kWh)';\n        } else {\n          header = key.split('_').map(word => word.charAt(0).toUpperCase() + word.slice(1)).join(' ');\n        }\n        \n        return {\n          Header: header,\n          accessor: key,\n          Cell: ({ value, row }) => {\n            if (readOnly) {\n              // Format date if it's a date column\n              if (key === 'date' || key === 'ds') {\n                return new Date(value).toLocaleDateString();\n              }\n              \n              // Format numeric values\n              if (isNumeric) {\n                return typeof value === 'number' ? value.toFixed(2) : value;\n              }\n              \n              return value;\n            }\n            \n            return (\n              <input\n                type={isNumeric ? 'text' : 'text'} // Use text for all to prevent browser validation\n                value={value || ''}\n                onChange={e => handleCellChange(row.original.id, key, e.target.value, isNumeric)}\n                onBlur={e => {\n                  if (isNumeric && e.target.value !== '') {\n                    // Format on blur\n                    const numValue = parseFloat(e.target.value);\n                    if (!isNaN(numValue)) {\n                      handleCellChange(row.original.id, key, numValue, isNumeric);\n                    }\n                  }\n                }}\n                className={`cell-input ${isNumeric ? 'numeric' : ''} ${\n                  isNumeric && value !== '' && isNaN(parseFloat(value)) ? 'invalid' : ''\n                }`}\n                disabled={readOnly}\n              />\n            );\n          }\n        };\n      });\n  }, [tableData, readOnly, handleCellChange]);\n\n  // Create table instance\n  const tableInstance = useTable({ columns, data: tableData });\n  \n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow,\n  } = tableInstance;\n\n  // Add a new row to the table\n  const handleAddRow = useCallback(() => {\n    if (!tableData || tableData.length === 0) return;\n    \n    const newRow = {};\n    const lastRow = tableData[tableData.length - 1];\n    \n    // Initialize with empty values\n    Object.keys(lastRow).forEach(key => {\n      if (key === 'id') {\n        newRow[key] = Date.now(); // Use timestamp as unique id\n      } else if (key === 'date' || key === 'ds') {\n        // Set date to today\n        newRow[key] = new Date().toISOString().split('T')[0];\n      } else {\n        newRow[key] = '';\n      }\n    });\n    \n    const newData = [...tableData, newRow];\n    setTableData(newData);\n    // Don't update parent immediately to prevent cursor issues\n    setTimeout(() => updateParent(newData), 100);\n  }, [tableData, updateParent]);\n\n  // Delete a row from the table\n  const handleDeleteRow = useCallback((id) => {\n    const newData = tableData.filter(row => row.id !== id);\n    setTableData(newData);\n    updateParent(newData);\n  }, [tableData, updateParent]);\n\n  // Toggle summary visibility\n  const toggleSummary = () => {\n    setShowSummary(!showSummary);\n  };\n\n  return (\n    <div className=\"data-table-container\">\n      <div className=\"table-controls\">\n        {!readOnly && (\n          <button className=\"add-row-btn\" onClick={handleAddRow}>\n            Add Row\n          </button>\n        )}\n        {summary && !isForecasted && (\n          <button className=\"toggle-summary-btn\" onClick={toggleSummary}>\n            {showSummary ? 'Hide Summary' : 'Show Summary'}\n          </button>\n        )}\n      </div>\n      \n      <div className=\"table-wrapper\">\n        <table {...getTableProps()} className=\"data-table\">\n          <thead>\n            {headerGroups.map(headerGroup => (\n              <tr {...headerGroup.getHeaderGroupProps()}>\n                {headerGroup.headers.map(column => (\n                  <th {...column.getHeaderProps()}>{column.render('Header')}</th>\n                ))}\n                {!readOnly && <th className=\"action-column\">Actions</th>}\n              </tr>\n            ))}\n          </thead>\n          <tbody {...getTableBodyProps()}>\n            {rows.map(row => {\n              prepareRow(row);\n              return (\n                <tr {...row.getRowProps()}>\n                  {row.cells.map(cell => (\n                    <td {...cell.getCellProps()}>{cell.render('Cell')}</td>\n                  ))}\n                  {!readOnly && (\n                    <td className=\"action-cell\">\n                      <button \n                        className=\"delete-row-btn\" \n                        onClick={() => handleDeleteRow(row.original.id)}\n                      >\n                        Delete\n                      </button>\n                    </td>\n                  )}\n                </tr>\n              );\n            })}\n          </tbody>\n        </table>\n      </div>\n      \n      {summary && !isForecasted && showSummary && (\n        <div className=\"data-summary-card\">\n          <h3>Data Summary</h3>\n          <div className=\"summary-stats\">\n            <div className=\"summary-item\">\n              <span className=\"summary-label\">Total Rows:</span>\n              <span className=\"summary-value\">{summary.total_rows}</span>\n            </div>\n            \n            <div className=\"summary-metrics\">\n              {summary.mean && Object.keys(summary.mean).map(key => {\n                let displayKey = key;\n                let unit = '';\n                \n                // Format key name and add units\n                if (key === 'energy_kwh') {\n                  displayKey = 'Energy Use';\n                  unit = 'kWh';\n                } else if (key === 'transport_km') {\n                  displayKey = 'Transport';\n                  unit = 'km';\n                } else if (key === 'waste_kg') {\n                  displayKey = 'Waste';\n                  unit = 'tons';\n                } else if (key === 'water_m3') {\n                  displayKey = 'Water';\n                  unit = 'liters';\n                } else if (key === 'fuel_l') {\n                  displayKey = 'Fuel';\n                  unit = 'liters';\n                } else if (key === 'y') {\n                  displayKey = 'Emissions';\n                  unit = 'tons CO2e';\n                } else if (key === 'production_units') {\n                  displayKey = 'Production';\n                  unit = 'units';\n                } else if (key === 'grid_intensity') {\n                  displayKey = 'Grid Intensity';\n                  unit = 'kg CO2e/kWh';\n                }\n                \n                return (\n                  <div key={key} className=\"metric-card\">\n                    <h4>{displayKey}</h4>\n                    <div className=\"metric-row\">\n                      <span className=\"metric-label\">Mean:</span>\n                      <span className=\"metric-value\">{summary.mean[key].toFixed(2)} {unit}</span>\n                    </div>\n                    <div className=\"metric-row\">\n                      <span className=\"metric-label\">Min:</span>\n                      <span className=\"metric-value\">{summary.min[key].toFixed(2)} {unit}</span>\n                    </div>\n                    <div className=\"metric-row\">\n                      <span className=\"metric-label\">Max:</span>\n                      <span className=\"metric-value\">{summary.max[key].toFixed(2)} {unit}</span>\n                    </div>\n                    <div className=\"metric-row\">\n                      <span className=\"metric-label\">Std Dev:</span>\n                      <span className=\"metric-value\">\n                        {summary.std ? summary.std[key]?.toFixed(2) || 'N/A' : 'N/A'} {unit}\n                      </span>\n                    </div>\n                  </div>\n                );\n              })}\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default DataTable;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}