{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SETUP\\\\Desktop\\\\yap-t carbonsync ai\\\\frontend\\\\src\\\\components\\\\DataTable.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback, useMemo } from 'react';\nimport { useTable } from 'react-table';\nimport './DataTable.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DataTable = ({\n  data,\n  onDataUpdate,\n  summary,\n  readOnly = false,\n  isForecasted = false\n}) => {\n  _s();\n  const [tableData, setTableData] = useState([]);\n  const [updateTimeout, setUpdateTimeout] = useState(null);\n\n  // Initialize table data when data prop changes\n  useEffect(() => {\n    if (data && data.length > 0) {\n      setTableData(data);\n    } else {\n      setTableData([]);\n    }\n  }, [data]);\n\n  // Function to update parent component with debounce\n  const updateParent = useCallback(newData => {\n    if (updateTimeout) {\n      clearTimeout(updateTimeout);\n    }\n    const timeoutId = setTimeout(() => {\n      if (onDataUpdate) {\n        onDataUpdate(newData);\n      }\n    }, 1000); // Increased debounce time to reduce re-renders\n\n    setUpdateTimeout(timeoutId);\n  }, [onDataUpdate, updateTimeout]);\n\n  // Clean up timeout on unmount\n  useEffect(() => {\n    return () => {\n      if (updateTimeout) {\n        clearTimeout(updateTimeout);\n      }\n    };\n  }, [updateTimeout]);\n\n  // Handle cell value change\n  const handleCellChange = useCallback((rowId, columnId, value, isNumeric) => {\n    setTableData(prevData => {\n      const newData = prevData.map(row => {\n        if (row.id === rowId) {\n          // Only convert to number on blur or when updating parent\n          return {\n            ...row,\n            [columnId]: value\n          };\n        }\n        return row;\n      });\n      return newData;\n    });\n\n    // Only update parent after a delay to prevent cursor jumping\n    const timer = setTimeout(() => {\n      setTableData(prevData => {\n        const formattedData = prevData.map(row => {\n          const newRow = {\n            ...row\n          };\n\n          // Format numeric fields only when updating parent\n          if (row.id === rowId && isNumeric && value !== '') {\n            newRow[columnId] = parseFloat(value);\n          }\n          return newRow;\n        });\n        updateParent(formattedData);\n        return formattedData;\n      });\n    }, 500);\n    return () => clearTimeout(timer);\n  }, [updateParent]);\n\n  // Define columns based on data structure\n  const columns = useMemo(() => {\n    if (!tableData || tableData.length === 0) return [];\n    const firstRow = tableData[0];\n    return Object.keys(firstRow).filter(key => key !== 'id') // Exclude id from display\n    .map(key => {\n      // Determine if column is numeric\n      const isNumeric = ['energy_kwh', 'production_units', 'transport_km', 'waste_kg', 'water_m3', 'fuel_l', 'grid_intensity', 'y', 'predicted_emissions', 'lower_bound', 'upper_bound'].includes(key);\n      return {\n        Header: key.split('_').map(word => word.charAt(0).toUpperCase() + word.slice(1)).join(' '),\n        accessor: key,\n        Cell: ({\n          value,\n          row\n        }) => {\n          if (readOnly) {\n            // Format date if it's a date column\n            if (key === 'date' || key === 'ds') {\n              return new Date(value).toLocaleDateString();\n            }\n\n            // Format numeric values\n            if (isNumeric) {\n              return typeof value === 'number' ? value.toFixed(2) : value;\n            }\n            return value;\n          }\n          return /*#__PURE__*/_jsxDEV(\"input\", {\n            type: isNumeric ? 'text' : 'text' // Use text for all to prevent browser validation\n            ,\n            value: value || '',\n            onChange: e => handleCellChange(row.original.id, key, e.target.value, isNumeric),\n            onBlur: e => {\n              if (isNumeric && e.target.value !== '') {\n                // Format on blur\n                const numValue = parseFloat(e.target.value);\n                if (!isNaN(numValue)) {\n                  handleCellChange(row.original.id, key, numValue, isNumeric);\n                }\n              }\n            },\n            className: `cell-input ${isNumeric ? 'numeric' : ''}`,\n            disabled: readOnly\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 15\n          }, this);\n        }\n      };\n    });\n  }, [tableData, readOnly, handleCellChange]);\n\n  // Create table instance\n  const tableInstance = useTable({\n    columns,\n    data: tableData\n  });\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow\n  } = tableInstance;\n\n  // Add a new row to the table\n  const handleAddRow = useCallback(() => {\n    if (!tableData || tableData.length === 0) return;\n    const newRow = {};\n    const lastRow = tableData[tableData.length - 1];\n\n    // Initialize with empty values\n    Object.keys(lastRow).forEach(key => {\n      if (key === 'id') {\n        newRow[key] = Date.now(); // Use timestamp as unique id\n      } else if (key === 'date' || key === 'ds') {\n        // Set date to today\n        newRow[key] = new Date().toISOString().split('T')[0];\n      } else {\n        newRow[key] = '';\n      }\n    });\n    const newData = [...tableData, newRow];\n    setTableData(newData);\n    // Don't update parent immediately to prevent cursor issues\n    setTimeout(() => updateParent(newData), 100);\n  }, [tableData, updateParent]);\n\n  // Delete a row from the table\n  const handleDeleteRow = useCallback(id => {\n    const newData = tableData.filter(row => row.id !== id);\n    setTableData(newData);\n    updateParent(newData);\n  }, [tableData, updateParent]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"data-table-container\",\n    children: [summary && !isForecasted && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"data-summary\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Data Summary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"summary-grid\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"summary-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"summary-label\",\n            children: \"Total Rows:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"summary-value\",\n            children: summary.total_rows\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"summary-stats\",\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"summary-table\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Metric\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 193,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Mean\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 194,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Min\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 195,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Max\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 196,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: summary.mean && Object.keys(summary.mean).map(key => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: key.split('_').map(word => word.charAt(0).toUpperCase() + word.slice(1)).join(' ')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 202,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: summary.mean[key].toFixed(2)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 203,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: summary.min[key].toFixed(2)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 204,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: summary.max[key].toFixed(2)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 205,\n                columnNumber: 21\n              }, this)]\n            }, key, true, {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 9\n    }, this), tableData.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"table-wrapper\",\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        ...getTableProps(),\n        className: \"data-table\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: headerGroups.map(headerGroup => /*#__PURE__*/_jsxDEV(\"tr\", {\n            ...headerGroup.getHeaderGroupProps(),\n            children: [headerGroup.headers.map(column => /*#__PURE__*/_jsxDEV(\"th\", {\n              ...column.getHeaderProps(),\n              children: column.render('Header')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 221,\n              columnNumber: 21\n            }, this)), !readOnly && /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"action-column\",\n              children: \"Actions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 226,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          ...getTableBodyProps(),\n          children: rows.map(row => {\n            prepareRow(row);\n            return /*#__PURE__*/_jsxDEV(\"tr\", {\n              ...row.getRowProps(),\n              className: \"data-row\",\n              children: [row.cells.map(cell => /*#__PURE__*/_jsxDEV(\"td\", {\n                ...cell.getCellProps(),\n                className: isForecasted && cell.column.id === 'predicted_emissions' ? 'highlighted-cell' : '',\n                children: cell.render('Cell')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 237,\n                columnNumber: 23\n              }, this)), !readOnly && /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"action-column\",\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"delete-btn\",\n                  onClick: () => handleDeleteRow(row.original.id),\n                  type: \"button\",\n                  children: \"\\xD7\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 246,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 245,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 235,\n              columnNumber: 19\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"no-data\",\n      children: \"No data available. Upload a file or add data manually.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 9\n    }, this), !readOnly && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"table-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-secondary\",\n        onClick: handleAddRow,\n        type: \"button\",\n        children: \"Add Row\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 179,\n    columnNumber: 5\n  }, this);\n};\n_s(DataTable, \"vHX/V+cV554anNOAubeiXm7Gwxs=\", false, function () {\n  return [useTable];\n});\n_c = DataTable;\nexport default DataTable;\nvar _c;\n$RefreshReg$(_c, \"DataTable\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","useMemo","useTable","jsxDEV","_jsxDEV","DataTable","data","onDataUpdate","summary","readOnly","isForecasted","_s","tableData","setTableData","updateTimeout","setUpdateTimeout","length","updateParent","newData","clearTimeout","timeoutId","setTimeout","handleCellChange","rowId","columnId","value","isNumeric","prevData","map","row","id","timer","formattedData","newRow","parseFloat","columns","firstRow","Object","keys","filter","key","includes","Header","split","word","charAt","toUpperCase","slice","join","accessor","Cell","Date","toLocaleDateString","toFixed","type","onChange","e","original","target","onBlur","numValue","isNaN","className","disabled","fileName","_jsxFileName","lineNumber","columnNumber","tableInstance","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","handleAddRow","lastRow","forEach","now","toISOString","handleDeleteRow","children","total_rows","mean","min","max","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","render","getRowProps","cells","cell","getCellProps","onClick","_c","$RefreshReg$"],"sources":["C:/Users/SETUP/Desktop/yap-t carbonsync ai/frontend/src/components/DataTable.js"],"sourcesContent":["import React, { useState, useEffect, useCallback, useMemo } from 'react';\nimport { useTable } from 'react-table';\nimport './DataTable.css';\n\nconst DataTable = ({ data, onDataUpdate, summary, readOnly = false, isForecasted = false }) => {\n  const [tableData, setTableData] = useState([]);\n  const [updateTimeout, setUpdateTimeout] = useState(null);\n  \n  // Initialize table data when data prop changes\n  useEffect(() => {\n    if (data && data.length > 0) {\n      setTableData(data);\n    } else {\n      setTableData([]);\n    }\n  }, [data]);\n\n  // Function to update parent component with debounce\n  const updateParent = useCallback((newData) => {\n    if (updateTimeout) {\n      clearTimeout(updateTimeout);\n    }\n    \n    const timeoutId = setTimeout(() => {\n      if (onDataUpdate) {\n        onDataUpdate(newData);\n      }\n    }, 1000); // Increased debounce time to reduce re-renders\n    \n    setUpdateTimeout(timeoutId);\n  }, [onDataUpdate, updateTimeout]);\n\n  // Clean up timeout on unmount\n  useEffect(() => {\n    return () => {\n      if (updateTimeout) {\n        clearTimeout(updateTimeout);\n      }\n    };\n  }, [updateTimeout]);\n\n  // Handle cell value change\n  const handleCellChange = useCallback((rowId, columnId, value, isNumeric) => {\n    setTableData(prevData => {\n      const newData = prevData.map(row => {\n        if (row.id === rowId) {\n          // Only convert to number on blur or when updating parent\n          return {\n            ...row,\n            [columnId]: value\n          };\n        }\n        return row;\n      });\n      \n      return newData;\n    });\n    \n    // Only update parent after a delay to prevent cursor jumping\n    const timer = setTimeout(() => {\n      setTableData(prevData => {\n        const formattedData = prevData.map(row => {\n          const newRow = {...row};\n          \n          // Format numeric fields only when updating parent\n          if (row.id === rowId && isNumeric && value !== '') {\n            newRow[columnId] = parseFloat(value);\n          }\n          \n          return newRow;\n        });\n        \n        updateParent(formattedData);\n        return formattedData;\n      });\n    }, 500);\n    \n    return () => clearTimeout(timer);\n  }, [updateParent]);\n\n  // Define columns based on data structure\n  const columns = useMemo(() => {\n    if (!tableData || tableData.length === 0) return [];\n    \n    const firstRow = tableData[0];\n    return Object.keys(firstRow)\n      .filter(key => key !== 'id') // Exclude id from display\n      .map(key => {\n        // Determine if column is numeric\n        const isNumeric = ['energy_kwh', 'production_units', 'transport_km', 'waste_kg', \n                           'water_m3', 'fuel_l', 'grid_intensity', 'y', \n                           'predicted_emissions', 'lower_bound', 'upper_bound'].includes(key);\n        \n        return {\n          Header: key.split('_').map(word => word.charAt(0).toUpperCase() + word.slice(1)).join(' '),\n          accessor: key,\n          Cell: ({ value, row }) => {\n            if (readOnly) {\n              // Format date if it's a date column\n              if (key === 'date' || key === 'ds') {\n                return new Date(value).toLocaleDateString();\n              }\n              \n              // Format numeric values\n              if (isNumeric) {\n                return typeof value === 'number' ? value.toFixed(2) : value;\n              }\n              \n              return value;\n            }\n            \n            return (\n              <input\n                type={isNumeric ? 'text' : 'text'} // Use text for all to prevent browser validation\n                value={value || ''}\n                onChange={e => handleCellChange(row.original.id, key, e.target.value, isNumeric)}\n                onBlur={e => {\n                  if (isNumeric && e.target.value !== '') {\n                    // Format on blur\n                    const numValue = parseFloat(e.target.value);\n                    if (!isNaN(numValue)) {\n                      handleCellChange(row.original.id, key, numValue, isNumeric);\n                    }\n                  }\n                }}\n                className={`cell-input ${isNumeric ? 'numeric' : ''}`}\n                disabled={readOnly}\n              />\n            );\n          }\n        };\n      });\n  }, [tableData, readOnly, handleCellChange]);\n\n  // Create table instance\n  const tableInstance = useTable({ columns, data: tableData });\n  \n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow,\n  } = tableInstance;\n\n  // Add a new row to the table\n  const handleAddRow = useCallback(() => {\n    if (!tableData || tableData.length === 0) return;\n    \n    const newRow = {};\n    const lastRow = tableData[tableData.length - 1];\n    \n    // Initialize with empty values\n    Object.keys(lastRow).forEach(key => {\n      if (key === 'id') {\n        newRow[key] = Date.now(); // Use timestamp as unique id\n      } else if (key === 'date' || key === 'ds') {\n        // Set date to today\n        newRow[key] = new Date().toISOString().split('T')[0];\n      } else {\n        newRow[key] = '';\n      }\n    });\n    \n    const newData = [...tableData, newRow];\n    setTableData(newData);\n    // Don't update parent immediately to prevent cursor issues\n    setTimeout(() => updateParent(newData), 100);\n  }, [tableData, updateParent]);\n\n  // Delete a row from the table\n  const handleDeleteRow = useCallback((id) => {\n    const newData = tableData.filter(row => row.id !== id);\n    setTableData(newData);\n    updateParent(newData);\n  }, [tableData, updateParent]);\n\n  return (\n    <div className=\"data-table-container\">\n      {summary && !isForecasted && (\n        <div className=\"data-summary\">\n          <h3>Data Summary</h3>\n          <div className=\"summary-grid\">\n            <div className=\"summary-item\">\n              <span className=\"summary-label\">Total Rows:</span>\n              <span className=\"summary-value\">{summary.total_rows}</span>\n            </div>\n          </div>\n          <div className=\"summary-stats\">\n            <table className=\"summary-table\">\n              <thead>\n                <tr>\n                  <th>Metric</th>\n                  <th>Mean</th>\n                  <th>Min</th>\n                  <th>Max</th>\n                </tr>\n              </thead>\n              <tbody>\n                {summary.mean && Object.keys(summary.mean).map(key => (\n                  <tr key={key}>\n                    <td>{key.split('_').map(word => word.charAt(0).toUpperCase() + word.slice(1)).join(' ')}</td>\n                    <td>{summary.mean[key].toFixed(2)}</td>\n                    <td>{summary.min[key].toFixed(2)}</td>\n                    <td>{summary.max[key].toFixed(2)}</td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          </div>\n        </div>\n      )}\n      \n      {tableData.length > 0 ? (\n        <div className=\"table-wrapper\">\n          <table {...getTableProps()} className=\"data-table\">\n            <thead>\n              {headerGroups.map(headerGroup => (\n                <tr {...headerGroup.getHeaderGroupProps()}>\n                  {headerGroup.headers.map(column => (\n                    <th {...column.getHeaderProps()}>\n                      {column.render('Header')}\n                    </th>\n                  ))}\n                  {!readOnly && (\n                    <th className=\"action-column\">Actions</th>\n                  )}\n                </tr>\n              ))}\n            </thead>\n            <tbody {...getTableBodyProps()}>\n              {rows.map(row => {\n                prepareRow(row);\n                return (\n                  <tr {...row.getRowProps()} className=\"data-row\">\n                    {row.cells.map(cell => (\n                      <td \n                        {...cell.getCellProps()} \n                        className={isForecasted && cell.column.id === 'predicted_emissions' ? 'highlighted-cell' : ''}\n                      >\n                        {cell.render('Cell')}\n                      </td>\n                    ))}\n                    {!readOnly && (\n                      <td className=\"action-column\">\n                        <button \n                          className=\"delete-btn\" \n                          onClick={() => handleDeleteRow(row.original.id)}\n                          type=\"button\"\n                        >\n                          ×\n                        </button>\n                      </td>\n                    )}\n                  </tr>\n                );\n              })}\n            </tbody>\n          </table>\n        </div>\n      ) : (\n        <div className=\"no-data\">No data available. Upload a file or add data manually.</div>\n      )}\n      \n      {!readOnly && (\n        <div className=\"table-actions\">\n          <button \n            className=\"btn btn-secondary\" \n            onClick={handleAddRow}\n            type=\"button\"\n          >\n            Add Row\n          </button>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default DataTable;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}