{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SETUP\\\\Desktop\\\\yap-t carbonsync ai\\\\frontend\\\\src\\\\components\\\\ModelPerformance.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport Chart from 'chart.js/auto';\nimport './ModelPerformance.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ModelPerformance = ({\n  data,\n  forecast\n}) => {\n  _s();\n  const errorMetricsRef = useRef(null);\n  const errorChartRef = useRef(null);\n  const errorChartInstance = useRef(null);\n\n  // Clean up chart on unmount\n  useEffect(() => {\n    return () => {\n      if (errorChartInstance.current) {\n        errorChartInstance.current.destroy();\n        errorChartInstance.current = null;\n      }\n    };\n  }, []);\n  useEffect(() => {\n    if (!data || !forecast || data.length === 0 || forecast.length === 0) return;\n\n    // Calculate performance metrics\n    const metrics = calculatePerformanceMetrics(data, forecast);\n    displayPerformanceMetrics(metrics);\n    createErrorChart(metrics);\n  }, [data, forecast]);\n  const calculatePerformanceMetrics = (data, forecast) => {\n    // Group actual data by month for comparison\n    const monthlyActualData = {};\n    data.forEach(item => {\n      if (!item.date || !item.emissions) return;\n      const date = new Date(item.date);\n      const monthKey = `${date.getFullYear()}-${String(date.getMonth() + 1).padStart(2, '0')}`;\n      if (!monthlyActualData[monthKey]) {\n        monthlyActualData[monthKey] = {\n          date: new Date(date.getFullYear(), date.getMonth(), 1),\n          emissions: 0\n        };\n      }\n      monthlyActualData[monthKey].emissions += parseFloat(item.emissions) || 0;\n    });\n\n    // Convert to array and sort by date\n    const actualData = Object.values(monthlyActualData).sort((a, b) => a.date - b.date);\n\n    // Get forecast data for comparison\n    // Only compare months that exist in both datasets\n    const comparableData = [];\n    actualData.forEach(actual => {\n      const actualMonth = actual.date.getMonth();\n      const actualYear = actual.date.getFullYear();\n      const matchingForecast = forecast.find(f => {\n        const forecastDate = new Date(f.ds);\n        return forecastDate.getMonth() === actualMonth && forecastDate.getFullYear() === actualYear;\n      });\n      if (matchingForecast) {\n        comparableData.push({\n          date: actual.date,\n          actual: actual.emissions,\n          forecast: matchingForecast.predicted_emissions,\n          error: Math.abs(actual.emissions - matchingForecast.predicted_emissions),\n          percentError: Math.abs((actual.emissions - matchingForecast.predicted_emissions) / actual.emissions) * 100\n        });\n      }\n    });\n\n    // Calculate metrics\n    let mae = 0;\n    let rmse = 0;\n    let mape = 0;\n    if (comparableData.length > 0) {\n      mae = comparableData.reduce((sum, item) => sum + item.error, 0) / comparableData.length;\n      rmse = Math.sqrt(comparableData.reduce((sum, item) => sum + Math.pow(item.error, 2), 0) / comparableData.length);\n      mape = comparableData.reduce((sum, item) => sum + item.percentError, 0) / comparableData.length;\n    }\n    return {\n      mae,\n      rmse,\n      mape,\n      comparableData\n    };\n  };\n  const displayPerformanceMetrics = metrics => {\n    if (!errorMetricsRef.current) return;\n    errorMetricsRef.current.innerHTML = '';\n    const metricsContainer = document.createElement('div');\n    metricsContainer.className = 'metrics-container';\n\n    // MAE Metric\n    const maeMetric = document.createElement('div');\n    maeMetric.className = 'metric-card';\n    const maeTitle = document.createElement('div');\n    maeTitle.className = 'metric-title';\n    maeTitle.textContent = 'Mean Absolute Error';\n    const maeValue = document.createElement('div');\n    maeValue.className = 'metric-value';\n    maeValue.textContent = `${metrics.mae.toFixed(2)} tons CO2e`;\n    const maeDescription = document.createElement('div');\n    maeDescription.className = 'metric-description';\n    maeDescription.textContent = 'Average absolute difference between forecast and actual values';\n    maeMetric.appendChild(maeTitle);\n    maeMetric.appendChild(maeValue);\n    maeMetric.appendChild(maeDescription);\n    metricsContainer.appendChild(maeMetric);\n\n    // RMSE Metric\n    const rmseMetric = document.createElement('div');\n    rmseMetric.className = 'metric-card';\n    const rmseTitle = document.createElement('div');\n    rmseTitle.className = 'metric-title';\n    rmseTitle.textContent = 'Root Mean Square Error';\n    const rmseValue = document.createElement('div');\n    rmseValue.className = 'metric-value';\n    rmseValue.textContent = `${metrics.rmse.toFixed(2)} tons CO2e`;\n    const rmseDescription = document.createElement('div');\n    rmseDescription.className = 'metric-description';\n    rmseDescription.textContent = 'Square root of the average of squared differences';\n    rmseMetric.appendChild(rmseTitle);\n    rmseMetric.appendChild(rmseValue);\n    rmseMetric.appendChild(rmseDescription);\n    metricsContainer.appendChild(rmseMetric);\n\n    // MAPE Metric\n    const mapeMetric = document.createElement('div');\n    mapeMetric.className = 'metric-card';\n    const mapeTitle = document.createElement('div');\n    mapeTitle.className = 'metric-title';\n    mapeTitle.textContent = 'Mean Absolute Percentage Error';\n    const mapeValue = document.createElement('div');\n    mapeValue.className = 'metric-value';\n    mapeValue.textContent = `${metrics.mape.toFixed(2)}%`;\n    const mapeDescription = document.createElement('div');\n    mapeDescription.className = 'metric-description';\n    mapeDescription.textContent = 'Average percentage difference between forecast and actual';\n    mapeMetric.appendChild(mapeTitle);\n    mapeMetric.appendChild(mapeValue);\n    mapeMetric.appendChild(mapeDescription);\n    metricsContainer.appendChild(mapeMetric);\n    errorMetricsRef.current.appendChild(metricsContainer);\n  };\n  const createErrorChart = metrics => {\n    if (!errorChartRef.current || !metrics.comparableData || metrics.comparableData.length === 0) return;\n\n    // Destroy previous chart if it exists\n    if (errorChartInstance.current) {\n      errorChartInstance.current.destroy();\n      errorChartInstance.current = null;\n    }\n    try {\n      const ctx = errorChartRef.current.getContext('2d');\n\n      // Prepare data\n      const labels = metrics.comparableData.map(d => {\n        const date = new Date(d.date);\n        return date.toLocaleDateString('default', {\n          month: 'short',\n          year: 'numeric'\n        });\n      });\n      const actualValues = metrics.comparableData.map(d => d.actual);\n      const forecastValues = metrics.comparableData.map(d => d.forecast);\n      const errorValues = metrics.comparableData.map(d => d.error);\n\n      // Create chart\n      errorChartInstance.current = new Chart(ctx, {\n        type: 'bar',\n        data: {\n          labels: labels,\n          datasets: [{\n            type: 'line',\n            label: 'Actual Emissions',\n            data: actualValues,\n            borderColor: '#00FFFF',\n            backgroundColor: 'rgba(0, 255, 255, 0.1)',\n            borderWidth: 3,\n            pointBackgroundColor: '#00FFFF',\n            pointBorderColor: '#00FFFF',\n            pointRadius: 5,\n            pointHoverRadius: 7,\n            tension: 0.4,\n            yAxisID: 'y'\n          }, {\n            type: 'line',\n            label: 'Forecast Emissions',\n            data: forecastValues,\n            borderColor: '#FF00FF',\n            backgroundColor: 'rgba(255, 0, 255, 0.1)',\n            borderWidth: 3,\n            pointBackgroundColor: '#FF00FF',\n            pointBorderColor: '#FF00FF',\n            pointRadius: 5,\n            pointHoverRadius: 7,\n            tension: 0.4,\n            yAxisID: 'y'\n          }, {\n            type: 'bar',\n            label: 'Forecast Error',\n            data: errorValues,\n            backgroundColor: 'rgba(255, 165, 0, 0.6)',\n            borderColor: 'rgba(255, 165, 0, 0.8)',\n            borderWidth: 1,\n            yAxisID: 'y1'\n          }]\n        },\n        options: {\n          responsive: true,\n          maintainAspectRatio: false,\n          animation: {\n            duration: 2000,\n            easing: 'easeOutQuart'\n          },\n          scales: {\n            x: {\n              title: {\n                display: true,\n                text: 'Month',\n                color: '#ccc',\n                font: {\n                  family: 'Orbitron',\n                  size: 14\n                }\n              },\n              grid: {\n                color: 'rgba(255, 255, 255, 0.1)'\n              },\n              ticks: {\n                color: '#ccc',\n                font: {\n                  family: 'Roboto',\n                  size: 12\n                }\n              }\n            },\n            y: {\n              type: 'linear',\n              position: 'left',\n              title: {\n                display: true,\n                text: 'Emissions (tons CO2e)',\n                color: '#ccc',\n                font: {\n                  family: 'Orbitron',\n                  size: 14\n                }\n              },\n              grid: {\n                color: 'rgba(255, 255, 255, 0.1)'\n              },\n              ticks: {\n                color: '#ccc',\n                font: {\n                  family: 'Roboto',\n                  size: 12\n                }\n              }\n            },\n            y1: {\n              type: 'linear',\n              position: 'right',\n              title: {\n                display: true,\n                text: 'Error (tons CO2e)',\n                color: '#ccc',\n                font: {\n                  family: 'Orbitron',\n                  size: 14\n                }\n              },\n              grid: {\n                drawOnChartArea: false\n              },\n              ticks: {\n                color: '#ccc',\n                font: {\n                  family: 'Roboto',\n                  size: 12\n                }\n              }\n            }\n          },\n          plugins: {\n            title: {\n              display: true,\n              text: 'Forecast Performance Analysis',\n              color: '#fff',\n              font: {\n                family: 'Orbitron',\n                size: 18,\n                weight: 'bold'\n              },\n              padding: {\n                top: 10,\n                bottom: 30\n              }\n            },\n            legend: {\n              position: 'top',\n              labels: {\n                font: {\n                  family: 'Orbitron',\n                  size: 12\n                },\n                color: '#fff',\n                padding: 20\n              }\n            },\n            tooltip: {\n              enabled: true,\n              mode: 'index',\n              intersect: false,\n              backgroundColor: 'rgba(0, 0, 0, 0.8)',\n              titleFont: {\n                family: 'Orbitron',\n                size: 14\n              },\n              bodyFont: {\n                family: 'Roboto',\n                size: 13\n              },\n              borderColor: 'rgba(0, 255, 255, 0.3)',\n              borderWidth: 1\n            }\n          }\n        }\n      });\n    } catch (error) {\n      console.error(\"Error creating error chart:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"model-performance-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"section-title\",\n      children: \"Model Performance Metrics\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 368,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-metrics\",\n      ref: errorMetricsRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 370,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"performance-chart-container\",\n      children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n        ref: errorChartRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 373,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 372,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 367,\n    columnNumber: 5\n  }, this);\n};\n_s(ModelPerformance, \"o0hFZXJCuqis3AXS2Uhq+bqzRkQ=\");\n_c = ModelPerformance;\nexport default ModelPerformance;\nvar _c;\n$RefreshReg$(_c, \"ModelPerformance\");","map":{"version":3,"names":["React","useEffect","useRef","Chart","jsxDEV","_jsxDEV","ModelPerformance","data","forecast","_s","errorMetricsRef","errorChartRef","errorChartInstance","current","destroy","length","metrics","calculatePerformanceMetrics","displayPerformanceMetrics","createErrorChart","monthlyActualData","forEach","item","date","emissions","Date","monthKey","getFullYear","String","getMonth","padStart","parseFloat","actualData","Object","values","sort","a","b","comparableData","actual","actualMonth","actualYear","matchingForecast","find","f","forecastDate","ds","push","predicted_emissions","error","Math","abs","percentError","mae","rmse","mape","reduce","sum","sqrt","pow","innerHTML","metricsContainer","document","createElement","className","maeMetric","maeTitle","textContent","maeValue","toFixed","maeDescription","appendChild","rmseMetric","rmseTitle","rmseValue","rmseDescription","mapeMetric","mapeTitle","mapeValue","mapeDescription","ctx","getContext","labels","map","d","toLocaleDateString","month","year","actualValues","forecastValues","errorValues","type","datasets","label","borderColor","backgroundColor","borderWidth","pointBackgroundColor","pointBorderColor","pointRadius","pointHoverRadius","tension","yAxisID","options","responsive","maintainAspectRatio","animation","duration","easing","scales","x","title","display","text","color","font","family","size","grid","ticks","y","position","y1","drawOnChartArea","plugins","weight","padding","top","bottom","legend","tooltip","enabled","mode","intersect","titleFont","bodyFont","console","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","_c","$RefreshReg$"],"sources":["C:/Users/SETUP/Desktop/yap-t carbonsync ai/frontend/src/components/ModelPerformance.js"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport Chart from 'chart.js/auto';\nimport './ModelPerformance.css';\n\nconst ModelPerformance = ({ data, forecast }) => {\n  const errorMetricsRef = useRef(null);\n  const errorChartRef = useRef(null);\n  const errorChartInstance = useRef(null);\n\n  // Clean up chart on unmount\n  useEffect(() => {\n    return () => {\n      if (errorChartInstance.current) {\n        errorChartInstance.current.destroy();\n        errorChartInstance.current = null;\n      }\n    };\n  }, []);\n\n  useEffect(() => {\n    if (!data || !forecast || data.length === 0 || forecast.length === 0) return;\n\n    // Calculate performance metrics\n    const metrics = calculatePerformanceMetrics(data, forecast);\n    displayPerformanceMetrics(metrics);\n    createErrorChart(metrics);\n  }, [data, forecast]);\n\n  const calculatePerformanceMetrics = (data, forecast) => {\n    // Group actual data by month for comparison\n    const monthlyActualData = {};\n    \n    data.forEach(item => {\n      if (!item.date || !item.emissions) return;\n      \n      const date = new Date(item.date);\n      const monthKey = `${date.getFullYear()}-${String(date.getMonth() + 1).padStart(2, '0')}`;\n      \n      if (!monthlyActualData[monthKey]) {\n        monthlyActualData[monthKey] = {\n          date: new Date(date.getFullYear(), date.getMonth(), 1),\n          emissions: 0\n        };\n      }\n      \n      monthlyActualData[monthKey].emissions += parseFloat(item.emissions) || 0;\n    });\n    \n    // Convert to array and sort by date\n    const actualData = Object.values(monthlyActualData).sort((a, b) => a.date - b.date);\n    \n    // Get forecast data for comparison\n    // Only compare months that exist in both datasets\n    const comparableData = [];\n    \n    actualData.forEach(actual => {\n      const actualMonth = actual.date.getMonth();\n      const actualYear = actual.date.getFullYear();\n      \n      const matchingForecast = forecast.find(f => {\n        const forecastDate = new Date(f.ds);\n        return forecastDate.getMonth() === actualMonth && forecastDate.getFullYear() === actualYear;\n      });\n      \n      if (matchingForecast) {\n        comparableData.push({\n          date: actual.date,\n          actual: actual.emissions,\n          forecast: matchingForecast.predicted_emissions,\n          error: Math.abs(actual.emissions - matchingForecast.predicted_emissions),\n          percentError: Math.abs((actual.emissions - matchingForecast.predicted_emissions) / actual.emissions) * 100\n        });\n      }\n    });\n    \n    // Calculate metrics\n    let mae = 0;\n    let rmse = 0;\n    let mape = 0;\n    \n    if (comparableData.length > 0) {\n      mae = comparableData.reduce((sum, item) => sum + item.error, 0) / comparableData.length;\n      \n      rmse = Math.sqrt(\n        comparableData.reduce((sum, item) => sum + Math.pow(item.error, 2), 0) / comparableData.length\n      );\n      \n      mape = comparableData.reduce((sum, item) => sum + item.percentError, 0) / comparableData.length;\n    }\n    \n    return {\n      mae,\n      rmse,\n      mape,\n      comparableData\n    };\n  };\n\n  const displayPerformanceMetrics = (metrics) => {\n    if (!errorMetricsRef.current) return;\n    \n    errorMetricsRef.current.innerHTML = '';\n    \n    const metricsContainer = document.createElement('div');\n    metricsContainer.className = 'metrics-container';\n    \n    // MAE Metric\n    const maeMetric = document.createElement('div');\n    maeMetric.className = 'metric-card';\n    \n    const maeTitle = document.createElement('div');\n    maeTitle.className = 'metric-title';\n    maeTitle.textContent = 'Mean Absolute Error';\n    \n    const maeValue = document.createElement('div');\n    maeValue.className = 'metric-value';\n    maeValue.textContent = `${metrics.mae.toFixed(2)} tons CO2e`;\n    \n    const maeDescription = document.createElement('div');\n    maeDescription.className = 'metric-description';\n    maeDescription.textContent = 'Average absolute difference between forecast and actual values';\n    \n    maeMetric.appendChild(maeTitle);\n    maeMetric.appendChild(maeValue);\n    maeMetric.appendChild(maeDescription);\n    metricsContainer.appendChild(maeMetric);\n    \n    // RMSE Metric\n    const rmseMetric = document.createElement('div');\n    rmseMetric.className = 'metric-card';\n    \n    const rmseTitle = document.createElement('div');\n    rmseTitle.className = 'metric-title';\n    rmseTitle.textContent = 'Root Mean Square Error';\n    \n    const rmseValue = document.createElement('div');\n    rmseValue.className = 'metric-value';\n    rmseValue.textContent = `${metrics.rmse.toFixed(2)} tons CO2e`;\n    \n    const rmseDescription = document.createElement('div');\n    rmseDescription.className = 'metric-description';\n    rmseDescription.textContent = 'Square root of the average of squared differences';\n    \n    rmseMetric.appendChild(rmseTitle);\n    rmseMetric.appendChild(rmseValue);\n    rmseMetric.appendChild(rmseDescription);\n    metricsContainer.appendChild(rmseMetric);\n    \n    // MAPE Metric\n    const mapeMetric = document.createElement('div');\n    mapeMetric.className = 'metric-card';\n    \n    const mapeTitle = document.createElement('div');\n    mapeTitle.className = 'metric-title';\n    mapeTitle.textContent = 'Mean Absolute Percentage Error';\n    \n    const mapeValue = document.createElement('div');\n    mapeValue.className = 'metric-value';\n    mapeValue.textContent = `${metrics.mape.toFixed(2)}%`;\n    \n    const mapeDescription = document.createElement('div');\n    mapeDescription.className = 'metric-description';\n    mapeDescription.textContent = 'Average percentage difference between forecast and actual';\n    \n    mapeMetric.appendChild(mapeTitle);\n    mapeMetric.appendChild(mapeValue);\n    mapeMetric.appendChild(mapeDescription);\n    metricsContainer.appendChild(mapeMetric);\n    \n    errorMetricsRef.current.appendChild(metricsContainer);\n  };\n\n  const createErrorChart = (metrics) => {\n    if (!errorChartRef.current || !metrics.comparableData || metrics.comparableData.length === 0) return;\n    \n    // Destroy previous chart if it exists\n    if (errorChartInstance.current) {\n      errorChartInstance.current.destroy();\n      errorChartInstance.current = null;\n    }\n    \n    try {\n      const ctx = errorChartRef.current.getContext('2d');\n      \n      // Prepare data\n      const labels = metrics.comparableData.map(d => {\n        const date = new Date(d.date);\n        return date.toLocaleDateString('default', { month: 'short', year: 'numeric' });\n      });\n      \n      const actualValues = metrics.comparableData.map(d => d.actual);\n      const forecastValues = metrics.comparableData.map(d => d.forecast);\n      const errorValues = metrics.comparableData.map(d => d.error);\n      \n      // Create chart\n      errorChartInstance.current = new Chart(ctx, {\n        type: 'bar',\n        data: {\n          labels: labels,\n          datasets: [\n            {\n              type: 'line',\n              label: 'Actual Emissions',\n              data: actualValues,\n              borderColor: '#00FFFF',\n              backgroundColor: 'rgba(0, 255, 255, 0.1)',\n              borderWidth: 3,\n              pointBackgroundColor: '#00FFFF',\n              pointBorderColor: '#00FFFF',\n              pointRadius: 5,\n              pointHoverRadius: 7,\n              tension: 0.4,\n              yAxisID: 'y'\n            },\n            {\n              type: 'line',\n              label: 'Forecast Emissions',\n              data: forecastValues,\n              borderColor: '#FF00FF',\n              backgroundColor: 'rgba(255, 0, 255, 0.1)',\n              borderWidth: 3,\n              pointBackgroundColor: '#FF00FF',\n              pointBorderColor: '#FF00FF',\n              pointRadius: 5,\n              pointHoverRadius: 7,\n              tension: 0.4,\n              yAxisID: 'y'\n            },\n            {\n              type: 'bar',\n              label: 'Forecast Error',\n              data: errorValues,\n              backgroundColor: 'rgba(255, 165, 0, 0.6)',\n              borderColor: 'rgba(255, 165, 0, 0.8)',\n              borderWidth: 1,\n              yAxisID: 'y1'\n            }\n          ]\n        },\n        options: {\n          responsive: true,\n          maintainAspectRatio: false,\n          animation: {\n            duration: 2000,\n            easing: 'easeOutQuart'\n          },\n          scales: {\n            x: {\n              title: {\n                display: true,\n                text: 'Month',\n                color: '#ccc',\n                font: {\n                  family: 'Orbitron',\n                  size: 14\n                }\n              },\n              grid: {\n                color: 'rgba(255, 255, 255, 0.1)'\n              },\n              ticks: {\n                color: '#ccc',\n                font: {\n                  family: 'Roboto',\n                  size: 12\n                }\n              }\n            },\n            y: {\n              type: 'linear',\n              position: 'left',\n              title: {\n                display: true,\n                text: 'Emissions (tons CO2e)',\n                color: '#ccc',\n                font: {\n                  family: 'Orbitron',\n                  size: 14\n                }\n              },\n              grid: {\n                color: 'rgba(255, 255, 255, 0.1)'\n              },\n              ticks: {\n                color: '#ccc',\n                font: {\n                  family: 'Roboto',\n                  size: 12\n                }\n              }\n            },\n            y1: {\n              type: 'linear',\n              position: 'right',\n              title: {\n                display: true,\n                text: 'Error (tons CO2e)',\n                color: '#ccc',\n                font: {\n                  family: 'Orbitron',\n                  size: 14\n                }\n              },\n              grid: {\n                drawOnChartArea: false\n              },\n              ticks: {\n                color: '#ccc',\n                font: {\n                  family: 'Roboto',\n                  size: 12\n                }\n              }\n            }\n          },\n          plugins: {\n            title: {\n              display: true,\n              text: 'Forecast Performance Analysis',\n              color: '#fff',\n              font: {\n                family: 'Orbitron',\n                size: 18,\n                weight: 'bold'\n              },\n              padding: {\n                top: 10,\n                bottom: 30\n              }\n            },\n            legend: {\n              position: 'top',\n              labels: {\n                font: {\n                  family: 'Orbitron',\n                  size: 12\n                },\n                color: '#fff',\n                padding: 20\n              }\n            },\n            tooltip: {\n              enabled: true,\n              mode: 'index',\n              intersect: false,\n              backgroundColor: 'rgba(0, 0, 0, 0.8)',\n              titleFont: {\n                family: 'Orbitron',\n                size: 14\n              },\n              bodyFont: {\n                family: 'Roboto',\n                size: 13\n              },\n              borderColor: 'rgba(0, 255, 255, 0.3)',\n              borderWidth: 1\n            }\n          }\n        }\n      });\n    } catch (error) {\n      console.error(\"Error creating error chart:\", error);\n    }\n  };\n\n  return (\n    <div className=\"model-performance-container\">\n      <h3 className=\"section-title\">Model Performance Metrics</h3>\n      \n      <div className=\"error-metrics\" ref={errorMetricsRef}></div>\n      \n      <div className=\"performance-chart-container\">\n        <canvas ref={errorChartRef}></canvas>\n      </div>\n    </div>\n  );\n};\n\nexport default ModelPerformance;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}