{"ast":null,"code":"/*!\n * Chart.js v3.7.1\n * https://www.chartjs.org\n * (c) 2022 Chart.js Contributors\n * Released under the MIT License\n */\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() : typeof define === 'function' && define.amd ? define(factory) : (global = typeof globalThis !== 'undefined' ? globalThis : global || self, global.Chart = factory());\n})(this, function () {\n  'use strict';\n\n  function fontString(pixelSize, fontStyle, fontFamily) {\n    return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n  }\n  const requestAnimFrame = function () {\n    if (typeof window === 'undefined') {\n      return function (callback) {\n        return callback();\n      };\n    }\n    return window.requestAnimationFrame;\n  }();\n  function throttled(fn, thisArg, updateFn) {\n    const updateArgs = updateFn || (args => Array.prototype.slice.call(args));\n    let ticking = false;\n    let args = [];\n    return function (...rest) {\n      args = updateArgs(rest);\n      if (!ticking) {\n        ticking = true;\n        requestAnimFrame.call(window, () => {\n          ticking = false;\n          fn.apply(thisArg, args);\n        });\n      }\n    };\n  }\n  function debounce(fn, delay) {\n    let timeout;\n    return function (...args) {\n      if (delay) {\n        clearTimeout(timeout);\n        timeout = setTimeout(fn, delay, args);\n      } else {\n        fn.apply(this, args);\n      }\n      return delay;\n    };\n  }\n  const _toLeftRightCenter = align => align === 'start' ? 'left' : align === 'end' ? 'right' : 'center';\n  const _alignStartEnd = (align, start, end) => align === 'start' ? start : align === 'end' ? end : (start + end) / 2;\n  const _textX = (align, left, right, rtl) => {\n    const check = rtl ? 'left' : 'right';\n    return align === check ? right : align === 'center' ? (left + right) / 2 : left;\n  };\n  class Animator {\n    constructor() {\n      this._request = null;\n      this._charts = new Map();\n      this._running = false;\n      this._lastDate = undefined;\n    }\n    _notify(chart, anims, date, type) {\n      const callbacks = anims.listeners[type];\n      const numSteps = anims.duration;\n      callbacks.forEach(fn => fn({\n        chart,\n        initial: anims.initial,\n        numSteps,\n        currentStep: Math.min(date - anims.start, numSteps)\n      }));\n    }\n    _refresh() {\n      if (this._request) {\n        return;\n      }\n      this._running = true;\n      this._request = requestAnimFrame.call(window, () => {\n        this._update();\n        this._request = null;\n        if (this._running) {\n          this._refresh();\n        }\n      });\n    }\n    _update(date = Date.now()) {\n      let remaining = 0;\n      this._charts.forEach((anims, chart) => {\n        if (!anims.running || !anims.items.length) {\n          return;\n        }\n        const items = anims.items;\n        let i = items.length - 1;\n        let draw = false;\n        let item;\n        for (; i >= 0; --i) {\n          item = items[i];\n          if (item._active) {\n            if (item._total > anims.duration) {\n              anims.duration = item._total;\n            }\n            item.tick(date);\n            draw = true;\n          } else {\n            items[i] = items[items.length - 1];\n            items.pop();\n          }\n        }\n        if (draw) {\n          chart.draw();\n          this._notify(chart, anims, date, 'progress');\n        }\n        if (!items.length) {\n          anims.running = false;\n          this._notify(chart, anims, date, 'complete');\n          anims.initial = false;\n        }\n        remaining += items.length;\n      });\n      this._lastDate = date;\n      if (remaining === 0) {\n        this._running = false;\n      }\n    }\n    _getAnims(chart) {\n      const charts = this._charts;\n      let anims = charts.get(chart);\n      if (!anims) {\n        anims = {\n          running: false,\n          initial: true,\n          items: [],\n          listeners: {\n            complete: [],\n            progress: []\n          }\n        };\n        charts.set(chart, anims);\n      }\n      return anims;\n    }\n    listen(chart, event, cb) {\n      this._getAnims(chart).listeners[event].push(cb);\n    }\n    add(chart, items) {\n      if (!items || !items.length) {\n        return;\n      }\n      this._getAnims(chart).items.push(...items);\n    }\n    has(chart) {\n      return this._getAnims(chart).items.length > 0;\n    }\n    start(chart) {\n      const anims = this._charts.get(chart);\n      if (!anims) {\n        return;\n      }\n      anims.running = true;\n      anims.start = Date.now();\n      anims.duration = anims.items.reduce((acc, cur) => Math.max(acc, cur._duration), 0);\n      this._refresh();\n    }\n    running(chart) {\n      if (!this._running) {\n        return false;\n      }\n      const anims = this._charts.get(chart);\n      if (!anims || !anims.running || !anims.items.length) {\n        return false;\n      }\n      return true;\n    }\n    stop(chart) {\n      const anims = this._charts.get(chart);\n      if (!anims || !anims.items.length) {\n        return;\n      }\n      const items = anims.items;\n      let i = items.length - 1;\n      for (; i >= 0; --i) {\n        items[i].cancel();\n      }\n      anims.items = [];\n      this._notify(chart, anims, Date.now(), 'complete');\n    }\n    remove(chart) {\n      return this._charts.delete(chart);\n    }\n  }\n  var animator = new Animator();\n\n  /*!\n   * @kurkle/color v0.1.9\n   * https://github.com/kurkle/color#readme\n   * (c) 2020 Jukka Kurkela\n   * Released under the MIT License\n   */\n  const map$1 = {\n    0: 0,\n    1: 1,\n    2: 2,\n    3: 3,\n    4: 4,\n    5: 5,\n    6: 6,\n    7: 7,\n    8: 8,\n    9: 9,\n    A: 10,\n    B: 11,\n    C: 12,\n    D: 13,\n    E: 14,\n    F: 15,\n    a: 10,\n    b: 11,\n    c: 12,\n    d: 13,\n    e: 14,\n    f: 15\n  };\n  const hex = '0123456789ABCDEF';\n  const h1 = b => hex[b & 0xF];\n  const h2 = b => hex[(b & 0xF0) >> 4] + hex[b & 0xF];\n  const eq = b => (b & 0xF0) >> 4 === (b & 0xF);\n  function isShort(v) {\n    return eq(v.r) && eq(v.g) && eq(v.b) && eq(v.a);\n  }\n  function hexParse(str) {\n    var len = str.length;\n    var ret;\n    if (str[0] === '#') {\n      if (len === 4 || len === 5) {\n        ret = {\n          r: 255 & map$1[str[1]] * 17,\n          g: 255 & map$1[str[2]] * 17,\n          b: 255 & map$1[str[3]] * 17,\n          a: len === 5 ? map$1[str[4]] * 17 : 255\n        };\n      } else if (len === 7 || len === 9) {\n        ret = {\n          r: map$1[str[1]] << 4 | map$1[str[2]],\n          g: map$1[str[3]] << 4 | map$1[str[4]],\n          b: map$1[str[5]] << 4 | map$1[str[6]],\n          a: len === 9 ? map$1[str[7]] << 4 | map$1[str[8]] : 255\n        };\n      }\n    }\n    return ret;\n  }\n  function hexString(v) {\n    var f = isShort(v) ? h1 : h2;\n    return v ? '#' + f(v.r) + f(v.g) + f(v.b) + (v.a < 255 ? f(v.a) : '') : v;\n  }\n  function round(v) {\n    return v + 0.5 | 0;\n  }\n  const lim = (v, l, h) => Math.max(Math.min(v, h), l);\n  function p2b(v) {\n    return lim(round(v * 2.55), 0, 255);\n  }\n  function n2b(v) {\n    return lim(round(v * 255), 0, 255);\n  }\n  function b2n(v) {\n    return lim(round(v / 2.55) / 100, 0, 1);\n  }\n  function n2p(v) {\n    return lim(round(v * 100), 0, 100);\n  }\n  const RGB_RE = /^rgba?\\(\\s*([-+.\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?(?:[\\s,/]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\n  function rgbParse(str) {\n    const m = RGB_RE.exec(str);\n    let a = 255;\n    let r, g, b;\n    if (!m) {\n      return;\n    }\n    if (m[7] !== r) {\n      const v = +m[7];\n      a = 255 & (m[8] ? p2b(v) : v * 255);\n    }\n    r = +m[1];\n    g = +m[3];\n    b = +m[5];\n    r = 255 & (m[2] ? p2b(r) : r);\n    g = 255 & (m[4] ? p2b(g) : g);\n    b = 255 & (m[6] ? p2b(b) : b);\n    return {\n      r: r,\n      g: g,\n      b: b,\n      a: a\n    };\n  }\n  function rgbString(v) {\n    return v && (v.a < 255 ? `rgba(${v.r}, ${v.g}, ${v.b}, ${b2n(v.a)})` : `rgb(${v.r}, ${v.g}, ${v.b})`);\n  }\n  const HUE_RE = /^(hsla?|hwb|hsv)\\(\\s*([-+.e\\d]+)(?:deg)?[\\s,]+([-+.e\\d]+)%[\\s,]+([-+.e\\d]+)%(?:[\\s,]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\n  function hsl2rgbn(h, s, l) {\n    const a = s * Math.min(l, 1 - l);\n    const f = (n, k = (n + h / 30) % 12) => l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n    return [f(0), f(8), f(4)];\n  }\n  function hsv2rgbn(h, s, v) {\n    const f = (n, k = (n + h / 60) % 6) => v - v * s * Math.max(Math.min(k, 4 - k, 1), 0);\n    return [f(5), f(3), f(1)];\n  }\n  function hwb2rgbn(h, w, b) {\n    const rgb = hsl2rgbn(h, 1, 0.5);\n    let i;\n    if (w + b > 1) {\n      i = 1 / (w + b);\n      w *= i;\n      b *= i;\n    }\n    for (i = 0; i < 3; i++) {\n      rgb[i] *= 1 - w - b;\n      rgb[i] += w;\n    }\n    return rgb;\n  }\n  function rgb2hsl(v) {\n    const range = 255;\n    const r = v.r / range;\n    const g = v.g / range;\n    const b = v.b / range;\n    const max = Math.max(r, g, b);\n    const min = Math.min(r, g, b);\n    const l = (max + min) / 2;\n    let h, s, d;\n    if (max !== min) {\n      d = max - min;\n      s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n      h = max === r ? (g - b) / d + (g < b ? 6 : 0) : max === g ? (b - r) / d + 2 : (r - g) / d + 4;\n      h = h * 60 + 0.5;\n    }\n    return [h | 0, s || 0, l];\n  }\n  function calln(f, a, b, c) {\n    return (Array.isArray(a) ? f(a[0], a[1], a[2]) : f(a, b, c)).map(n2b);\n  }\n  function hsl2rgb(h, s, l) {\n    return calln(hsl2rgbn, h, s, l);\n  }\n  function hwb2rgb(h, w, b) {\n    return calln(hwb2rgbn, h, w, b);\n  }\n  function hsv2rgb(h, s, v) {\n    return calln(hsv2rgbn, h, s, v);\n  }\n  function hue(h) {\n    return (h % 360 + 360) % 360;\n  }\n  function hueParse(str) {\n    const m = HUE_RE.exec(str);\n    let a = 255;\n    let v;\n    if (!m) {\n      return;\n    }\n    if (m[5] !== v) {\n      a = m[6] ? p2b(+m[5]) : n2b(+m[5]);\n    }\n    const h = hue(+m[2]);\n    const p1 = +m[3] / 100;\n    const p2 = +m[4] / 100;\n    if (m[1] === 'hwb') {\n      v = hwb2rgb(h, p1, p2);\n    } else if (m[1] === 'hsv') {\n      v = hsv2rgb(h, p1, p2);\n    } else {\n      v = hsl2rgb(h, p1, p2);\n    }\n    return {\n      r: v[0],\n      g: v[1],\n      b: v[2],\n      a: a\n    };\n  }\n  function rotate(v, deg) {\n    var h = rgb2hsl(v);\n    h[0] = hue(h[0] + deg);\n    h = hsl2rgb(h);\n    v.r = h[0];\n    v.g = h[1];\n    v.b = h[2];\n  }\n  function hslString(v) {\n    if (!v) {\n      return;\n    }\n    const a = rgb2hsl(v);\n    const h = a[0];\n    const s = n2p(a[1]);\n    const l = n2p(a[2]);\n    return v.a < 255 ? `hsla(${h}, ${s}%, ${l}%, ${b2n(v.a)})` : `hsl(${h}, ${s}%, ${l}%)`;\n  }\n  const map$1$1 = {\n    x: 'dark',\n    Z: 'light',\n    Y: 're',\n    X: 'blu',\n    W: 'gr',\n    V: 'medium',\n    U: 'slate',\n    A: 'ee',\n    T: 'ol',\n    S: 'or',\n    B: 'ra',\n    C: 'lateg',\n    D: 'ights',\n    R: 'in',\n    Q: 'turquois',\n    E: 'hi',\n    P: 'ro',\n    O: 'al',\n    N: 'le',\n    M: 'de',\n    L: 'yello',\n    F: 'en',\n    K: 'ch',\n    G: 'arks',\n    H: 'ea',\n    I: 'ightg',\n    J: 'wh'\n  };\n  const names = {\n    OiceXe: 'f0f8ff',\n    antiquewEte: 'faebd7',\n    aqua: 'ffff',\n    aquamarRe: '7fffd4',\n    azuY: 'f0ffff',\n    beige: 'f5f5dc',\n    bisque: 'ffe4c4',\n    black: '0',\n    blanKedOmond: 'ffebcd',\n    Xe: 'ff',\n    XeviTet: '8a2be2',\n    bPwn: 'a52a2a',\n    burlywood: 'deb887',\n    caMtXe: '5f9ea0',\n    KartYuse: '7fff00',\n    KocTate: 'd2691e',\n    cSO: 'ff7f50',\n    cSnflowerXe: '6495ed',\n    cSnsilk: 'fff8dc',\n    crimson: 'dc143c',\n    cyan: 'ffff',\n    xXe: '8b',\n    xcyan: '8b8b',\n    xgTMnPd: 'b8860b',\n    xWay: 'a9a9a9',\n    xgYF: '6400',\n    xgYy: 'a9a9a9',\n    xkhaki: 'bdb76b',\n    xmagFta: '8b008b',\n    xTivegYF: '556b2f',\n    xSange: 'ff8c00',\n    xScEd: '9932cc',\n    xYd: '8b0000',\n    xsOmon: 'e9967a',\n    xsHgYF: '8fbc8f',\n    xUXe: '483d8b',\n    xUWay: '2f4f4f',\n    xUgYy: '2f4f4f',\n    xQe: 'ced1',\n    xviTet: '9400d3',\n    dAppRk: 'ff1493',\n    dApskyXe: 'bfff',\n    dimWay: '696969',\n    dimgYy: '696969',\n    dodgerXe: '1e90ff',\n    fiYbrick: 'b22222',\n    flSOwEte: 'fffaf0',\n    foYstWAn: '228b22',\n    fuKsia: 'ff00ff',\n    gaRsbSo: 'dcdcdc',\n    ghostwEte: 'f8f8ff',\n    gTd: 'ffd700',\n    gTMnPd: 'daa520',\n    Way: '808080',\n    gYF: '8000',\n    gYFLw: 'adff2f',\n    gYy: '808080',\n    honeyMw: 'f0fff0',\n    hotpRk: 'ff69b4',\n    RdianYd: 'cd5c5c',\n    Rdigo: '4b0082',\n    ivSy: 'fffff0',\n    khaki: 'f0e68c',\n    lavFMr: 'e6e6fa',\n    lavFMrXsh: 'fff0f5',\n    lawngYF: '7cfc00',\n    NmoncEffon: 'fffacd',\n    ZXe: 'add8e6',\n    ZcSO: 'f08080',\n    Zcyan: 'e0ffff',\n    ZgTMnPdLw: 'fafad2',\n    ZWay: 'd3d3d3',\n    ZgYF: '90ee90',\n    ZgYy: 'd3d3d3',\n    ZpRk: 'ffb6c1',\n    ZsOmon: 'ffa07a',\n    ZsHgYF: '20b2aa',\n    ZskyXe: '87cefa',\n    ZUWay: '778899',\n    ZUgYy: '778899',\n    ZstAlXe: 'b0c4de',\n    ZLw: 'ffffe0',\n    lime: 'ff00',\n    limegYF: '32cd32',\n    lRF: 'faf0e6',\n    magFta: 'ff00ff',\n    maPon: '800000',\n    VaquamarRe: '66cdaa',\n    VXe: 'cd',\n    VScEd: 'ba55d3',\n    VpurpN: '9370db',\n    VsHgYF: '3cb371',\n    VUXe: '7b68ee',\n    VsprRggYF: 'fa9a',\n    VQe: '48d1cc',\n    VviTetYd: 'c71585',\n    midnightXe: '191970',\n    mRtcYam: 'f5fffa',\n    mistyPse: 'ffe4e1',\n    moccasR: 'ffe4b5',\n    navajowEte: 'ffdead',\n    navy: '80',\n    Tdlace: 'fdf5e6',\n    Tive: '808000',\n    TivedBb: '6b8e23',\n    Sange: 'ffa500',\n    SangeYd: 'ff4500',\n    ScEd: 'da70d6',\n    pOegTMnPd: 'eee8aa',\n    pOegYF: '98fb98',\n    pOeQe: 'afeeee',\n    pOeviTetYd: 'db7093',\n    papayawEp: 'ffefd5',\n    pHKpuff: 'ffdab9',\n    peru: 'cd853f',\n    pRk: 'ffc0cb',\n    plum: 'dda0dd',\n    powMrXe: 'b0e0e6',\n    purpN: '800080',\n    YbeccapurpN: '663399',\n    Yd: 'ff0000',\n    Psybrown: 'bc8f8f',\n    PyOXe: '4169e1',\n    saddNbPwn: '8b4513',\n    sOmon: 'fa8072',\n    sandybPwn: 'f4a460',\n    sHgYF: '2e8b57',\n    sHshell: 'fff5ee',\n    siFna: 'a0522d',\n    silver: 'c0c0c0',\n    skyXe: '87ceeb',\n    UXe: '6a5acd',\n    UWay: '708090',\n    UgYy: '708090',\n    snow: 'fffafa',\n    sprRggYF: 'ff7f',\n    stAlXe: '4682b4',\n    tan: 'd2b48c',\n    teO: '8080',\n    tEstN: 'd8bfd8',\n    tomato: 'ff6347',\n    Qe: '40e0d0',\n    viTet: 'ee82ee',\n    JHt: 'f5deb3',\n    wEte: 'ffffff',\n    wEtesmoke: 'f5f5f5',\n    Lw: 'ffff00',\n    LwgYF: '9acd32'\n  };\n  function unpack() {\n    const unpacked = {};\n    const keys = Object.keys(names);\n    const tkeys = Object.keys(map$1$1);\n    let i, j, k, ok, nk;\n    for (i = 0; i < keys.length; i++) {\n      ok = nk = keys[i];\n      for (j = 0; j < tkeys.length; j++) {\n        k = tkeys[j];\n        nk = nk.replace(k, map$1$1[k]);\n      }\n      k = parseInt(names[ok], 16);\n      unpacked[nk] = [k >> 16 & 0xFF, k >> 8 & 0xFF, k & 0xFF];\n    }\n    return unpacked;\n  }\n  let names$1;\n  function nameParse(str) {\n    if (!names$1) {\n      names$1 = unpack();\n      names$1.transparent = [0, 0, 0, 0];\n    }\n    const a = names$1[str.toLowerCase()];\n    return a && {\n      r: a[0],\n      g: a[1],\n      b: a[2],\n      a: a.length === 4 ? a[3] : 255\n    };\n  }\n  function modHSL(v, i, ratio) {\n    if (v) {\n      let tmp = rgb2hsl(v);\n      tmp[i] = Math.max(0, Math.min(tmp[i] + tmp[i] * ratio, i === 0 ? 360 : 1));\n      tmp = hsl2rgb(tmp);\n      v.r = tmp[0];\n      v.g = tmp[1];\n      v.b = tmp[2];\n    }\n  }\n  function clone$1(v, proto) {\n    return v ? Object.assign(proto || {}, v) : v;\n  }\n  function fromObject(input) {\n    var v = {\n      r: 0,\n      g: 0,\n      b: 0,\n      a: 255\n    };\n    if (Array.isArray(input)) {\n      if (input.length >= 3) {\n        v = {\n          r: input[0],\n          g: input[1],\n          b: input[2],\n          a: 255\n        };\n        if (input.length > 3) {\n          v.a = n2b(input[3]);\n        }\n      }\n    } else {\n      v = clone$1(input, {\n        r: 0,\n        g: 0,\n        b: 0,\n        a: 1\n      });\n      v.a = n2b(v.a);\n    }\n    return v;\n  }\n  function functionParse(str) {\n    if (str.charAt(0) === 'r') {\n      return rgbParse(str);\n    }\n    return hueParse(str);\n  }\n  class Color {\n    constructor(input) {\n      if (input instanceof Color) {\n        return input;\n      }\n      const type = typeof input;\n      let v;\n      if (type === 'object') {\n        v = fromObject(input);\n      } else if (type === 'string') {\n        v = hexParse(input) || nameParse(input) || functionParse(input);\n      }\n      this._rgb = v;\n      this._valid = !!v;\n    }\n    get valid() {\n      return this._valid;\n    }\n    get rgb() {\n      var v = clone$1(this._rgb);\n      if (v) {\n        v.a = b2n(v.a);\n      }\n      return v;\n    }\n    set rgb(obj) {\n      this._rgb = fromObject(obj);\n    }\n    rgbString() {\n      return this._valid ? rgbString(this._rgb) : this._rgb;\n    }\n    hexString() {\n      return this._valid ? hexString(this._rgb) : this._rgb;\n    }\n    hslString() {\n      return this._valid ? hslString(this._rgb) : this._rgb;\n    }\n    mix(color, weight) {\n      const me = this;\n      if (color) {\n        const c1 = me.rgb;\n        const c2 = color.rgb;\n        let w2;\n        const p = weight === w2 ? 0.5 : weight;\n        const w = 2 * p - 1;\n        const a = c1.a - c2.a;\n        const w1 = ((w * a === -1 ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n        w2 = 1 - w1;\n        c1.r = 0xFF & w1 * c1.r + w2 * c2.r + 0.5;\n        c1.g = 0xFF & w1 * c1.g + w2 * c2.g + 0.5;\n        c1.b = 0xFF & w1 * c1.b + w2 * c2.b + 0.5;\n        c1.a = p * c1.a + (1 - p) * c2.a;\n        me.rgb = c1;\n      }\n      return me;\n    }\n    clone() {\n      return new Color(this.rgb);\n    }\n    alpha(a) {\n      this._rgb.a = n2b(a);\n      return this;\n    }\n    clearer(ratio) {\n      const rgb = this._rgb;\n      rgb.a *= 1 - ratio;\n      return this;\n    }\n    greyscale() {\n      const rgb = this._rgb;\n      const val = round(rgb.r * 0.3 + rgb.g * 0.59 + rgb.b * 0.11);\n      rgb.r = rgb.g = rgb.b = val;\n      return this;\n    }\n    opaquer(ratio) {\n      const rgb = this._rgb;\n      rgb.a *= 1 + ratio;\n      return this;\n    }\n    negate() {\n      const v = this._rgb;\n      v.r = 255 - v.r;\n      v.g = 255 - v.g;\n      v.b = 255 - v.b;\n      return this;\n    }\n    lighten(ratio) {\n      modHSL(this._rgb, 2, ratio);\n      return this;\n    }\n    darken(ratio) {\n      modHSL(this._rgb, 2, -ratio);\n      return this;\n    }\n    saturate(ratio) {\n      modHSL(this._rgb, 1, ratio);\n      return this;\n    }\n    desaturate(ratio) {\n      modHSL(this._rgb, 1, -ratio);\n      return this;\n    }\n    rotate(deg) {\n      rotate(this._rgb, deg);\n      return this;\n    }\n  }\n  function index_esm(input) {\n    return new Color(input);\n  }\n  const isPatternOrGradient = value => value instanceof CanvasGradient || value instanceof CanvasPattern;\n  function color(value) {\n    return isPatternOrGradient(value) ? value : index_esm(value);\n  }\n  function getHoverColor(value) {\n    return isPatternOrGradient(value) ? value : index_esm(value).saturate(0.5).darken(0.1).hexString();\n  }\n  function noop() {}\n  const uid = function () {\n    let id = 0;\n    return function () {\n      return id++;\n    };\n  }();\n  function isNullOrUndef(value) {\n    return value === null || typeof value === 'undefined';\n  }\n  function isArray(value) {\n    if (Array.isArray && Array.isArray(value)) {\n      return true;\n    }\n    const type = Object.prototype.toString.call(value);\n    if (type.substr(0, 7) === '[object' && type.substr(-6) === 'Array]') {\n      return true;\n    }\n    return false;\n  }\n  function isObject(value) {\n    return value !== null && Object.prototype.toString.call(value) === '[object Object]';\n  }\n  const isNumberFinite = value => (typeof value === 'number' || value instanceof Number) && isFinite(+value);\n  function finiteOrDefault(value, defaultValue) {\n    return isNumberFinite(value) ? value : defaultValue;\n  }\n  function valueOrDefault(value, defaultValue) {\n    return typeof value === 'undefined' ? defaultValue : value;\n  }\n  const toPercentage = (value, dimension) => typeof value === 'string' && value.endsWith('%') ? parseFloat(value) / 100 : value / dimension;\n  const toDimension = (value, dimension) => typeof value === 'string' && value.endsWith('%') ? parseFloat(value) / 100 * dimension : +value;\n  function callback(fn, args, thisArg) {\n    if (fn && typeof fn.call === 'function') {\n      return fn.apply(thisArg, args);\n    }\n  }\n  function each(loopable, fn, thisArg, reverse) {\n    let i, len, keys;\n    if (isArray(loopable)) {\n      len = loopable.length;\n      if (reverse) {\n        for (i = len - 1; i >= 0; i--) {\n          fn.call(thisArg, loopable[i], i);\n        }\n      } else {\n        for (i = 0; i < len; i++) {\n          fn.call(thisArg, loopable[i], i);\n        }\n      }\n    } else if (isObject(loopable)) {\n      keys = Object.keys(loopable);\n      len = keys.length;\n      for (i = 0; i < len; i++) {\n        fn.call(thisArg, loopable[keys[i]], keys[i]);\n      }\n    }\n  }\n  function _elementsEqual(a0, a1) {\n    let i, ilen, v0, v1;\n    if (!a0 || !a1 || a0.length !== a1.length) {\n      return false;\n    }\n    for (i = 0, ilen = a0.length; i < ilen; ++i) {\n      v0 = a0[i];\n      v1 = a1[i];\n      if (v0.datasetIndex !== v1.datasetIndex || v0.index !== v1.index) {\n        return false;\n      }\n    }\n    return true;\n  }\n  function clone(source) {\n    if (isArray(source)) {\n      return source.map(clone);\n    }\n    if (isObject(source)) {\n      const target = Object.create(null);\n      const keys = Object.keys(source);\n      const klen = keys.length;\n      let k = 0;\n      for (; k < klen; ++k) {\n        target[keys[k]] = clone(source[keys[k]]);\n      }\n      return target;\n    }\n    return source;\n  }\n  function isValidKey(key) {\n    return ['__proto__', 'prototype', 'constructor'].indexOf(key) === -1;\n  }\n  function _merger(key, target, source, options) {\n    if (!isValidKey(key)) {\n      return;\n    }\n    const tval = target[key];\n    const sval = source[key];\n    if (isObject(tval) && isObject(sval)) {\n      merge(tval, sval, options);\n    } else {\n      target[key] = clone(sval);\n    }\n  }\n  function merge(target, source, options) {\n    const sources = isArray(source) ? source : [source];\n    const ilen = sources.length;\n    if (!isObject(target)) {\n      return target;\n    }\n    options = options || {};\n    const merger = options.merger || _merger;\n    for (let i = 0; i < ilen; ++i) {\n      source = sources[i];\n      if (!isObject(source)) {\n        continue;\n      }\n      const keys = Object.keys(source);\n      for (let k = 0, klen = keys.length; k < klen; ++k) {\n        merger(keys[k], target, source, options);\n      }\n    }\n    return target;\n  }\n  function mergeIf(target, source) {\n    return merge(target, source, {\n      merger: _mergerIf\n    });\n  }\n  function _mergerIf(key, target, source) {\n    if (!isValidKey(key)) {\n      return;\n    }\n    const tval = target[key];\n    const sval = source[key];\n    if (isObject(tval) && isObject(sval)) {\n      mergeIf(tval, sval);\n    } else if (!Object.prototype.hasOwnProperty.call(target, key)) {\n      target[key] = clone(sval);\n    }\n  }\n  function _deprecated(scope, value, previous, current) {\n    if (value !== undefined) {\n      console.warn(scope + ': \"' + previous + '\" is deprecated. Please use \"' + current + '\" instead');\n    }\n  }\n  const emptyString = '';\n  const dot = '.';\n  function indexOfDotOrLength(key, start) {\n    const idx = key.indexOf(dot, start);\n    return idx === -1 ? key.length : idx;\n  }\n  function resolveObjectKey(obj, key) {\n    if (key === emptyString) {\n      return obj;\n    }\n    let pos = 0;\n    let idx = indexOfDotOrLength(key, pos);\n    while (obj && idx > pos) {\n      obj = obj[key.substr(pos, idx - pos)];\n      pos = idx + 1;\n      idx = indexOfDotOrLength(key, pos);\n    }\n    return obj;\n  }\n  function _capitalize(str) {\n    return str.charAt(0).toUpperCase() + str.slice(1);\n  }\n  const defined = value => typeof value !== 'undefined';\n  const isFunction = value => typeof value === 'function';\n  const setsEqual = (a, b) => {\n    if (a.size !== b.size) {\n      return false;\n    }\n    for (const item of a) {\n      if (!b.has(item)) {\n        return false;\n      }\n    }\n    return true;\n  };\n  function _isClickEvent(e) {\n    return e.type === 'mouseup' || e.type === 'click' || e.type === 'contextmenu';\n  }\n  const overrides = Object.create(null);\n  const descriptors = Object.create(null);\n  function getScope$1(node, key) {\n    if (!key) {\n      return node;\n    }\n    const keys = key.split('.');\n    for (let i = 0, n = keys.length; i < n; ++i) {\n      const k = keys[i];\n      node = node[k] || (node[k] = Object.create(null));\n    }\n    return node;\n  }\n  function set(root, scope, values) {\n    if (typeof scope === 'string') {\n      return merge(getScope$1(root, scope), values);\n    }\n    return merge(getScope$1(root, ''), scope);\n  }\n  class Defaults {\n    constructor(_descriptors) {\n      this.animation = undefined;\n      this.backgroundColor = 'rgba(0,0,0,0.1)';\n      this.borderColor = 'rgba(0,0,0,0.1)';\n      this.color = '#666';\n      this.datasets = {};\n      this.devicePixelRatio = context => context.chart.platform.getDevicePixelRatio();\n      this.elements = {};\n      this.events = ['mousemove', 'mouseout', 'click', 'touchstart', 'touchmove'];\n      this.font = {\n        family: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n        size: 12,\n        style: 'normal',\n        lineHeight: 1.2,\n        weight: null\n      };\n      this.hover = {};\n      this.hoverBackgroundColor = (ctx, options) => getHoverColor(options.backgroundColor);\n      this.hoverBorderColor = (ctx, options) => getHoverColor(options.borderColor);\n      this.hoverColor = (ctx, options) => getHoverColor(options.color);\n      this.indexAxis = 'x';\n      this.interaction = {\n        mode: 'nearest',\n        intersect: true\n      };\n      this.maintainAspectRatio = true;\n      this.onHover = null;\n      this.onClick = null;\n      this.parsing = true;\n      this.plugins = {};\n      this.responsive = true;\n      this.scale = undefined;\n      this.scales = {};\n      this.showLine = true;\n      this.drawActiveElementsOnTop = true;\n      this.describe(_descriptors);\n    }\n    set(scope, values) {\n      return set(this, scope, values);\n    }\n    get(scope) {\n      return getScope$1(this, scope);\n    }\n    describe(scope, values) {\n      return set(descriptors, scope, values);\n    }\n    override(scope, values) {\n      return set(overrides, scope, values);\n    }\n    route(scope, name, targetScope, targetName) {\n      const scopeObject = getScope$1(this, scope);\n      const targetScopeObject = getScope$1(this, targetScope);\n      const privateName = '_' + name;\n      Object.defineProperties(scopeObject, {\n        [privateName]: {\n          value: scopeObject[name],\n          writable: true\n        },\n        [name]: {\n          enumerable: true,\n          get() {\n            const local = this[privateName];\n            const target = targetScopeObject[targetName];\n            if (isObject(local)) {\n              return Object.assign({}, target, local);\n            }\n            return valueOrDefault(local, target);\n          },\n          set(value) {\n            this[privateName] = value;\n          }\n        }\n      });\n    }\n  }\n  var defaults = new Defaults({\n    _scriptable: name => !name.startsWith('on'),\n    _indexable: name => name !== 'events',\n    hover: {\n      _fallback: 'interaction'\n    },\n    interaction: {\n      _scriptable: false,\n      _indexable: false\n    }\n  });\n  const PI = Math.PI;\n  const TAU = 2 * PI;\n  const PITAU = TAU + PI;\n  const INFINITY = Number.POSITIVE_INFINITY;\n  const RAD_PER_DEG = PI / 180;\n  const HALF_PI = PI / 2;\n  const QUARTER_PI = PI / 4;\n  const TWO_THIRDS_PI = PI * 2 / 3;\n  const log10 = Math.log10;\n  const sign = Math.sign;\n  function niceNum(range) {\n    const roundedRange = Math.round(range);\n    range = almostEquals(range, roundedRange, range / 1000) ? roundedRange : range;\n    const niceRange = Math.pow(10, Math.floor(log10(range)));\n    const fraction = range / niceRange;\n    const niceFraction = fraction <= 1 ? 1 : fraction <= 2 ? 2 : fraction <= 5 ? 5 : 10;\n    return niceFraction * niceRange;\n  }\n  function _factorize(value) {\n    const result = [];\n    const sqrt = Math.sqrt(value);\n    let i;\n    for (i = 1; i < sqrt; i++) {\n      if (value % i === 0) {\n        result.push(i);\n        result.push(value / i);\n      }\n    }\n    if (sqrt === (sqrt | 0)) {\n      result.push(sqrt);\n    }\n    result.sort((a, b) => a - b).pop();\n    return result;\n  }\n  function isNumber(n) {\n    return !isNaN(parseFloat(n)) && isFinite(n);\n  }\n  function almostEquals(x, y, epsilon) {\n    return Math.abs(x - y) < epsilon;\n  }\n  function almostWhole(x, epsilon) {\n    const rounded = Math.round(x);\n    return rounded - epsilon <= x && rounded + epsilon >= x;\n  }\n  function _setMinAndMaxByKey(array, target, property) {\n    let i, ilen, value;\n    for (i = 0, ilen = array.length; i < ilen; i++) {\n      value = array[i][property];\n      if (!isNaN(value)) {\n        target.min = Math.min(target.min, value);\n        target.max = Math.max(target.max, value);\n      }\n    }\n  }\n  function toRadians(degrees) {\n    return degrees * (PI / 180);\n  }\n  function toDegrees(radians) {\n    return radians * (180 / PI);\n  }\n  function _decimalPlaces(x) {\n    if (!isNumberFinite(x)) {\n      return;\n    }\n    let e = 1;\n    let p = 0;\n    while (Math.round(x * e) / e !== x) {\n      e *= 10;\n      p++;\n    }\n    return p;\n  }\n  function getAngleFromPoint(centrePoint, anglePoint) {\n    const distanceFromXCenter = anglePoint.x - centrePoint.x;\n    const distanceFromYCenter = anglePoint.y - centrePoint.y;\n    const radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n    let angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n    if (angle < -0.5 * PI) {\n      angle += TAU;\n    }\n    return {\n      angle,\n      distance: radialDistanceFromCenter\n    };\n  }\n  function distanceBetweenPoints(pt1, pt2) {\n    return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n  }\n  function _angleDiff(a, b) {\n    return (a - b + PITAU) % TAU - PI;\n  }\n  function _normalizeAngle(a) {\n    return (a % TAU + TAU) % TAU;\n  }\n  function _angleBetween(angle, start, end, sameAngleIsFullCircle) {\n    const a = _normalizeAngle(angle);\n    const s = _normalizeAngle(start);\n    const e = _normalizeAngle(end);\n    const angleToStart = _normalizeAngle(s - a);\n    const angleToEnd = _normalizeAngle(e - a);\n    const startToAngle = _normalizeAngle(a - s);\n    const endToAngle = _normalizeAngle(a - e);\n    return a === s || a === e || sameAngleIsFullCircle && s === e || angleToStart > angleToEnd && startToAngle < endToAngle;\n  }\n  function _limitValue(value, min, max) {\n    return Math.max(min, Math.min(max, value));\n  }\n  function _int16Range(value) {\n    return _limitValue(value, -32768, 32767);\n  }\n  function _isBetween(value, start, end, epsilon = 1e-6) {\n    return value >= Math.min(start, end) - epsilon && value <= Math.max(start, end) + epsilon;\n  }\n  function toFontString(font) {\n    if (!font || isNullOrUndef(font.size) || isNullOrUndef(font.family)) {\n      return null;\n    }\n    return (font.style ? font.style + ' ' : '') + (font.weight ? font.weight + ' ' : '') + font.size + 'px ' + font.family;\n  }\n  function _measureText(ctx, data, gc, longest, string) {\n    let textWidth = data[string];\n    if (!textWidth) {\n      textWidth = data[string] = ctx.measureText(string).width;\n      gc.push(string);\n    }\n    if (textWidth > longest) {\n      longest = textWidth;\n    }\n    return longest;\n  }\n  function _longestText(ctx, font, arrayOfThings, cache) {\n    cache = cache || {};\n    let data = cache.data = cache.data || {};\n    let gc = cache.garbageCollect = cache.garbageCollect || [];\n    if (cache.font !== font) {\n      data = cache.data = {};\n      gc = cache.garbageCollect = [];\n      cache.font = font;\n    }\n    ctx.save();\n    ctx.font = font;\n    let longest = 0;\n    const ilen = arrayOfThings.length;\n    let i, j, jlen, thing, nestedThing;\n    for (i = 0; i < ilen; i++) {\n      thing = arrayOfThings[i];\n      if (thing !== undefined && thing !== null && isArray(thing) !== true) {\n        longest = _measureText(ctx, data, gc, longest, thing);\n      } else if (isArray(thing)) {\n        for (j = 0, jlen = thing.length; j < jlen; j++) {\n          nestedThing = thing[j];\n          if (nestedThing !== undefined && nestedThing !== null && !isArray(nestedThing)) {\n            longest = _measureText(ctx, data, gc, longest, nestedThing);\n          }\n        }\n      }\n    }\n    ctx.restore();\n    const gcLen = gc.length / 2;\n    if (gcLen > arrayOfThings.length) {\n      for (i = 0; i < gcLen; i++) {\n        delete data[gc[i]];\n      }\n      gc.splice(0, gcLen);\n    }\n    return longest;\n  }\n  function _alignPixel(chart, pixel, width) {\n    const devicePixelRatio = chart.currentDevicePixelRatio;\n    const halfWidth = width !== 0 ? Math.max(width / 2, 0.5) : 0;\n    return Math.round((pixel - halfWidth) * devicePixelRatio) / devicePixelRatio + halfWidth;\n  }\n  function clearCanvas(canvas, ctx) {\n    ctx = ctx || canvas.getContext('2d');\n    ctx.save();\n    ctx.resetTransform();\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    ctx.restore();\n  }\n  function drawPoint(ctx, options, x, y) {\n    let type, xOffset, yOffset, size, cornerRadius;\n    const style = options.pointStyle;\n    const rotation = options.rotation;\n    const radius = options.radius;\n    let rad = (rotation || 0) * RAD_PER_DEG;\n    if (style && typeof style === 'object') {\n      type = style.toString();\n      if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n        ctx.save();\n        ctx.translate(x, y);\n        ctx.rotate(rad);\n        ctx.drawImage(style, -style.width / 2, -style.height / 2, style.width, style.height);\n        ctx.restore();\n        return;\n      }\n    }\n    if (isNaN(radius) || radius <= 0) {\n      return;\n    }\n    ctx.beginPath();\n    switch (style) {\n      default:\n        ctx.arc(x, y, radius, 0, TAU);\n        ctx.closePath();\n        break;\n      case 'triangle':\n        ctx.moveTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n        rad += TWO_THIRDS_PI;\n        ctx.lineTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n        rad += TWO_THIRDS_PI;\n        ctx.lineTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n        ctx.closePath();\n        break;\n      case 'rectRounded':\n        cornerRadius = radius * 0.516;\n        size = radius - cornerRadius;\n        xOffset = Math.cos(rad + QUARTER_PI) * size;\n        yOffset = Math.sin(rad + QUARTER_PI) * size;\n        ctx.arc(x - xOffset, y - yOffset, cornerRadius, rad - PI, rad - HALF_PI);\n        ctx.arc(x + yOffset, y - xOffset, cornerRadius, rad - HALF_PI, rad);\n        ctx.arc(x + xOffset, y + yOffset, cornerRadius, rad, rad + HALF_PI);\n        ctx.arc(x - yOffset, y + xOffset, cornerRadius, rad + HALF_PI, rad + PI);\n        ctx.closePath();\n        break;\n      case 'rect':\n        if (!rotation) {\n          size = Math.SQRT1_2 * radius;\n          ctx.rect(x - size, y - size, 2 * size, 2 * size);\n          break;\n        }\n        rad += QUARTER_PI;\n      case 'rectRot':\n        xOffset = Math.cos(rad) * radius;\n        yOffset = Math.sin(rad) * radius;\n        ctx.moveTo(x - xOffset, y - yOffset);\n        ctx.lineTo(x + yOffset, y - xOffset);\n        ctx.lineTo(x + xOffset, y + yOffset);\n        ctx.lineTo(x - yOffset, y + xOffset);\n        ctx.closePath();\n        break;\n      case 'crossRot':\n        rad += QUARTER_PI;\n      case 'cross':\n        xOffset = Math.cos(rad) * radius;\n        yOffset = Math.sin(rad) * radius;\n        ctx.moveTo(x - xOffset, y - yOffset);\n        ctx.lineTo(x + xOffset, y + yOffset);\n        ctx.moveTo(x + yOffset, y - xOffset);\n        ctx.lineTo(x - yOffset, y + xOffset);\n        break;\n      case 'star':\n        xOffset = Math.cos(rad) * radius;\n        yOffset = Math.sin(rad) * radius;\n        ctx.moveTo(x - xOffset, y - yOffset);\n        ctx.lineTo(x + xOffset, y + yOffset);\n        ctx.moveTo(x + yOffset, y - xOffset);\n        ctx.lineTo(x - yOffset, y + xOffset);\n        rad += QUARTER_PI;\n        xOffset = Math.cos(rad) * radius;\n        yOffset = Math.sin(rad) * radius;\n        ctx.moveTo(x - xOffset, y - yOffset);\n        ctx.lineTo(x + xOffset, y + yOffset);\n        ctx.moveTo(x + yOffset, y - xOffset);\n        ctx.lineTo(x - yOffset, y + xOffset);\n        break;\n      case 'line':\n        xOffset = Math.cos(rad) * radius;\n        yOffset = Math.sin(rad) * radius;\n        ctx.moveTo(x - xOffset, y - yOffset);\n        ctx.lineTo(x + xOffset, y + yOffset);\n        break;\n      case 'dash':\n        ctx.moveTo(x, y);\n        ctx.lineTo(x + Math.cos(rad) * radius, y + Math.sin(rad) * radius);\n        break;\n    }\n    ctx.fill();\n    if (options.borderWidth > 0) {\n      ctx.stroke();\n    }\n  }\n  function _isPointInArea(point, area, margin) {\n    margin = margin || 0.5;\n    return !area || point && point.x > area.left - margin && point.x < area.right + margin && point.y > area.top - margin && point.y < area.bottom + margin;\n  }\n  function clipArea(ctx, area) {\n    ctx.save();\n    ctx.beginPath();\n    ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n    ctx.clip();\n  }\n  function unclipArea(ctx) {\n    ctx.restore();\n  }\n  function _steppedLineTo(ctx, previous, target, flip, mode) {\n    if (!previous) {\n      return ctx.lineTo(target.x, target.y);\n    }\n    if (mode === 'middle') {\n      const midpoint = (previous.x + target.x) / 2.0;\n      ctx.lineTo(midpoint, previous.y);\n      ctx.lineTo(midpoint, target.y);\n    } else if (mode === 'after' !== !!flip) {\n      ctx.lineTo(previous.x, target.y);\n    } else {\n      ctx.lineTo(target.x, previous.y);\n    }\n    ctx.lineTo(target.x, target.y);\n  }\n  function _bezierCurveTo(ctx, previous, target, flip) {\n    if (!previous) {\n      return ctx.lineTo(target.x, target.y);\n    }\n    ctx.bezierCurveTo(flip ? previous.cp1x : previous.cp2x, flip ? previous.cp1y : previous.cp2y, flip ? target.cp2x : target.cp1x, flip ? target.cp2y : target.cp1y, target.x, target.y);\n  }\n  function renderText(ctx, text, x, y, font, opts = {}) {\n    const lines = isArray(text) ? text : [text];\n    const stroke = opts.strokeWidth > 0 && opts.strokeColor !== '';\n    let i, line;\n    ctx.save();\n    ctx.font = font.string;\n    setRenderOpts(ctx, opts);\n    for (i = 0; i < lines.length; ++i) {\n      line = lines[i];\n      if (stroke) {\n        if (opts.strokeColor) {\n          ctx.strokeStyle = opts.strokeColor;\n        }\n        if (!isNullOrUndef(opts.strokeWidth)) {\n          ctx.lineWidth = opts.strokeWidth;\n        }\n        ctx.strokeText(line, x, y, opts.maxWidth);\n      }\n      ctx.fillText(line, x, y, opts.maxWidth);\n      decorateText(ctx, x, y, line, opts);\n      y += font.lineHeight;\n    }\n    ctx.restore();\n  }\n  function setRenderOpts(ctx, opts) {\n    if (opts.translation) {\n      ctx.translate(opts.translation[0], opts.translation[1]);\n    }\n    if (!isNullOrUndef(opts.rotation)) {\n      ctx.rotate(opts.rotation);\n    }\n    if (opts.color) {\n      ctx.fillStyle = opts.color;\n    }\n    if (opts.textAlign) {\n      ctx.textAlign = opts.textAlign;\n    }\n    if (opts.textBaseline) {\n      ctx.textBaseline = opts.textBaseline;\n    }\n  }\n  function decorateText(ctx, x, y, line, opts) {\n    if (opts.strikethrough || opts.underline) {\n      const metrics = ctx.measureText(line);\n      const left = x - metrics.actualBoundingBoxLeft;\n      const right = x + metrics.actualBoundingBoxRight;\n      const top = y - metrics.actualBoundingBoxAscent;\n      const bottom = y + metrics.actualBoundingBoxDescent;\n      const yDecoration = opts.strikethrough ? (top + bottom) / 2 : bottom;\n      ctx.strokeStyle = ctx.fillStyle;\n      ctx.beginPath();\n      ctx.lineWidth = opts.decorationWidth || 2;\n      ctx.moveTo(left, yDecoration);\n      ctx.lineTo(right, yDecoration);\n      ctx.stroke();\n    }\n  }\n  function addRoundedRectPath(ctx, rect) {\n    const {\n      x,\n      y,\n      w,\n      h,\n      radius\n    } = rect;\n    ctx.arc(x + radius.topLeft, y + radius.topLeft, radius.topLeft, -HALF_PI, PI, true);\n    ctx.lineTo(x, y + h - radius.bottomLeft);\n    ctx.arc(x + radius.bottomLeft, y + h - radius.bottomLeft, radius.bottomLeft, PI, HALF_PI, true);\n    ctx.lineTo(x + w - radius.bottomRight, y + h);\n    ctx.arc(x + w - radius.bottomRight, y + h - radius.bottomRight, radius.bottomRight, HALF_PI, 0, true);\n    ctx.lineTo(x + w, y + radius.topRight);\n    ctx.arc(x + w - radius.topRight, y + radius.topRight, radius.topRight, 0, -HALF_PI, true);\n    ctx.lineTo(x + radius.topLeft, y);\n  }\n  function _lookup(table, value, cmp) {\n    cmp = cmp || (index => table[index] < value);\n    let hi = table.length - 1;\n    let lo = 0;\n    let mid;\n    while (hi - lo > 1) {\n      mid = lo + hi >> 1;\n      if (cmp(mid)) {\n        lo = mid;\n      } else {\n        hi = mid;\n      }\n    }\n    return {\n      lo,\n      hi\n    };\n  }\n  const _lookupByKey = (table, key, value) => _lookup(table, value, index => table[index][key] < value);\n  const _rlookupByKey = (table, key, value) => _lookup(table, value, index => table[index][key] >= value);\n  function _filterBetween(values, min, max) {\n    let start = 0;\n    let end = values.length;\n    while (start < end && values[start] < min) {\n      start++;\n    }\n    while (end > start && values[end - 1] > max) {\n      end--;\n    }\n    return start > 0 || end < values.length ? values.slice(start, end) : values;\n  }\n  const arrayEvents = ['push', 'pop', 'shift', 'splice', 'unshift'];\n  function listenArrayEvents(array, listener) {\n    if (array._chartjs) {\n      array._chartjs.listeners.push(listener);\n      return;\n    }\n    Object.defineProperty(array, '_chartjs', {\n      configurable: true,\n      enumerable: false,\n      value: {\n        listeners: [listener]\n      }\n    });\n    arrayEvents.forEach(key => {\n      const method = '_onData' + _capitalize(key);\n      const base = array[key];\n      Object.defineProperty(array, key, {\n        configurable: true,\n        enumerable: false,\n        value(...args) {\n          const res = base.apply(this, args);\n          array._chartjs.listeners.forEach(object => {\n            if (typeof object[method] === 'function') {\n              object[method](...args);\n            }\n          });\n          return res;\n        }\n      });\n    });\n  }\n  function unlistenArrayEvents(array, listener) {\n    const stub = array._chartjs;\n    if (!stub) {\n      return;\n    }\n    const listeners = stub.listeners;\n    const index = listeners.indexOf(listener);\n    if (index !== -1) {\n      listeners.splice(index, 1);\n    }\n    if (listeners.length > 0) {\n      return;\n    }\n    arrayEvents.forEach(key => {\n      delete array[key];\n    });\n    delete array._chartjs;\n  }\n  function _arrayUnique(items) {\n    const set = new Set();\n    let i, ilen;\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      set.add(items[i]);\n    }\n    if (set.size === ilen) {\n      return items;\n    }\n    return Array.from(set);\n  }\n  function _isDomSupported() {\n    return typeof window !== 'undefined' && typeof document !== 'undefined';\n  }\n  function _getParentNode(domNode) {\n    let parent = domNode.parentNode;\n    if (parent && parent.toString() === '[object ShadowRoot]') {\n      parent = parent.host;\n    }\n    return parent;\n  }\n  function parseMaxStyle(styleValue, node, parentProperty) {\n    let valueInPixels;\n    if (typeof styleValue === 'string') {\n      valueInPixels = parseInt(styleValue, 10);\n      if (styleValue.indexOf('%') !== -1) {\n        valueInPixels = valueInPixels / 100 * node.parentNode[parentProperty];\n      }\n    } else {\n      valueInPixels = styleValue;\n    }\n    return valueInPixels;\n  }\n  const getComputedStyle = element => window.getComputedStyle(element, null);\n  function getStyle(el, property) {\n    return getComputedStyle(el).getPropertyValue(property);\n  }\n  const positions = ['top', 'right', 'bottom', 'left'];\n  function getPositionedStyle(styles, style, suffix) {\n    const result = {};\n    suffix = suffix ? '-' + suffix : '';\n    for (let i = 0; i < 4; i++) {\n      const pos = positions[i];\n      result[pos] = parseFloat(styles[style + '-' + pos + suffix]) || 0;\n    }\n    result.width = result.left + result.right;\n    result.height = result.top + result.bottom;\n    return result;\n  }\n  const useOffsetPos = (x, y, target) => (x > 0 || y > 0) && (!target || !target.shadowRoot);\n  function getCanvasPosition(evt, canvas) {\n    const e = evt.native || evt;\n    const touches = e.touches;\n    const source = touches && touches.length ? touches[0] : e;\n    const {\n      offsetX,\n      offsetY\n    } = source;\n    let box = false;\n    let x, y;\n    if (useOffsetPos(offsetX, offsetY, e.target)) {\n      x = offsetX;\n      y = offsetY;\n    } else {\n      const rect = canvas.getBoundingClientRect();\n      x = source.clientX - rect.left;\n      y = source.clientY - rect.top;\n      box = true;\n    }\n    return {\n      x,\n      y,\n      box\n    };\n  }\n  function getRelativePosition$1(evt, chart) {\n    const {\n      canvas,\n      currentDevicePixelRatio\n    } = chart;\n    const style = getComputedStyle(canvas);\n    const borderBox = style.boxSizing === 'border-box';\n    const paddings = getPositionedStyle(style, 'padding');\n    const borders = getPositionedStyle(style, 'border', 'width');\n    const {\n      x,\n      y,\n      box\n    } = getCanvasPosition(evt, canvas);\n    const xOffset = paddings.left + (box && borders.left);\n    const yOffset = paddings.top + (box && borders.top);\n    let {\n      width,\n      height\n    } = chart;\n    if (borderBox) {\n      width -= paddings.width + borders.width;\n      height -= paddings.height + borders.height;\n    }\n    return {\n      x: Math.round((x - xOffset) / width * canvas.width / currentDevicePixelRatio),\n      y: Math.round((y - yOffset) / height * canvas.height / currentDevicePixelRatio)\n    };\n  }\n  function getContainerSize(canvas, width, height) {\n    let maxWidth, maxHeight;\n    if (width === undefined || height === undefined) {\n      const container = _getParentNode(canvas);\n      if (!container) {\n        width = canvas.clientWidth;\n        height = canvas.clientHeight;\n      } else {\n        const rect = container.getBoundingClientRect();\n        const containerStyle = getComputedStyle(container);\n        const containerBorder = getPositionedStyle(containerStyle, 'border', 'width');\n        const containerPadding = getPositionedStyle(containerStyle, 'padding');\n        width = rect.width - containerPadding.width - containerBorder.width;\n        height = rect.height - containerPadding.height - containerBorder.height;\n        maxWidth = parseMaxStyle(containerStyle.maxWidth, container, 'clientWidth');\n        maxHeight = parseMaxStyle(containerStyle.maxHeight, container, 'clientHeight');\n      }\n    }\n    return {\n      width,\n      height,\n      maxWidth: maxWidth || INFINITY,\n      maxHeight: maxHeight || INFINITY\n    };\n  }\n  const round1 = v => Math.round(v * 10) / 10;\n  function getMaximumSize(canvas, bbWidth, bbHeight, aspectRatio) {\n    const style = getComputedStyle(canvas);\n    const margins = getPositionedStyle(style, 'margin');\n    const maxWidth = parseMaxStyle(style.maxWidth, canvas, 'clientWidth') || INFINITY;\n    const maxHeight = parseMaxStyle(style.maxHeight, canvas, 'clientHeight') || INFINITY;\n    const containerSize = getContainerSize(canvas, bbWidth, bbHeight);\n    let {\n      width,\n      height\n    } = containerSize;\n    if (style.boxSizing === 'content-box') {\n      const borders = getPositionedStyle(style, 'border', 'width');\n      const paddings = getPositionedStyle(style, 'padding');\n      width -= paddings.width + borders.width;\n      height -= paddings.height + borders.height;\n    }\n    width = Math.max(0, width - margins.width);\n    height = Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height - margins.height);\n    width = round1(Math.min(width, maxWidth, containerSize.maxWidth));\n    height = round1(Math.min(height, maxHeight, containerSize.maxHeight));\n    if (width && !height) {\n      height = round1(width / 2);\n    }\n    return {\n      width,\n      height\n    };\n  }\n  function retinaScale(chart, forceRatio, forceStyle) {\n    const pixelRatio = forceRatio || 1;\n    const deviceHeight = Math.floor(chart.height * pixelRatio);\n    const deviceWidth = Math.floor(chart.width * pixelRatio);\n    chart.height = deviceHeight / pixelRatio;\n    chart.width = deviceWidth / pixelRatio;\n    const canvas = chart.canvas;\n    if (canvas.style && (forceStyle || !canvas.style.height && !canvas.style.width)) {\n      canvas.style.height = `${chart.height}px`;\n      canvas.style.width = `${chart.width}px`;\n    }\n    if (chart.currentDevicePixelRatio !== pixelRatio || canvas.height !== deviceHeight || canvas.width !== deviceWidth) {\n      chart.currentDevicePixelRatio = pixelRatio;\n      canvas.height = deviceHeight;\n      canvas.width = deviceWidth;\n      chart.ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n      return true;\n    }\n    return false;\n  }\n  const supportsEventListenerOptions = function () {\n    let passiveSupported = false;\n    try {\n      const options = {\n        get passive() {\n          passiveSupported = true;\n          return false;\n        }\n      };\n      window.addEventListener('test', null, options);\n      window.removeEventListener('test', null, options);\n    } catch (e) {}\n    return passiveSupported;\n  }();\n  function readUsedSize(element, property) {\n    const value = getStyle(element, property);\n    const matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n    return matches ? +matches[1] : undefined;\n  }\n  function getRelativePosition(e, chart) {\n    if ('native' in e) {\n      return {\n        x: e.x,\n        y: e.y\n      };\n    }\n    return getRelativePosition$1(e, chart);\n  }\n  function evaluateAllVisibleItems(chart, handler) {\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    let index, data, element;\n    for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\n      ({\n        index,\n        data\n      } = metasets[i]);\n      for (let j = 0, jlen = data.length; j < jlen; ++j) {\n        element = data[j];\n        if (!element.skip) {\n          handler(element, index, j);\n        }\n      }\n    }\n  }\n  function binarySearch(metaset, axis, value, intersect) {\n    const {\n      controller,\n      data,\n      _sorted\n    } = metaset;\n    const iScale = controller._cachedMeta.iScale;\n    if (iScale && axis === iScale.axis && axis !== 'r' && _sorted && data.length) {\n      const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n      if (!intersect) {\n        return lookupMethod(data, axis, value);\n      } else if (controller._sharedOptions) {\n        const el = data[0];\n        const range = typeof el.getRange === 'function' && el.getRange(axis);\n        if (range) {\n          const start = lookupMethod(data, axis, value - range);\n          const end = lookupMethod(data, axis, value + range);\n          return {\n            lo: start.lo,\n            hi: end.hi\n          };\n        }\n      }\n    }\n    return {\n      lo: 0,\n      hi: data.length - 1\n    };\n  }\n  function optimizedEvaluateItems(chart, axis, position, handler, intersect) {\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const value = position[axis];\n    for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\n      const {\n        index,\n        data\n      } = metasets[i];\n      const {\n        lo,\n        hi\n      } = binarySearch(metasets[i], axis, value, intersect);\n      for (let j = lo; j <= hi; ++j) {\n        const element = data[j];\n        if (!element.skip) {\n          handler(element, index, j);\n        }\n      }\n    }\n  }\n  function getDistanceMetricForAxis(axis) {\n    const useX = axis.indexOf('x') !== -1;\n    const useY = axis.indexOf('y') !== -1;\n    return function (pt1, pt2) {\n      const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n      const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n      return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n    };\n  }\n  function getIntersectItems(chart, position, axis, useFinalPosition) {\n    const items = [];\n    if (!_isPointInArea(position, chart.chartArea, chart._minPadding)) {\n      return items;\n    }\n    const evaluationFunc = function (element, datasetIndex, index) {\n      if (element.inRange(position.x, position.y, useFinalPosition)) {\n        items.push({\n          element,\n          datasetIndex,\n          index\n        });\n      }\n    };\n    optimizedEvaluateItems(chart, axis, position, evaluationFunc, true);\n    return items;\n  }\n  function getNearestRadialItems(chart, position, axis, useFinalPosition) {\n    let items = [];\n    function evaluationFunc(element, datasetIndex, index) {\n      const {\n        startAngle,\n        endAngle\n      } = element.getProps(['startAngle', 'endAngle'], useFinalPosition);\n      const {\n        angle\n      } = getAngleFromPoint(element, {\n        x: position.x,\n        y: position.y\n      });\n      if (_angleBetween(angle, startAngle, endAngle)) {\n        items.push({\n          element,\n          datasetIndex,\n          index\n        });\n      }\n    }\n    optimizedEvaluateItems(chart, axis, position, evaluationFunc);\n    return items;\n  }\n  function getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition) {\n    let items = [];\n    const distanceMetric = getDistanceMetricForAxis(axis);\n    let minDistance = Number.POSITIVE_INFINITY;\n    function evaluationFunc(element, datasetIndex, index) {\n      const inRange = element.inRange(position.x, position.y, useFinalPosition);\n      if (intersect && !inRange) {\n        return;\n      }\n      const center = element.getCenterPoint(useFinalPosition);\n      const pointInArea = _isPointInArea(center, chart.chartArea, chart._minPadding);\n      if (!pointInArea && !inRange) {\n        return;\n      }\n      const distance = distanceMetric(position, center);\n      if (distance < minDistance) {\n        items = [{\n          element,\n          datasetIndex,\n          index\n        }];\n        minDistance = distance;\n      } else if (distance === minDistance) {\n        items.push({\n          element,\n          datasetIndex,\n          index\n        });\n      }\n    }\n    optimizedEvaluateItems(chart, axis, position, evaluationFunc);\n    return items;\n  }\n  function getNearestItems(chart, position, axis, intersect, useFinalPosition) {\n    if (!_isPointInArea(position, chart.chartArea, chart._minPadding)) {\n      return [];\n    }\n    return axis === 'r' && !intersect ? getNearestRadialItems(chart, position, axis, useFinalPosition) : getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition);\n  }\n  function getAxisItems(chart, e, options, useFinalPosition) {\n    const position = getRelativePosition(e, chart);\n    const items = [];\n    const axis = options.axis;\n    const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n    let intersectsItem = false;\n    evaluateAllVisibleItems(chart, (element, datasetIndex, index) => {\n      if (element[rangeMethod](position[axis], useFinalPosition)) {\n        items.push({\n          element,\n          datasetIndex,\n          index\n        });\n      }\n      if (element.inRange(position.x, position.y, useFinalPosition)) {\n        intersectsItem = true;\n      }\n    });\n    if (options.intersect && !intersectsItem) {\n      return [];\n    }\n    return items;\n  }\n  var Interaction = {\n    modes: {\n      index(chart, e, options, useFinalPosition) {\n        const position = getRelativePosition(e, chart);\n        const axis = options.axis || 'x';\n        const items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition) : getNearestItems(chart, position, axis, false, useFinalPosition);\n        const elements = [];\n        if (!items.length) {\n          return [];\n        }\n        chart.getSortedVisibleDatasetMetas().forEach(meta => {\n          const index = items[0].index;\n          const element = meta.data[index];\n          if (element && !element.skip) {\n            elements.push({\n              element,\n              datasetIndex: meta.index,\n              index\n            });\n          }\n        });\n        return elements;\n      },\n      dataset(chart, e, options, useFinalPosition) {\n        const position = getRelativePosition(e, chart);\n        const axis = options.axis || 'xy';\n        let items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition) : getNearestItems(chart, position, axis, false, useFinalPosition);\n        if (items.length > 0) {\n          const datasetIndex = items[0].datasetIndex;\n          const data = chart.getDatasetMeta(datasetIndex).data;\n          items = [];\n          for (let i = 0; i < data.length; ++i) {\n            items.push({\n              element: data[i],\n              datasetIndex,\n              index: i\n            });\n          }\n        }\n        return items;\n      },\n      point(chart, e, options, useFinalPosition) {\n        const position = getRelativePosition(e, chart);\n        const axis = options.axis || 'xy';\n        return getIntersectItems(chart, position, axis, useFinalPosition);\n      },\n      nearest(chart, e, options, useFinalPosition) {\n        const position = getRelativePosition(e, chart);\n        const axis = options.axis || 'xy';\n        return getNearestItems(chart, position, axis, options.intersect, useFinalPosition);\n      },\n      x(chart, e, options, useFinalPosition) {\n        return getAxisItems(chart, e, {\n          axis: 'x',\n          intersect: options.intersect\n        }, useFinalPosition);\n      },\n      y(chart, e, options, useFinalPosition) {\n        return getAxisItems(chart, e, {\n          axis: 'y',\n          intersect: options.intersect\n        }, useFinalPosition);\n      }\n    }\n  };\n  const LINE_HEIGHT = new RegExp(/^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/);\n  const FONT_STYLE = new RegExp(/^(normal|italic|initial|inherit|unset|(oblique( -?[0-9]?[0-9]deg)?))$/);\n  function toLineHeight(value, size) {\n    const matches = ('' + value).match(LINE_HEIGHT);\n    if (!matches || matches[1] === 'normal') {\n      return size * 1.2;\n    }\n    value = +matches[2];\n    switch (matches[3]) {\n      case 'px':\n        return value;\n      case '%':\n        value /= 100;\n        break;\n    }\n    return size * value;\n  }\n  const numberOrZero = v => +v || 0;\n  function _readValueToProps(value, props) {\n    const ret = {};\n    const objProps = isObject(props);\n    const keys = objProps ? Object.keys(props) : props;\n    const read = isObject(value) ? objProps ? prop => valueOrDefault(value[prop], value[props[prop]]) : prop => value[prop] : () => value;\n    for (const prop of keys) {\n      ret[prop] = numberOrZero(read(prop));\n    }\n    return ret;\n  }\n  function toTRBL(value) {\n    return _readValueToProps(value, {\n      top: 'y',\n      right: 'x',\n      bottom: 'y',\n      left: 'x'\n    });\n  }\n  function toTRBLCorners(value) {\n    return _readValueToProps(value, ['topLeft', 'topRight', 'bottomLeft', 'bottomRight']);\n  }\n  function toPadding(value) {\n    const obj = toTRBL(value);\n    obj.width = obj.left + obj.right;\n    obj.height = obj.top + obj.bottom;\n    return obj;\n  }\n  function toFont(options, fallback) {\n    options = options || {};\n    fallback = fallback || defaults.font;\n    let size = valueOrDefault(options.size, fallback.size);\n    if (typeof size === 'string') {\n      size = parseInt(size, 10);\n    }\n    let style = valueOrDefault(options.style, fallback.style);\n    if (style && !('' + style).match(FONT_STYLE)) {\n      console.warn('Invalid font style specified: \"' + style + '\"');\n      style = '';\n    }\n    const font = {\n      family: valueOrDefault(options.family, fallback.family),\n      lineHeight: toLineHeight(valueOrDefault(options.lineHeight, fallback.lineHeight), size),\n      size,\n      style,\n      weight: valueOrDefault(options.weight, fallback.weight),\n      string: ''\n    };\n    font.string = toFontString(font);\n    return font;\n  }\n  function resolve(inputs, context, index, info) {\n    let cacheable = true;\n    let i, ilen, value;\n    for (i = 0, ilen = inputs.length; i < ilen; ++i) {\n      value = inputs[i];\n      if (value === undefined) {\n        continue;\n      }\n      if (context !== undefined && typeof value === 'function') {\n        value = value(context);\n        cacheable = false;\n      }\n      if (index !== undefined && isArray(value)) {\n        value = value[index % value.length];\n        cacheable = false;\n      }\n      if (value !== undefined) {\n        if (info && !cacheable) {\n          info.cacheable = false;\n        }\n        return value;\n      }\n    }\n  }\n  function _addGrace(minmax, grace, beginAtZero) {\n    const {\n      min,\n      max\n    } = minmax;\n    const change = toDimension(grace, (max - min) / 2);\n    const keepZero = (value, add) => beginAtZero && value === 0 ? 0 : value + add;\n    return {\n      min: keepZero(min, -Math.abs(change)),\n      max: keepZero(max, change)\n    };\n  }\n  function createContext(parentContext, context) {\n    return Object.assign(Object.create(parentContext), context);\n  }\n  const STATIC_POSITIONS = ['left', 'top', 'right', 'bottom'];\n  function filterByPosition(array, position) {\n    return array.filter(v => v.pos === position);\n  }\n  function filterDynamicPositionByAxis(array, axis) {\n    return array.filter(v => STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n  }\n  function sortByWeight(array, reverse) {\n    return array.sort((a, b) => {\n      const v0 = reverse ? b : a;\n      const v1 = reverse ? a : b;\n      return v0.weight === v1.weight ? v0.index - v1.index : v0.weight - v1.weight;\n    });\n  }\n  function wrapBoxes(boxes) {\n    const layoutBoxes = [];\n    let i, ilen, box, pos, stack, stackWeight;\n    for (i = 0, ilen = (boxes || []).length; i < ilen; ++i) {\n      box = boxes[i];\n      ({\n        position: pos,\n        options: {\n          stack,\n          stackWeight = 1\n        }\n      } = box);\n      layoutBoxes.push({\n        index: i,\n        box,\n        pos,\n        horizontal: box.isHorizontal(),\n        weight: box.weight,\n        stack: stack && pos + stack,\n        stackWeight\n      });\n    }\n    return layoutBoxes;\n  }\n  function buildStacks(layouts) {\n    const stacks = {};\n    for (const wrap of layouts) {\n      const {\n        stack,\n        pos,\n        stackWeight\n      } = wrap;\n      if (!stack || !STATIC_POSITIONS.includes(pos)) {\n        continue;\n      }\n      const _stack = stacks[stack] || (stacks[stack] = {\n        count: 0,\n        placed: 0,\n        weight: 0,\n        size: 0\n      });\n      _stack.count++;\n      _stack.weight += stackWeight;\n    }\n    return stacks;\n  }\n  function setLayoutDims(layouts, params) {\n    const stacks = buildStacks(layouts);\n    const {\n      vBoxMaxWidth,\n      hBoxMaxHeight\n    } = params;\n    let i, ilen, layout;\n    for (i = 0, ilen = layouts.length; i < ilen; ++i) {\n      layout = layouts[i];\n      const {\n        fullSize\n      } = layout.box;\n      const stack = stacks[layout.stack];\n      const factor = stack && layout.stackWeight / stack.weight;\n      if (layout.horizontal) {\n        layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\n        layout.height = hBoxMaxHeight;\n      } else {\n        layout.width = vBoxMaxWidth;\n        layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\n      }\n    }\n    return stacks;\n  }\n  function buildLayoutBoxes(boxes) {\n    const layoutBoxes = wrapBoxes(boxes);\n    const fullSize = sortByWeight(layoutBoxes.filter(wrap => wrap.box.fullSize), true);\n    const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n    const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n    const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n    const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n    const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n    const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n    return {\n      fullSize,\n      leftAndTop: left.concat(top),\n      rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n      chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n      vertical: left.concat(right).concat(centerVertical),\n      horizontal: top.concat(bottom).concat(centerHorizontal)\n    };\n  }\n  function getCombinedMax(maxPadding, chartArea, a, b) {\n    return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n  }\n  function updateMaxPadding(maxPadding, boxPadding) {\n    maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n    maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n    maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n    maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n  }\n  function updateDims(chartArea, params, layout, stacks) {\n    const {\n      pos,\n      box\n    } = layout;\n    const maxPadding = chartArea.maxPadding;\n    if (!isObject(pos)) {\n      if (layout.size) {\n        chartArea[pos] -= layout.size;\n      }\n      const stack = stacks[layout.stack] || {\n        size: 0,\n        count: 1\n      };\n      stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\n      layout.size = stack.size / stack.count;\n      chartArea[pos] += layout.size;\n    }\n    if (box.getPadding) {\n      updateMaxPadding(maxPadding, box.getPadding());\n    }\n    const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n    const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n    const widthChanged = newWidth !== chartArea.w;\n    const heightChanged = newHeight !== chartArea.h;\n    chartArea.w = newWidth;\n    chartArea.h = newHeight;\n    return layout.horizontal ? {\n      same: widthChanged,\n      other: heightChanged\n    } : {\n      same: heightChanged,\n      other: widthChanged\n    };\n  }\n  function handleMaxPadding(chartArea) {\n    const maxPadding = chartArea.maxPadding;\n    function updatePos(pos) {\n      const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n      chartArea[pos] += change;\n      return change;\n    }\n    chartArea.y += updatePos('top');\n    chartArea.x += updatePos('left');\n    updatePos('right');\n    updatePos('bottom');\n  }\n  function getMargins(horizontal, chartArea) {\n    const maxPadding = chartArea.maxPadding;\n    function marginForPositions(positions) {\n      const margin = {\n        left: 0,\n        top: 0,\n        right: 0,\n        bottom: 0\n      };\n      positions.forEach(pos => {\n        margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n      });\n      return margin;\n    }\n    return horizontal ? marginForPositions(['left', 'right']) : marginForPositions(['top', 'bottom']);\n  }\n  function fitBoxes(boxes, chartArea, params, stacks) {\n    const refitBoxes = [];\n    let i, ilen, layout, box, refit, changed;\n    for (i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i) {\n      layout = boxes[i];\n      box = layout.box;\n      box.update(layout.width || chartArea.w, layout.height || chartArea.h, getMargins(layout.horizontal, chartArea));\n      const {\n        same,\n        other\n      } = updateDims(chartArea, params, layout, stacks);\n      refit |= same && refitBoxes.length;\n      changed = changed || other;\n      if (!box.fullSize) {\n        refitBoxes.push(layout);\n      }\n    }\n    return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\n  }\n  function setBoxDims(box, left, top, width, height) {\n    box.top = top;\n    box.left = left;\n    box.right = left + width;\n    box.bottom = top + height;\n    box.width = width;\n    box.height = height;\n  }\n  function placeBoxes(boxes, chartArea, params, stacks) {\n    const userPadding = params.padding;\n    let {\n      x,\n      y\n    } = chartArea;\n    for (const layout of boxes) {\n      const box = layout.box;\n      const stack = stacks[layout.stack] || {\n        count: 1,\n        placed: 0,\n        weight: 1\n      };\n      const weight = layout.stackWeight / stack.weight || 1;\n      if (layout.horizontal) {\n        const width = chartArea.w * weight;\n        const height = stack.size || box.height;\n        if (defined(stack.start)) {\n          y = stack.start;\n        }\n        if (box.fullSize) {\n          setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\n        } else {\n          setBoxDims(box, chartArea.left + stack.placed, y, width, height);\n        }\n        stack.start = y;\n        stack.placed += width;\n        y = box.bottom;\n      } else {\n        const height = chartArea.h * weight;\n        const width = stack.size || box.width;\n        if (defined(stack.start)) {\n          x = stack.start;\n        }\n        if (box.fullSize) {\n          setBoxDims(box, x, userPadding.top, width, params.outerHeight - userPadding.bottom - userPadding.top);\n        } else {\n          setBoxDims(box, x, chartArea.top + stack.placed, width, height);\n        }\n        stack.start = x;\n        stack.placed += height;\n        x = box.right;\n      }\n    }\n    chartArea.x = x;\n    chartArea.y = y;\n  }\n  defaults.set('layout', {\n    autoPadding: true,\n    padding: {\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0\n    }\n  });\n  var layouts = {\n    addBox(chart, item) {\n      if (!chart.boxes) {\n        chart.boxes = [];\n      }\n      item.fullSize = item.fullSize || false;\n      item.position = item.position || 'top';\n      item.weight = item.weight || 0;\n      item._layers = item._layers || function () {\n        return [{\n          z: 0,\n          draw(chartArea) {\n            item.draw(chartArea);\n          }\n        }];\n      };\n      chart.boxes.push(item);\n    },\n    removeBox(chart, layoutItem) {\n      const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n      if (index !== -1) {\n        chart.boxes.splice(index, 1);\n      }\n    },\n    configure(chart, item, options) {\n      item.fullSize = options.fullSize;\n      item.position = options.position;\n      item.weight = options.weight;\n    },\n    update(chart, width, height, minPadding) {\n      if (!chart) {\n        return;\n      }\n      const padding = toPadding(chart.options.layout.padding);\n      const availableWidth = Math.max(width - padding.width, 0);\n      const availableHeight = Math.max(height - padding.height, 0);\n      const boxes = buildLayoutBoxes(chart.boxes);\n      const verticalBoxes = boxes.vertical;\n      const horizontalBoxes = boxes.horizontal;\n      each(chart.boxes, box => {\n        if (typeof box.beforeLayout === 'function') {\n          box.beforeLayout();\n        }\n      });\n      const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap) => wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n      const params = Object.freeze({\n        outerWidth: width,\n        outerHeight: height,\n        padding,\n        availableWidth,\n        availableHeight,\n        vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n        hBoxMaxHeight: availableHeight / 2\n      });\n      const maxPadding = Object.assign({}, padding);\n      updateMaxPadding(maxPadding, toPadding(minPadding));\n      const chartArea = Object.assign({\n        maxPadding,\n        w: availableWidth,\n        h: availableHeight,\n        x: padding.left,\n        y: padding.top\n      }, padding);\n      const stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n      fitBoxes(boxes.fullSize, chartArea, params, stacks);\n      fitBoxes(verticalBoxes, chartArea, params, stacks);\n      if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\n        fitBoxes(verticalBoxes, chartArea, params, stacks);\n      }\n      handleMaxPadding(chartArea);\n      placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\n      chartArea.x += chartArea.w;\n      chartArea.y += chartArea.h;\n      placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\n      chart.chartArea = {\n        left: chartArea.left,\n        top: chartArea.top,\n        right: chartArea.left + chartArea.w,\n        bottom: chartArea.top + chartArea.h,\n        height: chartArea.h,\n        width: chartArea.w\n      };\n      each(boxes.chartArea, layout => {\n        const box = layout.box;\n        Object.assign(box, chart.chartArea);\n        box.update(chartArea.w, chartArea.h, {\n          left: 0,\n          top: 0,\n          right: 0,\n          bottom: 0\n        });\n      });\n    }\n  };\n  function _createResolver(scopes, prefixes = [''], rootScopes = scopes, fallback, getTarget = () => scopes[0]) {\n    if (!defined(fallback)) {\n      fallback = _resolve('_fallback', scopes);\n    }\n    const cache = {\n      [Symbol.toStringTag]: 'Object',\n      _cacheable: true,\n      _scopes: scopes,\n      _rootScopes: rootScopes,\n      _fallback: fallback,\n      _getTarget: getTarget,\n      override: scope => _createResolver([scope, ...scopes], prefixes, rootScopes, fallback)\n    };\n    return new Proxy(cache, {\n      deleteProperty(target, prop) {\n        delete target[prop];\n        delete target._keys;\n        delete scopes[0][prop];\n        return true;\n      },\n      get(target, prop) {\n        return _cached(target, prop, () => _resolveWithPrefixes(prop, prefixes, scopes, target));\n      },\n      getOwnPropertyDescriptor(target, prop) {\n        return Reflect.getOwnPropertyDescriptor(target._scopes[0], prop);\n      },\n      getPrototypeOf() {\n        return Reflect.getPrototypeOf(scopes[0]);\n      },\n      has(target, prop) {\n        return getKeysFromAllScopes(target).includes(prop);\n      },\n      ownKeys(target) {\n        return getKeysFromAllScopes(target);\n      },\n      set(target, prop, value) {\n        const storage = target._storage || (target._storage = getTarget());\n        target[prop] = storage[prop] = value;\n        delete target._keys;\n        return true;\n      }\n    });\n  }\n  function _attachContext(proxy, context, subProxy, descriptorDefaults) {\n    const cache = {\n      _cacheable: false,\n      _proxy: proxy,\n      _context: context,\n      _subProxy: subProxy,\n      _stack: new Set(),\n      _descriptors: _descriptors(proxy, descriptorDefaults),\n      setContext: ctx => _attachContext(proxy, ctx, subProxy, descriptorDefaults),\n      override: scope => _attachContext(proxy.override(scope), context, subProxy, descriptorDefaults)\n    };\n    return new Proxy(cache, {\n      deleteProperty(target, prop) {\n        delete target[prop];\n        delete proxy[prop];\n        return true;\n      },\n      get(target, prop, receiver) {\n        return _cached(target, prop, () => _resolveWithContext(target, prop, receiver));\n      },\n      getOwnPropertyDescriptor(target, prop) {\n        return target._descriptors.allKeys ? Reflect.has(proxy, prop) ? {\n          enumerable: true,\n          configurable: true\n        } : undefined : Reflect.getOwnPropertyDescriptor(proxy, prop);\n      },\n      getPrototypeOf() {\n        return Reflect.getPrototypeOf(proxy);\n      },\n      has(target, prop) {\n        return Reflect.has(proxy, prop);\n      },\n      ownKeys() {\n        return Reflect.ownKeys(proxy);\n      },\n      set(target, prop, value) {\n        proxy[prop] = value;\n        delete target[prop];\n        return true;\n      }\n    });\n  }\n  function _descriptors(proxy, defaults = {\n    scriptable: true,\n    indexable: true\n  }) {\n    const {\n      _scriptable = defaults.scriptable,\n      _indexable = defaults.indexable,\n      _allKeys = defaults.allKeys\n    } = proxy;\n    return {\n      allKeys: _allKeys,\n      scriptable: _scriptable,\n      indexable: _indexable,\n      isScriptable: isFunction(_scriptable) ? _scriptable : () => _scriptable,\n      isIndexable: isFunction(_indexable) ? _indexable : () => _indexable\n    };\n  }\n  const readKey = (prefix, name) => prefix ? prefix + _capitalize(name) : name;\n  const needsSubResolver = (prop, value) => isObject(value) && prop !== 'adapters' && (Object.getPrototypeOf(value) === null || value.constructor === Object);\n  function _cached(target, prop, resolve) {\n    if (Object.prototype.hasOwnProperty.call(target, prop)) {\n      return target[prop];\n    }\n    const value = resolve();\n    target[prop] = value;\n    return value;\n  }\n  function _resolveWithContext(target, prop, receiver) {\n    const {\n      _proxy,\n      _context,\n      _subProxy,\n      _descriptors: descriptors\n    } = target;\n    let value = _proxy[prop];\n    if (isFunction(value) && descriptors.isScriptable(prop)) {\n      value = _resolveScriptable(prop, value, target, receiver);\n    }\n    if (isArray(value) && value.length) {\n      value = _resolveArray(prop, value, target, descriptors.isIndexable);\n    }\n    if (needsSubResolver(prop, value)) {\n      value = _attachContext(value, _context, _subProxy && _subProxy[prop], descriptors);\n    }\n    return value;\n  }\n  function _resolveScriptable(prop, value, target, receiver) {\n    const {\n      _proxy,\n      _context,\n      _subProxy,\n      _stack\n    } = target;\n    if (_stack.has(prop)) {\n      throw new Error('Recursion detected: ' + Array.from(_stack).join('->') + '->' + prop);\n    }\n    _stack.add(prop);\n    value = value(_context, _subProxy || receiver);\n    _stack.delete(prop);\n    if (needsSubResolver(prop, value)) {\n      value = createSubResolver(_proxy._scopes, _proxy, prop, value);\n    }\n    return value;\n  }\n  function _resolveArray(prop, value, target, isIndexable) {\n    const {\n      _proxy,\n      _context,\n      _subProxy,\n      _descriptors: descriptors\n    } = target;\n    if (defined(_context.index) && isIndexable(prop)) {\n      value = value[_context.index % value.length];\n    } else if (isObject(value[0])) {\n      const arr = value;\n      const scopes = _proxy._scopes.filter(s => s !== arr);\n      value = [];\n      for (const item of arr) {\n        const resolver = createSubResolver(scopes, _proxy, prop, item);\n        value.push(_attachContext(resolver, _context, _subProxy && _subProxy[prop], descriptors));\n      }\n    }\n    return value;\n  }\n  function resolveFallback(fallback, prop, value) {\n    return isFunction(fallback) ? fallback(prop, value) : fallback;\n  }\n  const getScope = (key, parent) => key === true ? parent : typeof key === 'string' ? resolveObjectKey(parent, key) : undefined;\n  function addScopes(set, parentScopes, key, parentFallback, value) {\n    for (const parent of parentScopes) {\n      const scope = getScope(key, parent);\n      if (scope) {\n        set.add(scope);\n        const fallback = resolveFallback(scope._fallback, key, value);\n        if (defined(fallback) && fallback !== key && fallback !== parentFallback) {\n          return fallback;\n        }\n      } else if (scope === false && defined(parentFallback) && key !== parentFallback) {\n        return null;\n      }\n    }\n    return false;\n  }\n  function createSubResolver(parentScopes, resolver, prop, value) {\n    const rootScopes = resolver._rootScopes;\n    const fallback = resolveFallback(resolver._fallback, prop, value);\n    const allScopes = [...parentScopes, ...rootScopes];\n    const set = new Set();\n    set.add(value);\n    let key = addScopesFromKey(set, allScopes, prop, fallback || prop, value);\n    if (key === null) {\n      return false;\n    }\n    if (defined(fallback) && fallback !== prop) {\n      key = addScopesFromKey(set, allScopes, fallback, key, value);\n      if (key === null) {\n        return false;\n      }\n    }\n    return _createResolver(Array.from(set), [''], rootScopes, fallback, () => subGetTarget(resolver, prop, value));\n  }\n  function addScopesFromKey(set, allScopes, key, fallback, item) {\n    while (key) {\n      key = addScopes(set, allScopes, key, fallback, item);\n    }\n    return key;\n  }\n  function subGetTarget(resolver, prop, value) {\n    const parent = resolver._getTarget();\n    if (!(prop in parent)) {\n      parent[prop] = {};\n    }\n    const target = parent[prop];\n    if (isArray(target) && isObject(value)) {\n      return value;\n    }\n    return target;\n  }\n  function _resolveWithPrefixes(prop, prefixes, scopes, proxy) {\n    let value;\n    for (const prefix of prefixes) {\n      value = _resolve(readKey(prefix, prop), scopes);\n      if (defined(value)) {\n        return needsSubResolver(prop, value) ? createSubResolver(scopes, proxy, prop, value) : value;\n      }\n    }\n  }\n  function _resolve(key, scopes) {\n    for (const scope of scopes) {\n      if (!scope) {\n        continue;\n      }\n      const value = scope[key];\n      if (defined(value)) {\n        return value;\n      }\n    }\n  }\n  function getKeysFromAllScopes(target) {\n    let keys = target._keys;\n    if (!keys) {\n      keys = target._keys = resolveKeysFromAllScopes(target._scopes);\n    }\n    return keys;\n  }\n  function resolveKeysFromAllScopes(scopes) {\n    const set = new Set();\n    for (const scope of scopes) {\n      for (const key of Object.keys(scope).filter(k => !k.startsWith('_'))) {\n        set.add(key);\n      }\n    }\n    return Array.from(set);\n  }\n  const EPSILON = Number.EPSILON || 1e-14;\n  const getPoint = (points, i) => i < points.length && !points[i].skip && points[i];\n  const getValueAxis = indexAxis => indexAxis === 'x' ? 'y' : 'x';\n  function splineCurve(firstPoint, middlePoint, afterPoint, t) {\n    const previous = firstPoint.skip ? middlePoint : firstPoint;\n    const current = middlePoint;\n    const next = afterPoint.skip ? middlePoint : afterPoint;\n    const d01 = distanceBetweenPoints(current, previous);\n    const d12 = distanceBetweenPoints(next, current);\n    let s01 = d01 / (d01 + d12);\n    let s12 = d12 / (d01 + d12);\n    s01 = isNaN(s01) ? 0 : s01;\n    s12 = isNaN(s12) ? 0 : s12;\n    const fa = t * s01;\n    const fb = t * s12;\n    return {\n      previous: {\n        x: current.x - fa * (next.x - previous.x),\n        y: current.y - fa * (next.y - previous.y)\n      },\n      next: {\n        x: current.x + fb * (next.x - previous.x),\n        y: current.y + fb * (next.y - previous.y)\n      }\n    };\n  }\n  function monotoneAdjust(points, deltaK, mK) {\n    const pointsLen = points.length;\n    let alphaK, betaK, tauK, squaredMagnitude, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for (let i = 0; i < pointsLen - 1; ++i) {\n      pointCurrent = pointAfter;\n      pointAfter = getPoint(points, i + 1);\n      if (!pointCurrent || !pointAfter) {\n        continue;\n      }\n      if (almostEquals(deltaK[i], 0, EPSILON)) {\n        mK[i] = mK[i + 1] = 0;\n        continue;\n      }\n      alphaK = mK[i] / deltaK[i];\n      betaK = mK[i + 1] / deltaK[i];\n      squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n      if (squaredMagnitude <= 9) {\n        continue;\n      }\n      tauK = 3 / Math.sqrt(squaredMagnitude);\n      mK[i] = alphaK * tauK * deltaK[i];\n      mK[i + 1] = betaK * tauK * deltaK[i];\n    }\n  }\n  function monotoneCompute(points, mK, indexAxis = 'x') {\n    const valueAxis = getValueAxis(indexAxis);\n    const pointsLen = points.length;\n    let delta, pointBefore, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for (let i = 0; i < pointsLen; ++i) {\n      pointBefore = pointCurrent;\n      pointCurrent = pointAfter;\n      pointAfter = getPoint(points, i + 1);\n      if (!pointCurrent) {\n        continue;\n      }\n      const iPixel = pointCurrent[indexAxis];\n      const vPixel = pointCurrent[valueAxis];\n      if (pointBefore) {\n        delta = (iPixel - pointBefore[indexAxis]) / 3;\n        pointCurrent[`cp1${indexAxis}`] = iPixel - delta;\n        pointCurrent[`cp1${valueAxis}`] = vPixel - delta * mK[i];\n      }\n      if (pointAfter) {\n        delta = (pointAfter[indexAxis] - iPixel) / 3;\n        pointCurrent[`cp2${indexAxis}`] = iPixel + delta;\n        pointCurrent[`cp2${valueAxis}`] = vPixel + delta * mK[i];\n      }\n    }\n  }\n  function splineCurveMonotone(points, indexAxis = 'x') {\n    const valueAxis = getValueAxis(indexAxis);\n    const pointsLen = points.length;\n    const deltaK = Array(pointsLen).fill(0);\n    const mK = Array(pointsLen);\n    let i, pointBefore, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for (i = 0; i < pointsLen; ++i) {\n      pointBefore = pointCurrent;\n      pointCurrent = pointAfter;\n      pointAfter = getPoint(points, i + 1);\n      if (!pointCurrent) {\n        continue;\n      }\n      if (pointAfter) {\n        const slopeDelta = pointAfter[indexAxis] - pointCurrent[indexAxis];\n        deltaK[i] = slopeDelta !== 0 ? (pointAfter[valueAxis] - pointCurrent[valueAxis]) / slopeDelta : 0;\n      }\n      mK[i] = !pointBefore ? deltaK[i] : !pointAfter ? deltaK[i - 1] : sign(deltaK[i - 1]) !== sign(deltaK[i]) ? 0 : (deltaK[i - 1] + deltaK[i]) / 2;\n    }\n    monotoneAdjust(points, deltaK, mK);\n    monotoneCompute(points, mK, indexAxis);\n  }\n  function capControlPoint(pt, min, max) {\n    return Math.max(Math.min(pt, max), min);\n  }\n  function capBezierPoints(points, area) {\n    let i, ilen, point, inArea, inAreaPrev;\n    let inAreaNext = _isPointInArea(points[0], area);\n    for (i = 0, ilen = points.length; i < ilen; ++i) {\n      inAreaPrev = inArea;\n      inArea = inAreaNext;\n      inAreaNext = i < ilen - 1 && _isPointInArea(points[i + 1], area);\n      if (!inArea) {\n        continue;\n      }\n      point = points[i];\n      if (inAreaPrev) {\n        point.cp1x = capControlPoint(point.cp1x, area.left, area.right);\n        point.cp1y = capControlPoint(point.cp1y, area.top, area.bottom);\n      }\n      if (inAreaNext) {\n        point.cp2x = capControlPoint(point.cp2x, area.left, area.right);\n        point.cp2y = capControlPoint(point.cp2y, area.top, area.bottom);\n      }\n    }\n  }\n  function _updateBezierControlPoints(points, options, area, loop, indexAxis) {\n    let i, ilen, point, controlPoints;\n    if (options.spanGaps) {\n      points = points.filter(pt => !pt.skip);\n    }\n    if (options.cubicInterpolationMode === 'monotone') {\n      splineCurveMonotone(points, indexAxis);\n    } else {\n      let prev = loop ? points[points.length - 1] : points[0];\n      for (i = 0, ilen = points.length; i < ilen; ++i) {\n        point = points[i];\n        controlPoints = splineCurve(prev, point, points[Math.min(i + 1, ilen - (loop ? 0 : 1)) % ilen], options.tension);\n        point.cp1x = controlPoints.previous.x;\n        point.cp1y = controlPoints.previous.y;\n        point.cp2x = controlPoints.next.x;\n        point.cp2y = controlPoints.next.y;\n        prev = point;\n      }\n    }\n    if (options.capBezierPoints) {\n      capBezierPoints(points, area);\n    }\n  }\n  const atEdge = t => t === 0 || t === 1;\n  const elasticIn = (t, s, p) => -(Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * TAU / p));\n  const elasticOut = (t, s, p) => Math.pow(2, -10 * t) * Math.sin((t - s) * TAU / p) + 1;\n  const effects = {\n    linear: t => t,\n    easeInQuad: t => t * t,\n    easeOutQuad: t => -t * (t - 2),\n    easeInOutQuad: t => (t /= 0.5) < 1 ? 0.5 * t * t : -0.5 * (--t * (t - 2) - 1),\n    easeInCubic: t => t * t * t,\n    easeOutCubic: t => (t -= 1) * t * t + 1,\n    easeInOutCubic: t => (t /= 0.5) < 1 ? 0.5 * t * t * t : 0.5 * ((t -= 2) * t * t + 2),\n    easeInQuart: t => t * t * t * t,\n    easeOutQuart: t => -((t -= 1) * t * t * t - 1),\n    easeInOutQuart: t => (t /= 0.5) < 1 ? 0.5 * t * t * t * t : -0.5 * ((t -= 2) * t * t * t - 2),\n    easeInQuint: t => t * t * t * t * t,\n    easeOutQuint: t => (t -= 1) * t * t * t * t + 1,\n    easeInOutQuint: t => (t /= 0.5) < 1 ? 0.5 * t * t * t * t * t : 0.5 * ((t -= 2) * t * t * t * t + 2),\n    easeInSine: t => -Math.cos(t * HALF_PI) + 1,\n    easeOutSine: t => Math.sin(t * HALF_PI),\n    easeInOutSine: t => -0.5 * (Math.cos(PI * t) - 1),\n    easeInExpo: t => t === 0 ? 0 : Math.pow(2, 10 * (t - 1)),\n    easeOutExpo: t => t === 1 ? 1 : -Math.pow(2, -10 * t) + 1,\n    easeInOutExpo: t => atEdge(t) ? t : t < 0.5 ? 0.5 * Math.pow(2, 10 * (t * 2 - 1)) : 0.5 * (-Math.pow(2, -10 * (t * 2 - 1)) + 2),\n    easeInCirc: t => t >= 1 ? t : -(Math.sqrt(1 - t * t) - 1),\n    easeOutCirc: t => Math.sqrt(1 - (t -= 1) * t),\n    easeInOutCirc: t => (t /= 0.5) < 1 ? -0.5 * (Math.sqrt(1 - t * t) - 1) : 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1),\n    easeInElastic: t => atEdge(t) ? t : elasticIn(t, 0.075, 0.3),\n    easeOutElastic: t => atEdge(t) ? t : elasticOut(t, 0.075, 0.3),\n    easeInOutElastic(t) {\n      const s = 0.1125;\n      const p = 0.45;\n      return atEdge(t) ? t : t < 0.5 ? 0.5 * elasticIn(t * 2, s, p) : 0.5 + 0.5 * elasticOut(t * 2 - 1, s, p);\n    },\n    easeInBack(t) {\n      const s = 1.70158;\n      return t * t * ((s + 1) * t - s);\n    },\n    easeOutBack(t) {\n      const s = 1.70158;\n      return (t -= 1) * t * ((s + 1) * t + s) + 1;\n    },\n    easeInOutBack(t) {\n      let s = 1.70158;\n      if ((t /= 0.5) < 1) {\n        return 0.5 * (t * t * (((s *= 1.525) + 1) * t - s));\n      }\n      return 0.5 * ((t -= 2) * t * (((s *= 1.525) + 1) * t + s) + 2);\n    },\n    easeInBounce: t => 1 - effects.easeOutBounce(1 - t),\n    easeOutBounce(t) {\n      const m = 7.5625;\n      const d = 2.75;\n      if (t < 1 / d) {\n        return m * t * t;\n      }\n      if (t < 2 / d) {\n        return m * (t -= 1.5 / d) * t + 0.75;\n      }\n      if (t < 2.5 / d) {\n        return m * (t -= 2.25 / d) * t + 0.9375;\n      }\n      return m * (t -= 2.625 / d) * t + 0.984375;\n    },\n    easeInOutBounce: t => t < 0.5 ? effects.easeInBounce(t * 2) * 0.5 : effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5\n  };\n  function _pointInLine(p1, p2, t, mode) {\n    return {\n      x: p1.x + t * (p2.x - p1.x),\n      y: p1.y + t * (p2.y - p1.y)\n    };\n  }\n  function _steppedInterpolation(p1, p2, t, mode) {\n    return {\n      x: p1.x + t * (p2.x - p1.x),\n      y: mode === 'middle' ? t < 0.5 ? p1.y : p2.y : mode === 'after' ? t < 1 ? p1.y : p2.y : t > 0 ? p2.y : p1.y\n    };\n  }\n  function _bezierInterpolation(p1, p2, t, mode) {\n    const cp1 = {\n      x: p1.cp2x,\n      y: p1.cp2y\n    };\n    const cp2 = {\n      x: p2.cp1x,\n      y: p2.cp1y\n    };\n    const a = _pointInLine(p1, cp1, t);\n    const b = _pointInLine(cp1, cp2, t);\n    const c = _pointInLine(cp2, p2, t);\n    const d = _pointInLine(a, b, t);\n    const e = _pointInLine(b, c, t);\n    return _pointInLine(d, e, t);\n  }\n  const intlCache = new Map();\n  function getNumberFormat(locale, options) {\n    options = options || {};\n    const cacheKey = locale + JSON.stringify(options);\n    let formatter = intlCache.get(cacheKey);\n    if (!formatter) {\n      formatter = new Intl.NumberFormat(locale, options);\n      intlCache.set(cacheKey, formatter);\n    }\n    return formatter;\n  }\n  function formatNumber(num, locale, options) {\n    return getNumberFormat(locale, options).format(num);\n  }\n  const getRightToLeftAdapter = function (rectX, width) {\n    return {\n      x(x) {\n        return rectX + rectX + width - x;\n      },\n      setWidth(w) {\n        width = w;\n      },\n      textAlign(align) {\n        if (align === 'center') {\n          return align;\n        }\n        return align === 'right' ? 'left' : 'right';\n      },\n      xPlus(x, value) {\n        return x - value;\n      },\n      leftForLtr(x, itemWidth) {\n        return x - itemWidth;\n      }\n    };\n  };\n  const getLeftToRightAdapter = function () {\n    return {\n      x(x) {\n        return x;\n      },\n      setWidth(w) {},\n      textAlign(align) {\n        return align;\n      },\n      xPlus(x, value) {\n        return x + value;\n      },\n      leftForLtr(x, _itemWidth) {\n        return x;\n      }\n    };\n  };\n  function getRtlAdapter(rtl, rectX, width) {\n    return rtl ? getRightToLeftAdapter(rectX, width) : getLeftToRightAdapter();\n  }\n  function overrideTextDirection(ctx, direction) {\n    let style, original;\n    if (direction === 'ltr' || direction === 'rtl') {\n      style = ctx.canvas.style;\n      original = [style.getPropertyValue('direction'), style.getPropertyPriority('direction')];\n      style.setProperty('direction', direction, 'important');\n      ctx.prevTextDirection = original;\n    }\n  }\n  function restoreTextDirection(ctx, original) {\n    if (original !== undefined) {\n      delete ctx.prevTextDirection;\n      ctx.canvas.style.setProperty('direction', original[0], original[1]);\n    }\n  }\n  function propertyFn(property) {\n    if (property === 'angle') {\n      return {\n        between: _angleBetween,\n        compare: _angleDiff,\n        normalize: _normalizeAngle\n      };\n    }\n    return {\n      between: _isBetween,\n      compare: (a, b) => a - b,\n      normalize: x => x\n    };\n  }\n  function normalizeSegment({\n    start,\n    end,\n    count,\n    loop,\n    style\n  }) {\n    return {\n      start: start % count,\n      end: end % count,\n      loop: loop && (end - start + 1) % count === 0,\n      style\n    };\n  }\n  function getSegment(segment, points, bounds) {\n    const {\n      property,\n      start: startBound,\n      end: endBound\n    } = bounds;\n    const {\n      between,\n      normalize\n    } = propertyFn(property);\n    const count = points.length;\n    let {\n      start,\n      end,\n      loop\n    } = segment;\n    let i, ilen;\n    if (loop) {\n      start += count;\n      end += count;\n      for (i = 0, ilen = count; i < ilen; ++i) {\n        if (!between(normalize(points[start % count][property]), startBound, endBound)) {\n          break;\n        }\n        start--;\n        end--;\n      }\n      start %= count;\n      end %= count;\n    }\n    if (end < start) {\n      end += count;\n    }\n    return {\n      start,\n      end,\n      loop,\n      style: segment.style\n    };\n  }\n  function _boundSegment(segment, points, bounds) {\n    if (!bounds) {\n      return [segment];\n    }\n    const {\n      property,\n      start: startBound,\n      end: endBound\n    } = bounds;\n    const count = points.length;\n    const {\n      compare,\n      between,\n      normalize\n    } = propertyFn(property);\n    const {\n      start,\n      end,\n      loop,\n      style\n    } = getSegment(segment, points, bounds);\n    const result = [];\n    let inside = false;\n    let subStart = null;\n    let value, point, prevValue;\n    const startIsBefore = () => between(startBound, prevValue, value) && compare(startBound, prevValue) !== 0;\n    const endIsBefore = () => compare(endBound, value) === 0 || between(endBound, prevValue, value);\n    const shouldStart = () => inside || startIsBefore();\n    const shouldStop = () => !inside || endIsBefore();\n    for (let i = start, prev = start; i <= end; ++i) {\n      point = points[i % count];\n      if (point.skip) {\n        continue;\n      }\n      value = normalize(point[property]);\n      if (value === prevValue) {\n        continue;\n      }\n      inside = between(value, startBound, endBound);\n      if (subStart === null && shouldStart()) {\n        subStart = compare(value, startBound) === 0 ? i : prev;\n      }\n      if (subStart !== null && shouldStop()) {\n        result.push(normalizeSegment({\n          start: subStart,\n          end: i,\n          loop,\n          count,\n          style\n        }));\n        subStart = null;\n      }\n      prev = i;\n      prevValue = value;\n    }\n    if (subStart !== null) {\n      result.push(normalizeSegment({\n        start: subStart,\n        end,\n        loop,\n        count,\n        style\n      }));\n    }\n    return result;\n  }\n  function _boundSegments(line, bounds) {\n    const result = [];\n    const segments = line.segments;\n    for (let i = 0; i < segments.length; i++) {\n      const sub = _boundSegment(segments[i], line.points, bounds);\n      if (sub.length) {\n        result.push(...sub);\n      }\n    }\n    return result;\n  }\n  function findStartAndEnd(points, count, loop, spanGaps) {\n    let start = 0;\n    let end = count - 1;\n    if (loop && !spanGaps) {\n      while (start < count && !points[start].skip) {\n        start++;\n      }\n    }\n    while (start < count && points[start].skip) {\n      start++;\n    }\n    start %= count;\n    if (loop) {\n      end += start;\n    }\n    while (end > start && points[end % count].skip) {\n      end--;\n    }\n    end %= count;\n    return {\n      start,\n      end\n    };\n  }\n  function solidSegments(points, start, max, loop) {\n    const count = points.length;\n    const result = [];\n    let last = start;\n    let prev = points[start];\n    let end;\n    for (end = start + 1; end <= max; ++end) {\n      const cur = points[end % count];\n      if (cur.skip || cur.stop) {\n        if (!prev.skip) {\n          loop = false;\n          result.push({\n            start: start % count,\n            end: (end - 1) % count,\n            loop\n          });\n          start = last = cur.stop ? end : null;\n        }\n      } else {\n        last = end;\n        if (prev.skip) {\n          start = end;\n        }\n      }\n      prev = cur;\n    }\n    if (last !== null) {\n      result.push({\n        start: start % count,\n        end: last % count,\n        loop\n      });\n    }\n    return result;\n  }\n  function _computeSegments(line, segmentOptions) {\n    const points = line.points;\n    const spanGaps = line.options.spanGaps;\n    const count = points.length;\n    if (!count) {\n      return [];\n    }\n    const loop = !!line._loop;\n    const {\n      start,\n      end\n    } = findStartAndEnd(points, count, loop, spanGaps);\n    if (spanGaps === true) {\n      return splitByStyles(line, [{\n        start,\n        end,\n        loop\n      }], points, segmentOptions);\n    }\n    const max = end < start ? end + count : end;\n    const completeLoop = !!line._fullLoop && start === 0 && end === count - 1;\n    return splitByStyles(line, solidSegments(points, start, max, completeLoop), points, segmentOptions);\n  }\n  function splitByStyles(line, segments, points, segmentOptions) {\n    if (!segmentOptions || !segmentOptions.setContext || !points) {\n      return segments;\n    }\n    return doSplitByStyles(line, segments, points, segmentOptions);\n  }\n  function doSplitByStyles(line, segments, points, segmentOptions) {\n    const chartContext = line._chart.getContext();\n    const baseStyle = readStyle(line.options);\n    const {\n      _datasetIndex: datasetIndex,\n      options: {\n        spanGaps\n      }\n    } = line;\n    const count = points.length;\n    const result = [];\n    let prevStyle = baseStyle;\n    let start = segments[0].start;\n    let i = start;\n    function addStyle(s, e, l, st) {\n      const dir = spanGaps ? -1 : 1;\n      if (s === e) {\n        return;\n      }\n      s += count;\n      while (points[s % count].skip) {\n        s -= dir;\n      }\n      while (points[e % count].skip) {\n        e += dir;\n      }\n      if (s % count !== e % count) {\n        result.push({\n          start: s % count,\n          end: e % count,\n          loop: l,\n          style: st\n        });\n        prevStyle = st;\n        start = e % count;\n      }\n    }\n    for (const segment of segments) {\n      start = spanGaps ? start : segment.start;\n      let prev = points[start % count];\n      let style;\n      for (i = start + 1; i <= segment.end; i++) {\n        const pt = points[i % count];\n        style = readStyle(segmentOptions.setContext(createContext(chartContext, {\n          type: 'segment',\n          p0: prev,\n          p1: pt,\n          p0DataIndex: (i - 1) % count,\n          p1DataIndex: i % count,\n          datasetIndex\n        })));\n        if (styleChanged(style, prevStyle)) {\n          addStyle(start, i - 1, segment.loop, prevStyle);\n        }\n        prev = pt;\n        prevStyle = style;\n      }\n      if (start < i - 1) {\n        addStyle(start, i - 1, segment.loop, prevStyle);\n      }\n    }\n    return result;\n  }\n  function readStyle(options) {\n    return {\n      backgroundColor: options.backgroundColor,\n      borderCapStyle: options.borderCapStyle,\n      borderDash: options.borderDash,\n      borderDashOffset: options.borderDashOffset,\n      borderJoinStyle: options.borderJoinStyle,\n      borderWidth: options.borderWidth,\n      borderColor: options.borderColor\n    };\n  }\n  function styleChanged(style, prevStyle) {\n    return prevStyle && JSON.stringify(style) !== JSON.stringify(prevStyle);\n  }\n  var helpers = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    easingEffects: effects,\n    color: color,\n    getHoverColor: getHoverColor,\n    noop: noop,\n    uid: uid,\n    isNullOrUndef: isNullOrUndef,\n    isArray: isArray,\n    isObject: isObject,\n    isFinite: isNumberFinite,\n    finiteOrDefault: finiteOrDefault,\n    valueOrDefault: valueOrDefault,\n    toPercentage: toPercentage,\n    toDimension: toDimension,\n    callback: callback,\n    each: each,\n    _elementsEqual: _elementsEqual,\n    clone: clone,\n    _merger: _merger,\n    merge: merge,\n    mergeIf: mergeIf,\n    _mergerIf: _mergerIf,\n    _deprecated: _deprecated,\n    resolveObjectKey: resolveObjectKey,\n    _capitalize: _capitalize,\n    defined: defined,\n    isFunction: isFunction,\n    setsEqual: setsEqual,\n    _isClickEvent: _isClickEvent,\n    toFontString: toFontString,\n    _measureText: _measureText,\n    _longestText: _longestText,\n    _alignPixel: _alignPixel,\n    clearCanvas: clearCanvas,\n    drawPoint: drawPoint,\n    _isPointInArea: _isPointInArea,\n    clipArea: clipArea,\n    unclipArea: unclipArea,\n    _steppedLineTo: _steppedLineTo,\n    _bezierCurveTo: _bezierCurveTo,\n    renderText: renderText,\n    addRoundedRectPath: addRoundedRectPath,\n    _lookup: _lookup,\n    _lookupByKey: _lookupByKey,\n    _rlookupByKey: _rlookupByKey,\n    _filterBetween: _filterBetween,\n    listenArrayEvents: listenArrayEvents,\n    unlistenArrayEvents: unlistenArrayEvents,\n    _arrayUnique: _arrayUnique,\n    _createResolver: _createResolver,\n    _attachContext: _attachContext,\n    _descriptors: _descriptors,\n    splineCurve: splineCurve,\n    splineCurveMonotone: splineCurveMonotone,\n    _updateBezierControlPoints: _updateBezierControlPoints,\n    _isDomSupported: _isDomSupported,\n    _getParentNode: _getParentNode,\n    getStyle: getStyle,\n    getRelativePosition: getRelativePosition$1,\n    getMaximumSize: getMaximumSize,\n    retinaScale: retinaScale,\n    supportsEventListenerOptions: supportsEventListenerOptions,\n    readUsedSize: readUsedSize,\n    fontString: fontString,\n    requestAnimFrame: requestAnimFrame,\n    throttled: throttled,\n    debounce: debounce,\n    _toLeftRightCenter: _toLeftRightCenter,\n    _alignStartEnd: _alignStartEnd,\n    _textX: _textX,\n    _pointInLine: _pointInLine,\n    _steppedInterpolation: _steppedInterpolation,\n    _bezierInterpolation: _bezierInterpolation,\n    formatNumber: formatNumber,\n    toLineHeight: toLineHeight,\n    _readValueToProps: _readValueToProps,\n    toTRBL: toTRBL,\n    toTRBLCorners: toTRBLCorners,\n    toPadding: toPadding,\n    toFont: toFont,\n    resolve: resolve,\n    _addGrace: _addGrace,\n    createContext: createContext,\n    PI: PI,\n    TAU: TAU,\n    PITAU: PITAU,\n    INFINITY: INFINITY,\n    RAD_PER_DEG: RAD_PER_DEG,\n    HALF_PI: HALF_PI,\n    QUARTER_PI: QUARTER_PI,\n    TWO_THIRDS_PI: TWO_THIRDS_PI,\n    log10: log10,\n    sign: sign,\n    niceNum: niceNum,\n    _factorize: _factorize,\n    isNumber: isNumber,\n    almostEquals: almostEquals,\n    almostWhole: almostWhole,\n    _setMinAndMaxByKey: _setMinAndMaxByKey,\n    toRadians: toRadians,\n    toDegrees: toDegrees,\n    _decimalPlaces: _decimalPlaces,\n    getAngleFromPoint: getAngleFromPoint,\n    distanceBetweenPoints: distanceBetweenPoints,\n    _angleDiff: _angleDiff,\n    _normalizeAngle: _normalizeAngle,\n    _angleBetween: _angleBetween,\n    _limitValue: _limitValue,\n    _int16Range: _int16Range,\n    _isBetween: _isBetween,\n    getRtlAdapter: getRtlAdapter,\n    overrideTextDirection: overrideTextDirection,\n    restoreTextDirection: restoreTextDirection,\n    _boundSegment: _boundSegment,\n    _boundSegments: _boundSegments,\n    _computeSegments: _computeSegments\n  });\n  class BasePlatform {\n    acquireContext(canvas, aspectRatio) {}\n    releaseContext(context) {\n      return false;\n    }\n    addEventListener(chart, type, listener) {}\n    removeEventListener(chart, type, listener) {}\n    getDevicePixelRatio() {\n      return 1;\n    }\n    getMaximumSize(element, width, height, aspectRatio) {\n      width = Math.max(0, width || element.width);\n      height = height || element.height;\n      return {\n        width,\n        height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n      };\n    }\n    isAttached(canvas) {\n      return true;\n    }\n    updateConfig(config) {}\n  }\n  class BasicPlatform extends BasePlatform {\n    acquireContext(item) {\n      return item && item.getContext && item.getContext('2d') || null;\n    }\n    updateConfig(config) {\n      config.options.animation = false;\n    }\n  }\n  const EXPANDO_KEY = '$chartjs';\n  const EVENT_TYPES = {\n    touchstart: 'mousedown',\n    touchmove: 'mousemove',\n    touchend: 'mouseup',\n    pointerenter: 'mouseenter',\n    pointerdown: 'mousedown',\n    pointermove: 'mousemove',\n    pointerup: 'mouseup',\n    pointerleave: 'mouseout',\n    pointerout: 'mouseout'\n  };\n  const isNullOrEmpty = value => value === null || value === '';\n  function initCanvas(canvas, aspectRatio) {\n    const style = canvas.style;\n    const renderHeight = canvas.getAttribute('height');\n    const renderWidth = canvas.getAttribute('width');\n    canvas[EXPANDO_KEY] = {\n      initial: {\n        height: renderHeight,\n        width: renderWidth,\n        style: {\n          display: style.display,\n          height: style.height,\n          width: style.width\n        }\n      }\n    };\n    style.display = style.display || 'block';\n    style.boxSizing = style.boxSizing || 'border-box';\n    if (isNullOrEmpty(renderWidth)) {\n      const displayWidth = readUsedSize(canvas, 'width');\n      if (displayWidth !== undefined) {\n        canvas.width = displayWidth;\n      }\n    }\n    if (isNullOrEmpty(renderHeight)) {\n      if (canvas.style.height === '') {\n        canvas.height = canvas.width / (aspectRatio || 2);\n      } else {\n        const displayHeight = readUsedSize(canvas, 'height');\n        if (displayHeight !== undefined) {\n          canvas.height = displayHeight;\n        }\n      }\n    }\n    return canvas;\n  }\n  const eventListenerOptions = supportsEventListenerOptions ? {\n    passive: true\n  } : false;\n  function addListener(node, type, listener) {\n    node.addEventListener(type, listener, eventListenerOptions);\n  }\n  function removeListener(chart, type, listener) {\n    chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n  }\n  function fromNativeEvent(event, chart) {\n    const type = EVENT_TYPES[event.type] || event.type;\n    const {\n      x,\n      y\n    } = getRelativePosition$1(event, chart);\n    return {\n      type,\n      chart,\n      native: event,\n      x: x !== undefined ? x : null,\n      y: y !== undefined ? y : null\n    };\n  }\n  function nodeListContains(nodeList, canvas) {\n    for (const node of nodeList) {\n      if (node === canvas || node.contains(canvas)) {\n        return true;\n      }\n    }\n  }\n  function createAttachObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const observer = new MutationObserver(entries => {\n      let trigger = false;\n      for (const entry of entries) {\n        trigger = trigger || nodeListContains(entry.addedNodes, canvas);\n        trigger = trigger && !nodeListContains(entry.removedNodes, canvas);\n      }\n      if (trigger) {\n        listener();\n      }\n    });\n    observer.observe(document, {\n      childList: true,\n      subtree: true\n    });\n    return observer;\n  }\n  function createDetachObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const observer = new MutationObserver(entries => {\n      let trigger = false;\n      for (const entry of entries) {\n        trigger = trigger || nodeListContains(entry.removedNodes, canvas);\n        trigger = trigger && !nodeListContains(entry.addedNodes, canvas);\n      }\n      if (trigger) {\n        listener();\n      }\n    });\n    observer.observe(document, {\n      childList: true,\n      subtree: true\n    });\n    return observer;\n  }\n  const drpListeningCharts = new Map();\n  let oldDevicePixelRatio = 0;\n  function onWindowResize() {\n    const dpr = window.devicePixelRatio;\n    if (dpr === oldDevicePixelRatio) {\n      return;\n    }\n    oldDevicePixelRatio = dpr;\n    drpListeningCharts.forEach((resize, chart) => {\n      if (chart.currentDevicePixelRatio !== dpr) {\n        resize();\n      }\n    });\n  }\n  function listenDevicePixelRatioChanges(chart, resize) {\n    if (!drpListeningCharts.size) {\n      window.addEventListener('resize', onWindowResize);\n    }\n    drpListeningCharts.set(chart, resize);\n  }\n  function unlistenDevicePixelRatioChanges(chart) {\n    drpListeningCharts.delete(chart);\n    if (!drpListeningCharts.size) {\n      window.removeEventListener('resize', onWindowResize);\n    }\n  }\n  function createResizeObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const container = canvas && _getParentNode(canvas);\n    if (!container) {\n      return;\n    }\n    const resize = throttled((width, height) => {\n      const w = container.clientWidth;\n      listener(width, height);\n      if (w < container.clientWidth) {\n        listener();\n      }\n    }, window);\n    const observer = new ResizeObserver(entries => {\n      const entry = entries[0];\n      const width = entry.contentRect.width;\n      const height = entry.contentRect.height;\n      if (width === 0 && height === 0) {\n        return;\n      }\n      resize(width, height);\n    });\n    observer.observe(container);\n    listenDevicePixelRatioChanges(chart, resize);\n    return observer;\n  }\n  function releaseObserver(chart, type, observer) {\n    if (observer) {\n      observer.disconnect();\n    }\n    if (type === 'resize') {\n      unlistenDevicePixelRatioChanges(chart);\n    }\n  }\n  function createProxyAndListen(chart, type, listener) {\n    const canvas = chart.canvas;\n    const proxy = throttled(event => {\n      if (chart.ctx !== null) {\n        listener(fromNativeEvent(event, chart));\n      }\n    }, chart, args => {\n      const event = args[0];\n      return [event, event.offsetX, event.offsetY];\n    });\n    addListener(canvas, type, proxy);\n    return proxy;\n  }\n  class DomPlatform extends BasePlatform {\n    acquireContext(canvas, aspectRatio) {\n      const context = canvas && canvas.getContext && canvas.getContext('2d');\n      if (context && context.canvas === canvas) {\n        initCanvas(canvas, aspectRatio);\n        return context;\n      }\n      return null;\n    }\n    releaseContext(context) {\n      const canvas = context.canvas;\n      if (!canvas[EXPANDO_KEY]) {\n        return false;\n      }\n      const initial = canvas[EXPANDO_KEY].initial;\n      ['height', 'width'].forEach(prop => {\n        const value = initial[prop];\n        if (isNullOrUndef(value)) {\n          canvas.removeAttribute(prop);\n        } else {\n          canvas.setAttribute(prop, value);\n        }\n      });\n      const style = initial.style || {};\n      Object.keys(style).forEach(key => {\n        canvas.style[key] = style[key];\n      });\n      canvas.width = canvas.width;\n      delete canvas[EXPANDO_KEY];\n      return true;\n    }\n    addEventListener(chart, type, listener) {\n      this.removeEventListener(chart, type);\n      const proxies = chart.$proxies || (chart.$proxies = {});\n      const handlers = {\n        attach: createAttachObserver,\n        detach: createDetachObserver,\n        resize: createResizeObserver\n      };\n      const handler = handlers[type] || createProxyAndListen;\n      proxies[type] = handler(chart, type, listener);\n    }\n    removeEventListener(chart, type) {\n      const proxies = chart.$proxies || (chart.$proxies = {});\n      const proxy = proxies[type];\n      if (!proxy) {\n        return;\n      }\n      const handlers = {\n        attach: releaseObserver,\n        detach: releaseObserver,\n        resize: releaseObserver\n      };\n      const handler = handlers[type] || removeListener;\n      handler(chart, type, proxy);\n      proxies[type] = undefined;\n    }\n    getDevicePixelRatio() {\n      return window.devicePixelRatio;\n    }\n    getMaximumSize(canvas, width, height, aspectRatio) {\n      return getMaximumSize(canvas, width, height, aspectRatio);\n    }\n    isAttached(canvas) {\n      const container = _getParentNode(canvas);\n      return !!(container && container.isConnected);\n    }\n  }\n  function _detectPlatform(canvas) {\n    if (!_isDomSupported() || typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas) {\n      return BasicPlatform;\n    }\n    return DomPlatform;\n  }\n  var platforms = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    _detectPlatform: _detectPlatform,\n    BasePlatform: BasePlatform,\n    BasicPlatform: BasicPlatform,\n    DomPlatform: DomPlatform\n  });\n  const transparent = 'transparent';\n  const interpolators = {\n    boolean(from, to, factor) {\n      return factor > 0.5 ? to : from;\n    },\n    color(from, to, factor) {\n      const c0 = color(from || transparent);\n      const c1 = c0.valid && color(to || transparent);\n      return c1 && c1.valid ? c1.mix(c0, factor).hexString() : to;\n    },\n    number(from, to, factor) {\n      return from + (to - from) * factor;\n    }\n  };\n  class Animation {\n    constructor(cfg, target, prop, to) {\n      const currentValue = target[prop];\n      to = resolve([cfg.to, to, currentValue, cfg.from]);\n      const from = resolve([cfg.from, currentValue, to]);\n      this._active = true;\n      this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n      this._easing = effects[cfg.easing] || effects.linear;\n      this._start = Math.floor(Date.now() + (cfg.delay || 0));\n      this._duration = this._total = Math.floor(cfg.duration);\n      this._loop = !!cfg.loop;\n      this._target = target;\n      this._prop = prop;\n      this._from = from;\n      this._to = to;\n      this._promises = undefined;\n    }\n    active() {\n      return this._active;\n    }\n    update(cfg, to, date) {\n      if (this._active) {\n        this._notify(false);\n        const currentValue = this._target[this._prop];\n        const elapsed = date - this._start;\n        const remain = this._duration - elapsed;\n        this._start = date;\n        this._duration = Math.floor(Math.max(remain, cfg.duration));\n        this._total += elapsed;\n        this._loop = !!cfg.loop;\n        this._to = resolve([cfg.to, to, currentValue, cfg.from]);\n        this._from = resolve([cfg.from, currentValue, to]);\n      }\n    }\n    cancel() {\n      if (this._active) {\n        this.tick(Date.now());\n        this._active = false;\n        this._notify(false);\n      }\n    }\n    tick(date) {\n      const elapsed = date - this._start;\n      const duration = this._duration;\n      const prop = this._prop;\n      const from = this._from;\n      const loop = this._loop;\n      const to = this._to;\n      let factor;\n      this._active = from !== to && (loop || elapsed < duration);\n      if (!this._active) {\n        this._target[prop] = to;\n        this._notify(true);\n        return;\n      }\n      if (elapsed < 0) {\n        this._target[prop] = from;\n        return;\n      }\n      factor = elapsed / duration % 2;\n      factor = loop && factor > 1 ? 2 - factor : factor;\n      factor = this._easing(Math.min(1, Math.max(0, factor)));\n      this._target[prop] = this._fn(from, to, factor);\n    }\n    wait() {\n      const promises = this._promises || (this._promises = []);\n      return new Promise((res, rej) => {\n        promises.push({\n          res,\n          rej\n        });\n      });\n    }\n    _notify(resolved) {\n      const method = resolved ? 'res' : 'rej';\n      const promises = this._promises || [];\n      for (let i = 0; i < promises.length; i++) {\n        promises[i][method]();\n      }\n    }\n  }\n  const numbers = ['x', 'y', 'borderWidth', 'radius', 'tension'];\n  const colors = ['color', 'borderColor', 'backgroundColor'];\n  defaults.set('animation', {\n    delay: undefined,\n    duration: 1000,\n    easing: 'easeOutQuart',\n    fn: undefined,\n    from: undefined,\n    loop: undefined,\n    to: undefined,\n    type: undefined\n  });\n  const animationOptions = Object.keys(defaults.animation);\n  defaults.describe('animation', {\n    _fallback: false,\n    _indexable: false,\n    _scriptable: name => name !== 'onProgress' && name !== 'onComplete' && name !== 'fn'\n  });\n  defaults.set('animations', {\n    colors: {\n      type: 'color',\n      properties: colors\n    },\n    numbers: {\n      type: 'number',\n      properties: numbers\n    }\n  });\n  defaults.describe('animations', {\n    _fallback: 'animation'\n  });\n  defaults.set('transitions', {\n    active: {\n      animation: {\n        duration: 400\n      }\n    },\n    resize: {\n      animation: {\n        duration: 0\n      }\n    },\n    show: {\n      animations: {\n        colors: {\n          from: 'transparent'\n        },\n        visible: {\n          type: 'boolean',\n          duration: 0\n        }\n      }\n    },\n    hide: {\n      animations: {\n        colors: {\n          to: 'transparent'\n        },\n        visible: {\n          type: 'boolean',\n          easing: 'linear',\n          fn: v => v | 0\n        }\n      }\n    }\n  });\n  class Animations {\n    constructor(chart, config) {\n      this._chart = chart;\n      this._properties = new Map();\n      this.configure(config);\n    }\n    configure(config) {\n      if (!isObject(config)) {\n        return;\n      }\n      const animatedProps = this._properties;\n      Object.getOwnPropertyNames(config).forEach(key => {\n        const cfg = config[key];\n        if (!isObject(cfg)) {\n          return;\n        }\n        const resolved = {};\n        for (const option of animationOptions) {\n          resolved[option] = cfg[option];\n        }\n        (isArray(cfg.properties) && cfg.properties || [key]).forEach(prop => {\n          if (prop === key || !animatedProps.has(prop)) {\n            animatedProps.set(prop, resolved);\n          }\n        });\n      });\n    }\n    _animateOptions(target, values) {\n      const newOptions = values.options;\n      const options = resolveTargetOptions(target, newOptions);\n      if (!options) {\n        return [];\n      }\n      const animations = this._createAnimations(options, newOptions);\n      if (newOptions.$shared) {\n        awaitAll(target.options.$animations, newOptions).then(() => {\n          target.options = newOptions;\n        }, () => {});\n      }\n      return animations;\n    }\n    _createAnimations(target, values) {\n      const animatedProps = this._properties;\n      const animations = [];\n      const running = target.$animations || (target.$animations = {});\n      const props = Object.keys(values);\n      const date = Date.now();\n      let i;\n      for (i = props.length - 1; i >= 0; --i) {\n        const prop = props[i];\n        if (prop.charAt(0) === '$') {\n          continue;\n        }\n        if (prop === 'options') {\n          animations.push(...this._animateOptions(target, values));\n          continue;\n        }\n        const value = values[prop];\n        let animation = running[prop];\n        const cfg = animatedProps.get(prop);\n        if (animation) {\n          if (cfg && animation.active()) {\n            animation.update(cfg, value, date);\n            continue;\n          } else {\n            animation.cancel();\n          }\n        }\n        if (!cfg || !cfg.duration) {\n          target[prop] = value;\n          continue;\n        }\n        running[prop] = animation = new Animation(cfg, target, prop, value);\n        animations.push(animation);\n      }\n      return animations;\n    }\n    update(target, values) {\n      if (this._properties.size === 0) {\n        Object.assign(target, values);\n        return;\n      }\n      const animations = this._createAnimations(target, values);\n      if (animations.length) {\n        animator.add(this._chart, animations);\n        return true;\n      }\n    }\n  }\n  function awaitAll(animations, properties) {\n    const running = [];\n    const keys = Object.keys(properties);\n    for (let i = 0; i < keys.length; i++) {\n      const anim = animations[keys[i]];\n      if (anim && anim.active()) {\n        running.push(anim.wait());\n      }\n    }\n    return Promise.all(running);\n  }\n  function resolveTargetOptions(target, newOptions) {\n    if (!newOptions) {\n      return;\n    }\n    let options = target.options;\n    if (!options) {\n      target.options = newOptions;\n      return;\n    }\n    if (options.$shared) {\n      target.options = options = Object.assign({}, options, {\n        $shared: false,\n        $animations: {}\n      });\n    }\n    return options;\n  }\n  function scaleClip(scale, allowedOverflow) {\n    const opts = scale && scale.options || {};\n    const reverse = opts.reverse;\n    const min = opts.min === undefined ? allowedOverflow : 0;\n    const max = opts.max === undefined ? allowedOverflow : 0;\n    return {\n      start: reverse ? max : min,\n      end: reverse ? min : max\n    };\n  }\n  function defaultClip(xScale, yScale, allowedOverflow) {\n    if (allowedOverflow === false) {\n      return false;\n    }\n    const x = scaleClip(xScale, allowedOverflow);\n    const y = scaleClip(yScale, allowedOverflow);\n    return {\n      top: y.end,\n      right: x.end,\n      bottom: y.start,\n      left: x.start\n    };\n  }\n  function toClip(value) {\n    let t, r, b, l;\n    if (isObject(value)) {\n      t = value.top;\n      r = value.right;\n      b = value.bottom;\n      l = value.left;\n    } else {\n      t = r = b = l = value;\n    }\n    return {\n      top: t,\n      right: r,\n      bottom: b,\n      left: l,\n      disabled: value === false\n    };\n  }\n  function getSortedDatasetIndices(chart, filterVisible) {\n    const keys = [];\n    const metasets = chart._getSortedDatasetMetas(filterVisible);\n    let i, ilen;\n    for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n      keys.push(metasets[i].index);\n    }\n    return keys;\n  }\n  function applyStack(stack, value, dsIndex, options = {}) {\n    const keys = stack.keys;\n    const singleMode = options.mode === 'single';\n    let i, ilen, datasetIndex, otherValue;\n    if (value === null) {\n      return;\n    }\n    for (i = 0, ilen = keys.length; i < ilen; ++i) {\n      datasetIndex = +keys[i];\n      if (datasetIndex === dsIndex) {\n        if (options.all) {\n          continue;\n        }\n        break;\n      }\n      otherValue = stack.values[datasetIndex];\n      if (isNumberFinite(otherValue) && (singleMode || value === 0 || sign(value) === sign(otherValue))) {\n        value += otherValue;\n      }\n    }\n    return value;\n  }\n  function convertObjectDataToArray(data) {\n    const keys = Object.keys(data);\n    const adata = new Array(keys.length);\n    let i, ilen, key;\n    for (i = 0, ilen = keys.length; i < ilen; ++i) {\n      key = keys[i];\n      adata[i] = {\n        x: key,\n        y: data[key]\n      };\n    }\n    return adata;\n  }\n  function isStacked(scale, meta) {\n    const stacked = scale && scale.options.stacked;\n    return stacked || stacked === undefined && meta.stack !== undefined;\n  }\n  function getStackKey(indexScale, valueScale, meta) {\n    return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n  }\n  function getUserBounds(scale) {\n    const {\n      min,\n      max,\n      minDefined,\n      maxDefined\n    } = scale.getUserBounds();\n    return {\n      min: minDefined ? min : Number.NEGATIVE_INFINITY,\n      max: maxDefined ? max : Number.POSITIVE_INFINITY\n    };\n  }\n  function getOrCreateStack(stacks, stackKey, indexValue) {\n    const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n    return subStack[indexValue] || (subStack[indexValue] = {});\n  }\n  function getLastIndexInStack(stack, vScale, positive, type) {\n    for (const meta of vScale.getMatchingVisibleMetas(type).reverse()) {\n      const value = stack[meta.index];\n      if (positive && value > 0 || !positive && value < 0) {\n        return meta.index;\n      }\n    }\n    return null;\n  }\n  function updateStacks(controller, parsed) {\n    const {\n      chart,\n      _cachedMeta: meta\n    } = controller;\n    const stacks = chart._stacks || (chart._stacks = {});\n    const {\n      iScale,\n      vScale,\n      index: datasetIndex\n    } = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const key = getStackKey(iScale, vScale, meta);\n    const ilen = parsed.length;\n    let stack;\n    for (let i = 0; i < ilen; ++i) {\n      const item = parsed[i];\n      const {\n        [iAxis]: index,\n        [vAxis]: value\n      } = item;\n      const itemStacks = item._stacks || (item._stacks = {});\n      stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n      stack[datasetIndex] = value;\n      stack._top = getLastIndexInStack(stack, vScale, true, meta.type);\n      stack._bottom = getLastIndexInStack(stack, vScale, false, meta.type);\n    }\n  }\n  function getFirstScaleId(chart, axis) {\n    const scales = chart.scales;\n    return Object.keys(scales).filter(key => scales[key].axis === axis).shift();\n  }\n  function createDatasetContext(parent, index) {\n    return createContext(parent, {\n      active: false,\n      dataset: undefined,\n      datasetIndex: index,\n      index,\n      mode: 'default',\n      type: 'dataset'\n    });\n  }\n  function createDataContext(parent, index, element) {\n    return createContext(parent, {\n      active: false,\n      dataIndex: index,\n      parsed: undefined,\n      raw: undefined,\n      element,\n      index,\n      mode: 'default',\n      type: 'data'\n    });\n  }\n  function clearStacks(meta, items) {\n    const datasetIndex = meta.controller.index;\n    const axis = meta.vScale && meta.vScale.axis;\n    if (!axis) {\n      return;\n    }\n    items = items || meta._parsed;\n    for (const parsed of items) {\n      const stacks = parsed._stacks;\n      if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\n        return;\n      }\n      delete stacks[axis][datasetIndex];\n    }\n  }\n  const isDirectUpdateMode = mode => mode === 'reset' || mode === 'none';\n  const cloneIfNotShared = (cached, shared) => shared ? cached : Object.assign({}, cached);\n  const createStack = (canStack, meta, chart) => canStack && !meta.hidden && meta._stacked && {\n    keys: getSortedDatasetIndices(chart, true),\n    values: null\n  };\n  class DatasetController {\n    constructor(chart, datasetIndex) {\n      this.chart = chart;\n      this._ctx = chart.ctx;\n      this.index = datasetIndex;\n      this._cachedDataOpts = {};\n      this._cachedMeta = this.getMeta();\n      this._type = this._cachedMeta.type;\n      this.options = undefined;\n      this._parsing = false;\n      this._data = undefined;\n      this._objectData = undefined;\n      this._sharedOptions = undefined;\n      this._drawStart = undefined;\n      this._drawCount = undefined;\n      this.enableOptionSharing = false;\n      this.$context = undefined;\n      this._syncList = [];\n      this.initialize();\n    }\n    initialize() {\n      const meta = this._cachedMeta;\n      this.configure();\n      this.linkScales();\n      meta._stacked = isStacked(meta.vScale, meta);\n      this.addElements();\n    }\n    updateIndex(datasetIndex) {\n      if (this.index !== datasetIndex) {\n        clearStacks(this._cachedMeta);\n      }\n      this.index = datasetIndex;\n    }\n    linkScales() {\n      const chart = this.chart;\n      const meta = this._cachedMeta;\n      const dataset = this.getDataset();\n      const chooseId = (axis, x, y, r) => axis === 'x' ? x : axis === 'r' ? r : y;\n      const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n      const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n      const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n      const indexAxis = meta.indexAxis;\n      const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n      const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n      meta.xScale = this.getScaleForId(xid);\n      meta.yScale = this.getScaleForId(yid);\n      meta.rScale = this.getScaleForId(rid);\n      meta.iScale = this.getScaleForId(iid);\n      meta.vScale = this.getScaleForId(vid);\n    }\n    getDataset() {\n      return this.chart.data.datasets[this.index];\n    }\n    getMeta() {\n      return this.chart.getDatasetMeta(this.index);\n    }\n    getScaleForId(scaleID) {\n      return this.chart.scales[scaleID];\n    }\n    _getOtherScale(scale) {\n      const meta = this._cachedMeta;\n      return scale === meta.iScale ? meta.vScale : meta.iScale;\n    }\n    reset() {\n      this._update('reset');\n    }\n    _destroy() {\n      const meta = this._cachedMeta;\n      if (this._data) {\n        unlistenArrayEvents(this._data, this);\n      }\n      if (meta._stacked) {\n        clearStacks(meta);\n      }\n    }\n    _dataCheck() {\n      const dataset = this.getDataset();\n      const data = dataset.data || (dataset.data = []);\n      const _data = this._data;\n      if (isObject(data)) {\n        this._data = convertObjectDataToArray(data);\n      } else if (_data !== data) {\n        if (_data) {\n          unlistenArrayEvents(_data, this);\n          const meta = this._cachedMeta;\n          clearStacks(meta);\n          meta._parsed = [];\n        }\n        if (data && Object.isExtensible(data)) {\n          listenArrayEvents(data, this);\n        }\n        this._syncList = [];\n        this._data = data;\n      }\n    }\n    addElements() {\n      const meta = this._cachedMeta;\n      this._dataCheck();\n      if (this.datasetElementType) {\n        meta.dataset = new this.datasetElementType();\n      }\n    }\n    buildOrUpdateElements(resetNewElements) {\n      const meta = this._cachedMeta;\n      const dataset = this.getDataset();\n      let stackChanged = false;\n      this._dataCheck();\n      const oldStacked = meta._stacked;\n      meta._stacked = isStacked(meta.vScale, meta);\n      if (meta.stack !== dataset.stack) {\n        stackChanged = true;\n        clearStacks(meta);\n        meta.stack = dataset.stack;\n      }\n      this._resyncElements(resetNewElements);\n      if (stackChanged || oldStacked !== meta._stacked) {\n        updateStacks(this, meta._parsed);\n      }\n    }\n    configure() {\n      const config = this.chart.config;\n      const scopeKeys = config.datasetScopeKeys(this._type);\n      const scopes = config.getOptionScopes(this.getDataset(), scopeKeys, true);\n      this.options = config.createResolver(scopes, this.getContext());\n      this._parsing = this.options.parsing;\n      this._cachedDataOpts = {};\n    }\n    parse(start, count) {\n      const {\n        _cachedMeta: meta,\n        _data: data\n      } = this;\n      const {\n        iScale,\n        _stacked\n      } = meta;\n      const iAxis = iScale.axis;\n      let sorted = start === 0 && count === data.length ? true : meta._sorted;\n      let prev = start > 0 && meta._parsed[start - 1];\n      let i, cur, parsed;\n      if (this._parsing === false) {\n        meta._parsed = data;\n        meta._sorted = true;\n        parsed = data;\n      } else {\n        if (isArray(data[start])) {\n          parsed = this.parseArrayData(meta, data, start, count);\n        } else if (isObject(data[start])) {\n          parsed = this.parseObjectData(meta, data, start, count);\n        } else {\n          parsed = this.parsePrimitiveData(meta, data, start, count);\n        }\n        const isNotInOrderComparedToPrev = () => cur[iAxis] === null || prev && cur[iAxis] < prev[iAxis];\n        for (i = 0; i < count; ++i) {\n          meta._parsed[i + start] = cur = parsed[i];\n          if (sorted) {\n            if (isNotInOrderComparedToPrev()) {\n              sorted = false;\n            }\n            prev = cur;\n          }\n        }\n        meta._sorted = sorted;\n      }\n      if (_stacked) {\n        updateStacks(this, parsed);\n      }\n    }\n    parsePrimitiveData(meta, data, start, count) {\n      const {\n        iScale,\n        vScale\n      } = meta;\n      const iAxis = iScale.axis;\n      const vAxis = vScale.axis;\n      const labels = iScale.getLabels();\n      const singleScale = iScale === vScale;\n      const parsed = new Array(count);\n      let i, ilen, index;\n      for (i = 0, ilen = count; i < ilen; ++i) {\n        index = i + start;\n        parsed[i] = {\n          [iAxis]: singleScale || iScale.parse(labels[index], index),\n          [vAxis]: vScale.parse(data[index], index)\n        };\n      }\n      return parsed;\n    }\n    parseArrayData(meta, data, start, count) {\n      const {\n        xScale,\n        yScale\n      } = meta;\n      const parsed = new Array(count);\n      let i, ilen, index, item;\n      for (i = 0, ilen = count; i < ilen; ++i) {\n        index = i + start;\n        item = data[index];\n        parsed[i] = {\n          x: xScale.parse(item[0], index),\n          y: yScale.parse(item[1], index)\n        };\n      }\n      return parsed;\n    }\n    parseObjectData(meta, data, start, count) {\n      const {\n        xScale,\n        yScale\n      } = meta;\n      const {\n        xAxisKey = 'x',\n        yAxisKey = 'y'\n      } = this._parsing;\n      const parsed = new Array(count);\n      let i, ilen, index, item;\n      for (i = 0, ilen = count; i < ilen; ++i) {\n        index = i + start;\n        item = data[index];\n        parsed[i] = {\n          x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n          y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n        };\n      }\n      return parsed;\n    }\n    getParsed(index) {\n      return this._cachedMeta._parsed[index];\n    }\n    getDataElement(index) {\n      return this._cachedMeta.data[index];\n    }\n    applyStack(scale, parsed, mode) {\n      const chart = this.chart;\n      const meta = this._cachedMeta;\n      const value = parsed[scale.axis];\n      const stack = {\n        keys: getSortedDatasetIndices(chart, true),\n        values: parsed._stacks[scale.axis]\n      };\n      return applyStack(stack, value, meta.index, {\n        mode\n      });\n    }\n    updateRangeFromParsed(range, scale, parsed, stack) {\n      const parsedValue = parsed[scale.axis];\n      let value = parsedValue === null ? NaN : parsedValue;\n      const values = stack && parsed._stacks[scale.axis];\n      if (stack && values) {\n        stack.values = values;\n        value = applyStack(stack, parsedValue, this._cachedMeta.index);\n      }\n      range.min = Math.min(range.min, value);\n      range.max = Math.max(range.max, value);\n    }\n    getMinMax(scale, canStack) {\n      const meta = this._cachedMeta;\n      const _parsed = meta._parsed;\n      const sorted = meta._sorted && scale === meta.iScale;\n      const ilen = _parsed.length;\n      const otherScale = this._getOtherScale(scale);\n      const stack = createStack(canStack, meta, this.chart);\n      const range = {\n        min: Number.POSITIVE_INFINITY,\n        max: Number.NEGATIVE_INFINITY\n      };\n      const {\n        min: otherMin,\n        max: otherMax\n      } = getUserBounds(otherScale);\n      let i, parsed;\n      function _skip() {\n        parsed = _parsed[i];\n        const otherValue = parsed[otherScale.axis];\n        return !isNumberFinite(parsed[scale.axis]) || otherMin > otherValue || otherMax < otherValue;\n      }\n      for (i = 0; i < ilen; ++i) {\n        if (_skip()) {\n          continue;\n        }\n        this.updateRangeFromParsed(range, scale, parsed, stack);\n        if (sorted) {\n          break;\n        }\n      }\n      if (sorted) {\n        for (i = ilen - 1; i >= 0; --i) {\n          if (_skip()) {\n            continue;\n          }\n          this.updateRangeFromParsed(range, scale, parsed, stack);\n          break;\n        }\n      }\n      return range;\n    }\n    getAllParsedValues(scale) {\n      const parsed = this._cachedMeta._parsed;\n      const values = [];\n      let i, ilen, value;\n      for (i = 0, ilen = parsed.length; i < ilen; ++i) {\n        value = parsed[i][scale.axis];\n        if (isNumberFinite(value)) {\n          values.push(value);\n        }\n      }\n      return values;\n    }\n    getMaxOverflow() {\n      return false;\n    }\n    getLabelAndValue(index) {\n      const meta = this._cachedMeta;\n      const iScale = meta.iScale;\n      const vScale = meta.vScale;\n      const parsed = this.getParsed(index);\n      return {\n        label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n        value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n      };\n    }\n    _update(mode) {\n      const meta = this._cachedMeta;\n      this.update(mode || 'default');\n      meta._clip = toClip(valueOrDefault(this.options.clip, defaultClip(meta.xScale, meta.yScale, this.getMaxOverflow())));\n    }\n    update(mode) {}\n    draw() {\n      const ctx = this._ctx;\n      const chart = this.chart;\n      const meta = this._cachedMeta;\n      const elements = meta.data || [];\n      const area = chart.chartArea;\n      const active = [];\n      const start = this._drawStart || 0;\n      const count = this._drawCount || elements.length - start;\n      const drawActiveElementsOnTop = this.options.drawActiveElementsOnTop;\n      let i;\n      if (meta.dataset) {\n        meta.dataset.draw(ctx, area, start, count);\n      }\n      for (i = start; i < start + count; ++i) {\n        const element = elements[i];\n        if (element.hidden) {\n          continue;\n        }\n        if (element.active && drawActiveElementsOnTop) {\n          active.push(element);\n        } else {\n          element.draw(ctx, area);\n        }\n      }\n      for (i = 0; i < active.length; ++i) {\n        active[i].draw(ctx, area);\n      }\n    }\n    getStyle(index, active) {\n      const mode = active ? 'active' : 'default';\n      return index === undefined && this._cachedMeta.dataset ? this.resolveDatasetElementOptions(mode) : this.resolveDataElementOptions(index || 0, mode);\n    }\n    getContext(index, active, mode) {\n      const dataset = this.getDataset();\n      let context;\n      if (index >= 0 && index < this._cachedMeta.data.length) {\n        const element = this._cachedMeta.data[index];\n        context = element.$context || (element.$context = createDataContext(this.getContext(), index, element));\n        context.parsed = this.getParsed(index);\n        context.raw = dataset.data[index];\n        context.index = context.dataIndex = index;\n      } else {\n        context = this.$context || (this.$context = createDatasetContext(this.chart.getContext(), this.index));\n        context.dataset = dataset;\n        context.index = context.datasetIndex = this.index;\n      }\n      context.active = !!active;\n      context.mode = mode;\n      return context;\n    }\n    resolveDatasetElementOptions(mode) {\n      return this._resolveElementOptions(this.datasetElementType.id, mode);\n    }\n    resolveDataElementOptions(index, mode) {\n      return this._resolveElementOptions(this.dataElementType.id, mode, index);\n    }\n    _resolveElementOptions(elementType, mode = 'default', index) {\n      const active = mode === 'active';\n      const cache = this._cachedDataOpts;\n      const cacheKey = elementType + '-' + mode;\n      const cached = cache[cacheKey];\n      const sharing = this.enableOptionSharing && defined(index);\n      if (cached) {\n        return cloneIfNotShared(cached, sharing);\n      }\n      const config = this.chart.config;\n      const scopeKeys = config.datasetElementScopeKeys(this._type, elementType);\n      const prefixes = active ? [`${elementType}Hover`, 'hover', elementType, ''] : [elementType, ''];\n      const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n      const names = Object.keys(defaults.elements[elementType]);\n      const context = () => this.getContext(index, active);\n      const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n      if (values.$shared) {\n        values.$shared = sharing;\n        cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n      }\n      return values;\n    }\n    _resolveAnimations(index, transition, active) {\n      const chart = this.chart;\n      const cache = this._cachedDataOpts;\n      const cacheKey = `animation-${transition}`;\n      const cached = cache[cacheKey];\n      if (cached) {\n        return cached;\n      }\n      let options;\n      if (chart.options.animation !== false) {\n        const config = this.chart.config;\n        const scopeKeys = config.datasetAnimationScopeKeys(this._type, transition);\n        const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n        options = config.createResolver(scopes, this.getContext(index, active, transition));\n      }\n      const animations = new Animations(chart, options && options.animations);\n      if (options && options._cacheable) {\n        cache[cacheKey] = Object.freeze(animations);\n      }\n      return animations;\n    }\n    getSharedOptions(options) {\n      if (!options.$shared) {\n        return;\n      }\n      return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n    }\n    includeOptions(mode, sharedOptions) {\n      return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n    }\n    updateElement(element, index, properties, mode) {\n      if (isDirectUpdateMode(mode)) {\n        Object.assign(element, properties);\n      } else {\n        this._resolveAnimations(index, mode).update(element, properties);\n      }\n    }\n    updateSharedOptions(sharedOptions, mode, newOptions) {\n      if (sharedOptions && !isDirectUpdateMode(mode)) {\n        this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n      }\n    }\n    _setStyle(element, index, mode, active) {\n      element.active = active;\n      const options = this.getStyle(index, active);\n      this._resolveAnimations(index, mode, active).update(element, {\n        options: !active && this.getSharedOptions(options) || options\n      });\n    }\n    removeHoverStyle(element, datasetIndex, index) {\n      this._setStyle(element, index, 'active', false);\n    }\n    setHoverStyle(element, datasetIndex, index) {\n      this._setStyle(element, index, 'active', true);\n    }\n    _removeDatasetHoverStyle() {\n      const element = this._cachedMeta.dataset;\n      if (element) {\n        this._setStyle(element, undefined, 'active', false);\n      }\n    }\n    _setDatasetHoverStyle() {\n      const element = this._cachedMeta.dataset;\n      if (element) {\n        this._setStyle(element, undefined, 'active', true);\n      }\n    }\n    _resyncElements(resetNewElements) {\n      const data = this._data;\n      const elements = this._cachedMeta.data;\n      for (const [method, arg1, arg2] of this._syncList) {\n        this[method](arg1, arg2);\n      }\n      this._syncList = [];\n      const numMeta = elements.length;\n      const numData = data.length;\n      const count = Math.min(numData, numMeta);\n      if (count) {\n        this.parse(0, count);\n      }\n      if (numData > numMeta) {\n        this._insertElements(numMeta, numData - numMeta, resetNewElements);\n      } else if (numData < numMeta) {\n        this._removeElements(numData, numMeta - numData);\n      }\n    }\n    _insertElements(start, count, resetNewElements = true) {\n      const meta = this._cachedMeta;\n      const data = meta.data;\n      const end = start + count;\n      let i;\n      const move = arr => {\n        arr.length += count;\n        for (i = arr.length - 1; i >= end; i--) {\n          arr[i] = arr[i - count];\n        }\n      };\n      move(data);\n      for (i = start; i < end; ++i) {\n        data[i] = new this.dataElementType();\n      }\n      if (this._parsing) {\n        move(meta._parsed);\n      }\n      this.parse(start, count);\n      if (resetNewElements) {\n        this.updateElements(data, start, count, 'reset');\n      }\n    }\n    updateElements(element, start, count, mode) {}\n    _removeElements(start, count) {\n      const meta = this._cachedMeta;\n      if (this._parsing) {\n        const removed = meta._parsed.splice(start, count);\n        if (meta._stacked) {\n          clearStacks(meta, removed);\n        }\n      }\n      meta.data.splice(start, count);\n    }\n    _sync(args) {\n      if (this._parsing) {\n        this._syncList.push(args);\n      } else {\n        const [method, arg1, arg2] = args;\n        this[method](arg1, arg2);\n      }\n      this.chart._dataChanges.push([this.index, ...args]);\n    }\n    _onDataPush() {\n      const count = arguments.length;\n      this._sync(['_insertElements', this.getDataset().data.length - count, count]);\n    }\n    _onDataPop() {\n      this._sync(['_removeElements', this._cachedMeta.data.length - 1, 1]);\n    }\n    _onDataShift() {\n      this._sync(['_removeElements', 0, 1]);\n    }\n    _onDataSplice(start, count) {\n      if (count) {\n        this._sync(['_removeElements', start, count]);\n      }\n      const newCount = arguments.length - 2;\n      if (newCount) {\n        this._sync(['_insertElements', start, newCount]);\n      }\n    }\n    _onDataUnshift() {\n      this._sync(['_insertElements', 0, arguments.length]);\n    }\n  }\n  DatasetController.defaults = {};\n  DatasetController.prototype.datasetElementType = null;\n  DatasetController.prototype.dataElementType = null;\n  class Element {\n    constructor() {\n      this.x = undefined;\n      this.y = undefined;\n      this.active = false;\n      this.options = undefined;\n      this.$animations = undefined;\n    }\n    tooltipPosition(useFinalPosition) {\n      const {\n        x,\n        y\n      } = this.getProps(['x', 'y'], useFinalPosition);\n      return {\n        x,\n        y\n      };\n    }\n    hasValue() {\n      return isNumber(this.x) && isNumber(this.y);\n    }\n    getProps(props, final) {\n      const anims = this.$animations;\n      if (!final || !anims) {\n        return this;\n      }\n      const ret = {};\n      props.forEach(prop => {\n        ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : this[prop];\n      });\n      return ret;\n    }\n  }\n  Element.defaults = {};\n  Element.defaultRoutes = undefined;\n  const formatters = {\n    values(value) {\n      return isArray(value) ? value : '' + value;\n    },\n    numeric(tickValue, index, ticks) {\n      if (tickValue === 0) {\n        return '0';\n      }\n      const locale = this.chart.options.locale;\n      let notation;\n      let delta = tickValue;\n      if (ticks.length > 1) {\n        const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n        if (maxTick < 1e-4 || maxTick > 1e+15) {\n          notation = 'scientific';\n        }\n        delta = calculateDelta(tickValue, ticks);\n      }\n      const logDelta = log10(Math.abs(delta));\n      const numDecimal = Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0);\n      const options = {\n        notation,\n        minimumFractionDigits: numDecimal,\n        maximumFractionDigits: numDecimal\n      };\n      Object.assign(options, this.options.ticks.format);\n      return formatNumber(tickValue, locale, options);\n    },\n    logarithmic(tickValue, index, ticks) {\n      if (tickValue === 0) {\n        return '0';\n      }\n      const remain = tickValue / Math.pow(10, Math.floor(log10(tickValue)));\n      if (remain === 1 || remain === 2 || remain === 5) {\n        return formatters.numeric.call(this, tickValue, index, ticks);\n      }\n      return '';\n    }\n  };\n  function calculateDelta(tickValue, ticks) {\n    let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n    if (Math.abs(delta) >= 1 && tickValue !== Math.floor(tickValue)) {\n      delta = tickValue - Math.floor(tickValue);\n    }\n    return delta;\n  }\n  var Ticks = {\n    formatters\n  };\n  defaults.set('scale', {\n    display: true,\n    offset: false,\n    reverse: false,\n    beginAtZero: false,\n    bounds: 'ticks',\n    grace: 0,\n    grid: {\n      display: true,\n      lineWidth: 1,\n      drawBorder: true,\n      drawOnChartArea: true,\n      drawTicks: true,\n      tickLength: 8,\n      tickWidth: (_ctx, options) => options.lineWidth,\n      tickColor: (_ctx, options) => options.color,\n      offset: false,\n      borderDash: [],\n      borderDashOffset: 0.0,\n      borderWidth: 1\n    },\n    title: {\n      display: false,\n      text: '',\n      padding: {\n        top: 4,\n        bottom: 4\n      }\n    },\n    ticks: {\n      minRotation: 0,\n      maxRotation: 50,\n      mirror: false,\n      textStrokeWidth: 0,\n      textStrokeColor: '',\n      padding: 3,\n      display: true,\n      autoSkip: true,\n      autoSkipPadding: 3,\n      labelOffset: 0,\n      callback: Ticks.formatters.values,\n      minor: {},\n      major: {},\n      align: 'center',\n      crossAlign: 'near',\n      showLabelBackdrop: false,\n      backdropColor: 'rgba(255, 255, 255, 0.75)',\n      backdropPadding: 2\n    }\n  });\n  defaults.route('scale.ticks', 'color', '', 'color');\n  defaults.route('scale.grid', 'color', '', 'borderColor');\n  defaults.route('scale.grid', 'borderColor', '', 'borderColor');\n  defaults.route('scale.title', 'color', '', 'color');\n  defaults.describe('scale', {\n    _fallback: false,\n    _scriptable: name => !name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\n    _indexable: name => name !== 'borderDash' && name !== 'tickBorderDash'\n  });\n  defaults.describe('scales', {\n    _fallback: 'scale'\n  });\n  defaults.describe('scale.ticks', {\n    _scriptable: name => name !== 'backdropPadding' && name !== 'callback',\n    _indexable: name => name !== 'backdropPadding'\n  });\n  function autoSkip(scale, ticks) {\n    const tickOpts = scale.options.ticks;\n    const ticksLimit = tickOpts.maxTicksLimit || determineMaxTicks(scale);\n    const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n    const numMajorIndices = majorIndices.length;\n    const first = majorIndices[0];\n    const last = majorIndices[numMajorIndices - 1];\n    const newTicks = [];\n    if (numMajorIndices > ticksLimit) {\n      skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n      return newTicks;\n    }\n    const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n    if (numMajorIndices > 0) {\n      let i, ilen;\n      const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n      skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n      for (i = 0, ilen = numMajorIndices - 1; i < ilen; i++) {\n        skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n      }\n      skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n      return newTicks;\n    }\n    skip(ticks, newTicks, spacing);\n    return newTicks;\n  }\n  function determineMaxTicks(scale) {\n    const offset = scale.options.offset;\n    const tickLength = scale._tickSize();\n    const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n    const maxChart = scale._maxLength / tickLength;\n    return Math.floor(Math.min(maxScale, maxChart));\n  }\n  function calculateSpacing(majorIndices, ticks, ticksLimit) {\n    const evenMajorSpacing = getEvenSpacing(majorIndices);\n    const spacing = ticks.length / ticksLimit;\n    if (!evenMajorSpacing) {\n      return Math.max(spacing, 1);\n    }\n    const factors = _factorize(evenMajorSpacing);\n    for (let i = 0, ilen = factors.length - 1; i < ilen; i++) {\n      const factor = factors[i];\n      if (factor > spacing) {\n        return factor;\n      }\n    }\n    return Math.max(spacing, 1);\n  }\n  function getMajorIndices(ticks) {\n    const result = [];\n    let i, ilen;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      if (ticks[i].major) {\n        result.push(i);\n      }\n    }\n    return result;\n  }\n  function skipMajors(ticks, newTicks, majorIndices, spacing) {\n    let count = 0;\n    let next = majorIndices[0];\n    let i;\n    spacing = Math.ceil(spacing);\n    for (i = 0; i < ticks.length; i++) {\n      if (i === next) {\n        newTicks.push(ticks[i]);\n        count++;\n        next = majorIndices[count * spacing];\n      }\n    }\n  }\n  function skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n    const start = valueOrDefault(majorStart, 0);\n    const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n    let count = 0;\n    let length, i, next;\n    spacing = Math.ceil(spacing);\n    if (majorEnd) {\n      length = majorEnd - majorStart;\n      spacing = length / Math.floor(length / spacing);\n    }\n    next = start;\n    while (next < 0) {\n      count++;\n      next = Math.round(start + count * spacing);\n    }\n    for (i = Math.max(start, 0); i < end; i++) {\n      if (i === next) {\n        newTicks.push(ticks[i]);\n        count++;\n        next = Math.round(start + count * spacing);\n      }\n    }\n  }\n  function getEvenSpacing(arr) {\n    const len = arr.length;\n    let i, diff;\n    if (len < 2) {\n      return false;\n    }\n    for (diff = arr[0], i = 1; i < len; ++i) {\n      if (arr[i] - arr[i - 1] !== diff) {\n        return false;\n      }\n    }\n    return diff;\n  }\n  const reverseAlign = align => align === 'left' ? 'right' : align === 'right' ? 'left' : align;\n  const offsetFromEdge = (scale, edge, offset) => edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\n  function sample(arr, numItems) {\n    const result = [];\n    const increment = arr.length / numItems;\n    const len = arr.length;\n    let i = 0;\n    for (; i < len; i += increment) {\n      result.push(arr[Math.floor(i)]);\n    }\n    return result;\n  }\n  function getPixelForGridLine(scale, index, offsetGridLines) {\n    const length = scale.ticks.length;\n    const validIndex = Math.min(index, length - 1);\n    const start = scale._startPixel;\n    const end = scale._endPixel;\n    const epsilon = 1e-6;\n    let lineValue = scale.getPixelForTick(validIndex);\n    let offset;\n    if (offsetGridLines) {\n      if (length === 1) {\n        offset = Math.max(lineValue - start, end - lineValue);\n      } else if (index === 0) {\n        offset = (scale.getPixelForTick(1) - lineValue) / 2;\n      } else {\n        offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n      }\n      lineValue += validIndex < index ? offset : -offset;\n      if (lineValue < start - epsilon || lineValue > end + epsilon) {\n        return;\n      }\n    }\n    return lineValue;\n  }\n  function garbageCollect(caches, length) {\n    each(caches, cache => {\n      const gc = cache.gc;\n      const gcLen = gc.length / 2;\n      let i;\n      if (gcLen > length) {\n        for (i = 0; i < gcLen; ++i) {\n          delete cache.data[gc[i]];\n        }\n        gc.splice(0, gcLen);\n      }\n    });\n  }\n  function getTickMarkLength(options) {\n    return options.drawTicks ? options.tickLength : 0;\n  }\n  function getTitleHeight(options, fallback) {\n    if (!options.display) {\n      return 0;\n    }\n    const font = toFont(options.font, fallback);\n    const padding = toPadding(options.padding);\n    const lines = isArray(options.text) ? options.text.length : 1;\n    return lines * font.lineHeight + padding.height;\n  }\n  function createScaleContext(parent, scale) {\n    return createContext(parent, {\n      scale,\n      type: 'scale'\n    });\n  }\n  function createTickContext(parent, index, tick) {\n    return createContext(parent, {\n      tick,\n      index,\n      type: 'tick'\n    });\n  }\n  function titleAlign(align, position, reverse) {\n    let ret = _toLeftRightCenter(align);\n    if (reverse && position !== 'right' || !reverse && position === 'right') {\n      ret = reverseAlign(ret);\n    }\n    return ret;\n  }\n  function titleArgs(scale, offset, position, align) {\n    const {\n      top,\n      left,\n      bottom,\n      right,\n      chart\n    } = scale;\n    const {\n      chartArea,\n      scales\n    } = chart;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n    const height = bottom - top;\n    const width = right - left;\n    if (scale.isHorizontal()) {\n      titleX = _alignStartEnd(align, left, right);\n      if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\n      } else if (position === 'center') {\n        titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\n      } else {\n        titleY = offsetFromEdge(scale, position, offset);\n      }\n      maxWidth = right - left;\n    } else {\n      if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        titleX = scales[positionAxisID].getPixelForValue(value) - width + offset;\n      } else if (position === 'center') {\n        titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\n      } else {\n        titleX = offsetFromEdge(scale, position, offset);\n      }\n      titleY = _alignStartEnd(align, bottom, top);\n      rotation = position === 'left' ? -HALF_PI : HALF_PI;\n    }\n    return {\n      titleX,\n      titleY,\n      maxWidth,\n      rotation\n    };\n  }\n  class Scale extends Element {\n    constructor(cfg) {\n      super();\n      this.id = cfg.id;\n      this.type = cfg.type;\n      this.options = undefined;\n      this.ctx = cfg.ctx;\n      this.chart = cfg.chart;\n      this.top = undefined;\n      this.bottom = undefined;\n      this.left = undefined;\n      this.right = undefined;\n      this.width = undefined;\n      this.height = undefined;\n      this._margins = {\n        left: 0,\n        right: 0,\n        top: 0,\n        bottom: 0\n      };\n      this.maxWidth = undefined;\n      this.maxHeight = undefined;\n      this.paddingTop = undefined;\n      this.paddingBottom = undefined;\n      this.paddingLeft = undefined;\n      this.paddingRight = undefined;\n      this.axis = undefined;\n      this.labelRotation = undefined;\n      this.min = undefined;\n      this.max = undefined;\n      this._range = undefined;\n      this.ticks = [];\n      this._gridLineItems = null;\n      this._labelItems = null;\n      this._labelSizes = null;\n      this._length = 0;\n      this._maxLength = 0;\n      this._longestTextCache = {};\n      this._startPixel = undefined;\n      this._endPixel = undefined;\n      this._reversePixels = false;\n      this._userMax = undefined;\n      this._userMin = undefined;\n      this._suggestedMax = undefined;\n      this._suggestedMin = undefined;\n      this._ticksLength = 0;\n      this._borderValue = 0;\n      this._cache = {};\n      this._dataLimitsCached = false;\n      this.$context = undefined;\n    }\n    init(options) {\n      this.options = options.setContext(this.getContext());\n      this.axis = options.axis;\n      this._userMin = this.parse(options.min);\n      this._userMax = this.parse(options.max);\n      this._suggestedMin = this.parse(options.suggestedMin);\n      this._suggestedMax = this.parse(options.suggestedMax);\n    }\n    parse(raw, index) {\n      return raw;\n    }\n    getUserBounds() {\n      let {\n        _userMin,\n        _userMax,\n        _suggestedMin,\n        _suggestedMax\n      } = this;\n      _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n      _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n      _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n      _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n      return {\n        min: finiteOrDefault(_userMin, _suggestedMin),\n        max: finiteOrDefault(_userMax, _suggestedMax),\n        minDefined: isNumberFinite(_userMin),\n        maxDefined: isNumberFinite(_userMax)\n      };\n    }\n    getMinMax(canStack) {\n      let {\n        min,\n        max,\n        minDefined,\n        maxDefined\n      } = this.getUserBounds();\n      let range;\n      if (minDefined && maxDefined) {\n        return {\n          min,\n          max\n        };\n      }\n      const metas = this.getMatchingVisibleMetas();\n      for (let i = 0, ilen = metas.length; i < ilen; ++i) {\n        range = metas[i].controller.getMinMax(this, canStack);\n        if (!minDefined) {\n          min = Math.min(min, range.min);\n        }\n        if (!maxDefined) {\n          max = Math.max(max, range.max);\n        }\n      }\n      min = maxDefined && min > max ? max : min;\n      max = minDefined && min > max ? min : max;\n      return {\n        min: finiteOrDefault(min, finiteOrDefault(max, min)),\n        max: finiteOrDefault(max, finiteOrDefault(min, max))\n      };\n    }\n    getPadding() {\n      return {\n        left: this.paddingLeft || 0,\n        top: this.paddingTop || 0,\n        right: this.paddingRight || 0,\n        bottom: this.paddingBottom || 0\n      };\n    }\n    getTicks() {\n      return this.ticks;\n    }\n    getLabels() {\n      const data = this.chart.data;\n      return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n    }\n    beforeLayout() {\n      this._cache = {};\n      this._dataLimitsCached = false;\n    }\n    beforeUpdate() {\n      callback(this.options.beforeUpdate, [this]);\n    }\n    update(maxWidth, maxHeight, margins) {\n      const {\n        beginAtZero,\n        grace,\n        ticks: tickOpts\n      } = this.options;\n      const sampleSize = tickOpts.sampleSize;\n      this.beforeUpdate();\n      this.maxWidth = maxWidth;\n      this.maxHeight = maxHeight;\n      this._margins = margins = Object.assign({\n        left: 0,\n        right: 0,\n        top: 0,\n        bottom: 0\n      }, margins);\n      this.ticks = null;\n      this._labelSizes = null;\n      this._gridLineItems = null;\n      this._labelItems = null;\n      this.beforeSetDimensions();\n      this.setDimensions();\n      this.afterSetDimensions();\n      this._maxLength = this.isHorizontal() ? this.width + margins.left + margins.right : this.height + margins.top + margins.bottom;\n      if (!this._dataLimitsCached) {\n        this.beforeDataLimits();\n        this.determineDataLimits();\n        this.afterDataLimits();\n        this._range = _addGrace(this, grace, beginAtZero);\n        this._dataLimitsCached = true;\n      }\n      this.beforeBuildTicks();\n      this.ticks = this.buildTicks() || [];\n      this.afterBuildTicks();\n      const samplingEnabled = sampleSize < this.ticks.length;\n      this._convertTicksToLabels(samplingEnabled ? sample(this.ticks, sampleSize) : this.ticks);\n      this.configure();\n      this.beforeCalculateLabelRotation();\n      this.calculateLabelRotation();\n      this.afterCalculateLabelRotation();\n      if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n        this.ticks = autoSkip(this, this.ticks);\n        this._labelSizes = null;\n      }\n      if (samplingEnabled) {\n        this._convertTicksToLabels(this.ticks);\n      }\n      this.beforeFit();\n      this.fit();\n      this.afterFit();\n      this.afterUpdate();\n    }\n    configure() {\n      let reversePixels = this.options.reverse;\n      let startPixel, endPixel;\n      if (this.isHorizontal()) {\n        startPixel = this.left;\n        endPixel = this.right;\n      } else {\n        startPixel = this.top;\n        endPixel = this.bottom;\n        reversePixels = !reversePixels;\n      }\n      this._startPixel = startPixel;\n      this._endPixel = endPixel;\n      this._reversePixels = reversePixels;\n      this._length = endPixel - startPixel;\n      this._alignToPixels = this.options.alignToPixels;\n    }\n    afterUpdate() {\n      callback(this.options.afterUpdate, [this]);\n    }\n    beforeSetDimensions() {\n      callback(this.options.beforeSetDimensions, [this]);\n    }\n    setDimensions() {\n      if (this.isHorizontal()) {\n        this.width = this.maxWidth;\n        this.left = 0;\n        this.right = this.width;\n      } else {\n        this.height = this.maxHeight;\n        this.top = 0;\n        this.bottom = this.height;\n      }\n      this.paddingLeft = 0;\n      this.paddingTop = 0;\n      this.paddingRight = 0;\n      this.paddingBottom = 0;\n    }\n    afterSetDimensions() {\n      callback(this.options.afterSetDimensions, [this]);\n    }\n    _callHooks(name) {\n      this.chart.notifyPlugins(name, this.getContext());\n      callback(this.options[name], [this]);\n    }\n    beforeDataLimits() {\n      this._callHooks('beforeDataLimits');\n    }\n    determineDataLimits() {}\n    afterDataLimits() {\n      this._callHooks('afterDataLimits');\n    }\n    beforeBuildTicks() {\n      this._callHooks('beforeBuildTicks');\n    }\n    buildTicks() {\n      return [];\n    }\n    afterBuildTicks() {\n      this._callHooks('afterBuildTicks');\n    }\n    beforeTickToLabelConversion() {\n      callback(this.options.beforeTickToLabelConversion, [this]);\n    }\n    generateTickLabels(ticks) {\n      const tickOpts = this.options.ticks;\n      let i, ilen, tick;\n      for (i = 0, ilen = ticks.length; i < ilen; i++) {\n        tick = ticks[i];\n        tick.label = callback(tickOpts.callback, [tick.value, i, ticks], this);\n      }\n    }\n    afterTickToLabelConversion() {\n      callback(this.options.afterTickToLabelConversion, [this]);\n    }\n    beforeCalculateLabelRotation() {\n      callback(this.options.beforeCalculateLabelRotation, [this]);\n    }\n    calculateLabelRotation() {\n      const options = this.options;\n      const tickOpts = options.ticks;\n      const numTicks = this.ticks.length;\n      const minRotation = tickOpts.minRotation || 0;\n      const maxRotation = tickOpts.maxRotation;\n      let labelRotation = minRotation;\n      let tickWidth, maxHeight, maxLabelDiagonal;\n      if (!this._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !this.isHorizontal()) {\n        this.labelRotation = minRotation;\n        return;\n      }\n      const labelSizes = this._getLabelSizes();\n      const maxLabelWidth = labelSizes.widest.width;\n      const maxLabelHeight = labelSizes.highest.height;\n      const maxWidth = _limitValue(this.chart.width - maxLabelWidth, 0, this.maxWidth);\n      tickWidth = options.offset ? this.maxWidth / numTicks : maxWidth / (numTicks - 1);\n      if (maxLabelWidth + 6 > tickWidth) {\n        tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n        maxHeight = this.maxHeight - getTickMarkLength(options.grid) - tickOpts.padding - getTitleHeight(options.title, this.chart.options.font);\n        maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n        labelRotation = toDegrees(Math.min(Math.asin(_limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)), Math.asin(_limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(_limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))));\n        labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n      }\n      this.labelRotation = labelRotation;\n    }\n    afterCalculateLabelRotation() {\n      callback(this.options.afterCalculateLabelRotation, [this]);\n    }\n    beforeFit() {\n      callback(this.options.beforeFit, [this]);\n    }\n    fit() {\n      const minSize = {\n        width: 0,\n        height: 0\n      };\n      const {\n        chart,\n        options: {\n          ticks: tickOpts,\n          title: titleOpts,\n          grid: gridOpts\n        }\n      } = this;\n      const display = this._isVisible();\n      const isHorizontal = this.isHorizontal();\n      if (display) {\n        const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n        if (isHorizontal) {\n          minSize.width = this.maxWidth;\n          minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n        } else {\n          minSize.height = this.maxHeight;\n          minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n        }\n        if (tickOpts.display && this.ticks.length) {\n          const {\n            first,\n            last,\n            widest,\n            highest\n          } = this._getLabelSizes();\n          const tickPadding = tickOpts.padding * 2;\n          const angleRadians = toRadians(this.labelRotation);\n          const cos = Math.cos(angleRadians);\n          const sin = Math.sin(angleRadians);\n          if (isHorizontal) {\n            const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n            minSize.height = Math.min(this.maxHeight, minSize.height + labelHeight + tickPadding);\n          } else {\n            const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n            minSize.width = Math.min(this.maxWidth, minSize.width + labelWidth + tickPadding);\n          }\n          this._calculatePadding(first, last, sin, cos);\n        }\n      }\n      this._handleMargins();\n      if (isHorizontal) {\n        this.width = this._length = chart.width - this._margins.left - this._margins.right;\n        this.height = minSize.height;\n      } else {\n        this.width = minSize.width;\n        this.height = this._length = chart.height - this._margins.top - this._margins.bottom;\n      }\n    }\n    _calculatePadding(first, last, sin, cos) {\n      const {\n        ticks: {\n          align,\n          padding\n        },\n        position\n      } = this.options;\n      const isRotated = this.labelRotation !== 0;\n      const labelsBelowTicks = position !== 'top' && this.axis === 'x';\n      if (this.isHorizontal()) {\n        const offsetLeft = this.getPixelForTick(0) - this.left;\n        const offsetRight = this.right - this.getPixelForTick(this.ticks.length - 1);\n        let paddingLeft = 0;\n        let paddingRight = 0;\n        if (isRotated) {\n          if (labelsBelowTicks) {\n            paddingLeft = cos * first.width;\n            paddingRight = sin * last.height;\n          } else {\n            paddingLeft = sin * first.height;\n            paddingRight = cos * last.width;\n          }\n        } else if (align === 'start') {\n          paddingRight = last.width;\n        } else if (align === 'end') {\n          paddingLeft = first.width;\n        } else {\n          paddingLeft = first.width / 2;\n          paddingRight = last.width / 2;\n        }\n        this.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * this.width / (this.width - offsetLeft), 0);\n        this.paddingRight = Math.max((paddingRight - offsetRight + padding) * this.width / (this.width - offsetRight), 0);\n      } else {\n        let paddingTop = last.height / 2;\n        let paddingBottom = first.height / 2;\n        if (align === 'start') {\n          paddingTop = 0;\n          paddingBottom = first.height;\n        } else if (align === 'end') {\n          paddingTop = last.height;\n          paddingBottom = 0;\n        }\n        this.paddingTop = paddingTop + padding;\n        this.paddingBottom = paddingBottom + padding;\n      }\n    }\n    _handleMargins() {\n      if (this._margins) {\n        this._margins.left = Math.max(this.paddingLeft, this._margins.left);\n        this._margins.top = Math.max(this.paddingTop, this._margins.top);\n        this._margins.right = Math.max(this.paddingRight, this._margins.right);\n        this._margins.bottom = Math.max(this.paddingBottom, this._margins.bottom);\n      }\n    }\n    afterFit() {\n      callback(this.options.afterFit, [this]);\n    }\n    isHorizontal() {\n      const {\n        axis,\n        position\n      } = this.options;\n      return position === 'top' || position === 'bottom' || axis === 'x';\n    }\n    isFullSize() {\n      return this.options.fullSize;\n    }\n    _convertTicksToLabels(ticks) {\n      this.beforeTickToLabelConversion();\n      this.generateTickLabels(ticks);\n      let i, ilen;\n      for (i = 0, ilen = ticks.length; i < ilen; i++) {\n        if (isNullOrUndef(ticks[i].label)) {\n          ticks.splice(i, 1);\n          ilen--;\n          i--;\n        }\n      }\n      this.afterTickToLabelConversion();\n    }\n    _getLabelSizes() {\n      let labelSizes = this._labelSizes;\n      if (!labelSizes) {\n        const sampleSize = this.options.ticks.sampleSize;\n        let ticks = this.ticks;\n        if (sampleSize < ticks.length) {\n          ticks = sample(ticks, sampleSize);\n        }\n        this._labelSizes = labelSizes = this._computeLabelSizes(ticks, ticks.length);\n      }\n      return labelSizes;\n    }\n    _computeLabelSizes(ticks, length) {\n      const {\n        ctx,\n        _longestTextCache: caches\n      } = this;\n      const widths = [];\n      const heights = [];\n      let widestLabelSize = 0;\n      let highestLabelSize = 0;\n      let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n      for (i = 0; i < length; ++i) {\n        label = ticks[i].label;\n        tickFont = this._resolveTickFontOptions(i);\n        ctx.font = fontString = tickFont.string;\n        cache = caches[fontString] = caches[fontString] || {\n          data: {},\n          gc: []\n        };\n        lineHeight = tickFont.lineHeight;\n        width = height = 0;\n        if (!isNullOrUndef(label) && !isArray(label)) {\n          width = _measureText(ctx, cache.data, cache.gc, width, label);\n          height = lineHeight;\n        } else if (isArray(label)) {\n          for (j = 0, jlen = label.length; j < jlen; ++j) {\n            nestedLabel = label[j];\n            if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n              width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n              height += lineHeight;\n            }\n          }\n        }\n        widths.push(width);\n        heights.push(height);\n        widestLabelSize = Math.max(width, widestLabelSize);\n        highestLabelSize = Math.max(height, highestLabelSize);\n      }\n      garbageCollect(caches, length);\n      const widest = widths.indexOf(widestLabelSize);\n      const highest = heights.indexOf(highestLabelSize);\n      const valueAt = idx => ({\n        width: widths[idx] || 0,\n        height: heights[idx] || 0\n      });\n      return {\n        first: valueAt(0),\n        last: valueAt(length - 1),\n        widest: valueAt(widest),\n        highest: valueAt(highest),\n        widths,\n        heights\n      };\n    }\n    getLabelForValue(value) {\n      return value;\n    }\n    getPixelForValue(value, index) {\n      return NaN;\n    }\n    getValueForPixel(pixel) {}\n    getPixelForTick(index) {\n      const ticks = this.ticks;\n      if (index < 0 || index > ticks.length - 1) {\n        return null;\n      }\n      return this.getPixelForValue(ticks[index].value);\n    }\n    getPixelForDecimal(decimal) {\n      if (this._reversePixels) {\n        decimal = 1 - decimal;\n      }\n      const pixel = this._startPixel + decimal * this._length;\n      return _int16Range(this._alignToPixels ? _alignPixel(this.chart, pixel, 0) : pixel);\n    }\n    getDecimalForPixel(pixel) {\n      const decimal = (pixel - this._startPixel) / this._length;\n      return this._reversePixels ? 1 - decimal : decimal;\n    }\n    getBasePixel() {\n      return this.getPixelForValue(this.getBaseValue());\n    }\n    getBaseValue() {\n      const {\n        min,\n        max\n      } = this;\n      return min < 0 && max < 0 ? max : min > 0 && max > 0 ? min : 0;\n    }\n    getContext(index) {\n      const ticks = this.ticks || [];\n      if (index >= 0 && index < ticks.length) {\n        const tick = ticks[index];\n        return tick.$context || (tick.$context = createTickContext(this.getContext(), index, tick));\n      }\n      return this.$context || (this.$context = createScaleContext(this.chart.getContext(), this));\n    }\n    _tickSize() {\n      const optionTicks = this.options.ticks;\n      const rot = toRadians(this.labelRotation);\n      const cos = Math.abs(Math.cos(rot));\n      const sin = Math.abs(Math.sin(rot));\n      const labelSizes = this._getLabelSizes();\n      const padding = optionTicks.autoSkipPadding || 0;\n      const w = labelSizes ? labelSizes.widest.width + padding : 0;\n      const h = labelSizes ? labelSizes.highest.height + padding : 0;\n      return this.isHorizontal() ? h * cos > w * sin ? w / cos : h / sin : h * sin < w * cos ? h / cos : w / sin;\n    }\n    _isVisible() {\n      const display = this.options.display;\n      if (display !== 'auto') {\n        return !!display;\n      }\n      return this.getMatchingVisibleMetas().length > 0;\n    }\n    _computeGridLineItems(chartArea) {\n      const axis = this.axis;\n      const chart = this.chart;\n      const options = this.options;\n      const {\n        grid,\n        position\n      } = options;\n      const offset = grid.offset;\n      const isHorizontal = this.isHorizontal();\n      const ticks = this.ticks;\n      const ticksLength = ticks.length + (offset ? 1 : 0);\n      const tl = getTickMarkLength(grid);\n      const items = [];\n      const borderOpts = grid.setContext(this.getContext());\n      const axisWidth = borderOpts.drawBorder ? borderOpts.borderWidth : 0;\n      const axisHalfWidth = axisWidth / 2;\n      const alignBorderValue = function (pixel) {\n        return _alignPixel(chart, pixel, axisWidth);\n      };\n      let borderValue, i, lineValue, alignedLineValue;\n      let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n      if (position === 'top') {\n        borderValue = alignBorderValue(this.bottom);\n        ty1 = this.bottom - tl;\n        ty2 = borderValue - axisHalfWidth;\n        y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n        y2 = chartArea.bottom;\n      } else if (position === 'bottom') {\n        borderValue = alignBorderValue(this.top);\n        y1 = chartArea.top;\n        y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n        ty1 = borderValue + axisHalfWidth;\n        ty2 = this.top + tl;\n      } else if (position === 'left') {\n        borderValue = alignBorderValue(this.right);\n        tx1 = this.right - tl;\n        tx2 = borderValue - axisHalfWidth;\n        x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n        x2 = chartArea.right;\n      } else if (position === 'right') {\n        borderValue = alignBorderValue(this.left);\n        x1 = chartArea.left;\n        x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n        tx1 = borderValue + axisHalfWidth;\n        tx2 = this.left + tl;\n      } else if (axis === 'x') {\n        if (position === 'center') {\n          borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n        } else if (isObject(position)) {\n          const positionAxisID = Object.keys(position)[0];\n          const value = position[positionAxisID];\n          borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n        }\n        y1 = chartArea.top;\n        y2 = chartArea.bottom;\n        ty1 = borderValue + axisHalfWidth;\n        ty2 = ty1 + tl;\n      } else if (axis === 'y') {\n        if (position === 'center') {\n          borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n        } else if (isObject(position)) {\n          const positionAxisID = Object.keys(position)[0];\n          const value = position[positionAxisID];\n          borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n        }\n        tx1 = borderValue - axisHalfWidth;\n        tx2 = tx1 - tl;\n        x1 = chartArea.left;\n        x2 = chartArea.right;\n      }\n      const limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n      const step = Math.max(1, Math.ceil(ticksLength / limit));\n      for (i = 0; i < ticksLength; i += step) {\n        const optsAtIndex = grid.setContext(this.getContext(i));\n        const lineWidth = optsAtIndex.lineWidth;\n        const lineColor = optsAtIndex.color;\n        const borderDash = grid.borderDash || [];\n        const borderDashOffset = optsAtIndex.borderDashOffset;\n        const tickWidth = optsAtIndex.tickWidth;\n        const tickColor = optsAtIndex.tickColor;\n        const tickBorderDash = optsAtIndex.tickBorderDash || [];\n        const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n        lineValue = getPixelForGridLine(this, i, offset);\n        if (lineValue === undefined) {\n          continue;\n        }\n        alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n        if (isHorizontal) {\n          tx1 = tx2 = x1 = x2 = alignedLineValue;\n        } else {\n          ty1 = ty2 = y1 = y2 = alignedLineValue;\n        }\n        items.push({\n          tx1,\n          ty1,\n          tx2,\n          ty2,\n          x1,\n          y1,\n          x2,\n          y2,\n          width: lineWidth,\n          color: lineColor,\n          borderDash,\n          borderDashOffset,\n          tickWidth,\n          tickColor,\n          tickBorderDash,\n          tickBorderDashOffset\n        });\n      }\n      this._ticksLength = ticksLength;\n      this._borderValue = borderValue;\n      return items;\n    }\n    _computeLabelItems(chartArea) {\n      const axis = this.axis;\n      const options = this.options;\n      const {\n        position,\n        ticks: optionTicks\n      } = options;\n      const isHorizontal = this.isHorizontal();\n      const ticks = this.ticks;\n      const {\n        align,\n        crossAlign,\n        padding,\n        mirror\n      } = optionTicks;\n      const tl = getTickMarkLength(options.grid);\n      const tickAndPadding = tl + padding;\n      const hTickAndPadding = mirror ? -padding : tickAndPadding;\n      const rotation = -toRadians(this.labelRotation);\n      const items = [];\n      let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n      let textBaseline = 'middle';\n      if (position === 'top') {\n        y = this.bottom - hTickAndPadding;\n        textAlign = this._getXAxisLabelAlignment();\n      } else if (position === 'bottom') {\n        y = this.top + hTickAndPadding;\n        textAlign = this._getXAxisLabelAlignment();\n      } else if (position === 'left') {\n        const ret = this._getYAxisLabelAlignment(tl);\n        textAlign = ret.textAlign;\n        x = ret.x;\n      } else if (position === 'right') {\n        const ret = this._getYAxisLabelAlignment(tl);\n        textAlign = ret.textAlign;\n        x = ret.x;\n      } else if (axis === 'x') {\n        if (position === 'center') {\n          y = (chartArea.top + chartArea.bottom) / 2 + tickAndPadding;\n        } else if (isObject(position)) {\n          const positionAxisID = Object.keys(position)[0];\n          const value = position[positionAxisID];\n          y = this.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n        }\n        textAlign = this._getXAxisLabelAlignment();\n      } else if (axis === 'y') {\n        if (position === 'center') {\n          x = (chartArea.left + chartArea.right) / 2 - tickAndPadding;\n        } else if (isObject(position)) {\n          const positionAxisID = Object.keys(position)[0];\n          const value = position[positionAxisID];\n          x = this.chart.scales[positionAxisID].getPixelForValue(value);\n        }\n        textAlign = this._getYAxisLabelAlignment(tl).textAlign;\n      }\n      if (axis === 'y') {\n        if (align === 'start') {\n          textBaseline = 'top';\n        } else if (align === 'end') {\n          textBaseline = 'bottom';\n        }\n      }\n      const labelSizes = this._getLabelSizes();\n      for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n        tick = ticks[i];\n        label = tick.label;\n        const optsAtIndex = optionTicks.setContext(this.getContext(i));\n        pixel = this.getPixelForTick(i) + optionTicks.labelOffset;\n        font = this._resolveTickFontOptions(i);\n        lineHeight = font.lineHeight;\n        lineCount = isArray(label) ? label.length : 1;\n        const halfCount = lineCount / 2;\n        const color = optsAtIndex.color;\n        const strokeColor = optsAtIndex.textStrokeColor;\n        const strokeWidth = optsAtIndex.textStrokeWidth;\n        if (isHorizontal) {\n          x = pixel;\n          if (position === 'top') {\n            if (crossAlign === 'near' || rotation !== 0) {\n              textOffset = -lineCount * lineHeight + lineHeight / 2;\n            } else if (crossAlign === 'center') {\n              textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n            } else {\n              textOffset = -labelSizes.highest.height + lineHeight / 2;\n            }\n          } else {\n            if (crossAlign === 'near' || rotation !== 0) {\n              textOffset = lineHeight / 2;\n            } else if (crossAlign === 'center') {\n              textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n            } else {\n              textOffset = labelSizes.highest.height - lineCount * lineHeight;\n            }\n          }\n          if (mirror) {\n            textOffset *= -1;\n          }\n        } else {\n          y = pixel;\n          textOffset = (1 - lineCount) * lineHeight / 2;\n        }\n        let backdrop;\n        if (optsAtIndex.showLabelBackdrop) {\n          const labelPadding = toPadding(optsAtIndex.backdropPadding);\n          const height = labelSizes.heights[i];\n          const width = labelSizes.widths[i];\n          let top = y + textOffset - labelPadding.top;\n          let left = x - labelPadding.left;\n          switch (textBaseline) {\n            case 'middle':\n              top -= height / 2;\n              break;\n            case 'bottom':\n              top -= height;\n              break;\n          }\n          switch (textAlign) {\n            case 'center':\n              left -= width / 2;\n              break;\n            case 'right':\n              left -= width;\n              break;\n          }\n          backdrop = {\n            left,\n            top,\n            width: width + labelPadding.width,\n            height: height + labelPadding.height,\n            color: optsAtIndex.backdropColor\n          };\n        }\n        items.push({\n          rotation,\n          label,\n          font,\n          color,\n          strokeColor,\n          strokeWidth,\n          textOffset,\n          textAlign,\n          textBaseline,\n          translation: [x, y],\n          backdrop\n        });\n      }\n      return items;\n    }\n    _getXAxisLabelAlignment() {\n      const {\n        position,\n        ticks\n      } = this.options;\n      const rotation = -toRadians(this.labelRotation);\n      if (rotation) {\n        return position === 'top' ? 'left' : 'right';\n      }\n      let align = 'center';\n      if (ticks.align === 'start') {\n        align = 'left';\n      } else if (ticks.align === 'end') {\n        align = 'right';\n      }\n      return align;\n    }\n    _getYAxisLabelAlignment(tl) {\n      const {\n        position,\n        ticks: {\n          crossAlign,\n          mirror,\n          padding\n        }\n      } = this.options;\n      const labelSizes = this._getLabelSizes();\n      const tickAndPadding = tl + padding;\n      const widest = labelSizes.widest.width;\n      let textAlign;\n      let x;\n      if (position === 'left') {\n        if (mirror) {\n          x = this.right + padding;\n          if (crossAlign === 'near') {\n            textAlign = 'left';\n          } else if (crossAlign === 'center') {\n            textAlign = 'center';\n            x += widest / 2;\n          } else {\n            textAlign = 'right';\n            x += widest;\n          }\n        } else {\n          x = this.right - tickAndPadding;\n          if (crossAlign === 'near') {\n            textAlign = 'right';\n          } else if (crossAlign === 'center') {\n            textAlign = 'center';\n            x -= widest / 2;\n          } else {\n            textAlign = 'left';\n            x = this.left;\n          }\n        }\n      } else if (position === 'right') {\n        if (mirror) {\n          x = this.left + padding;\n          if (crossAlign === 'near') {\n            textAlign = 'right';\n          } else if (crossAlign === 'center') {\n            textAlign = 'center';\n            x -= widest / 2;\n          } else {\n            textAlign = 'left';\n            x -= widest;\n          }\n        } else {\n          x = this.left + tickAndPadding;\n          if (crossAlign === 'near') {\n            textAlign = 'left';\n          } else if (crossAlign === 'center') {\n            textAlign = 'center';\n            x += widest / 2;\n          } else {\n            textAlign = 'right';\n            x = this.right;\n          }\n        }\n      } else {\n        textAlign = 'right';\n      }\n      return {\n        textAlign,\n        x\n      };\n    }\n    _computeLabelArea() {\n      if (this.options.ticks.mirror) {\n        return;\n      }\n      const chart = this.chart;\n      const position = this.options.position;\n      if (position === 'left' || position === 'right') {\n        return {\n          top: 0,\n          left: this.left,\n          bottom: chart.height,\n          right: this.right\n        };\n      }\n      if (position === 'top' || position === 'bottom') {\n        return {\n          top: this.top,\n          left: 0,\n          bottom: this.bottom,\n          right: chart.width\n        };\n      }\n    }\n    drawBackground() {\n      const {\n        ctx,\n        options: {\n          backgroundColor\n        },\n        left,\n        top,\n        width,\n        height\n      } = this;\n      if (backgroundColor) {\n        ctx.save();\n        ctx.fillStyle = backgroundColor;\n        ctx.fillRect(left, top, width, height);\n        ctx.restore();\n      }\n    }\n    getLineWidthForValue(value) {\n      const grid = this.options.grid;\n      if (!this._isVisible() || !grid.display) {\n        return 0;\n      }\n      const ticks = this.ticks;\n      const index = ticks.findIndex(t => t.value === value);\n      if (index >= 0) {\n        const opts = grid.setContext(this.getContext(index));\n        return opts.lineWidth;\n      }\n      return 0;\n    }\n    drawGrid(chartArea) {\n      const grid = this.options.grid;\n      const ctx = this.ctx;\n      const items = this._gridLineItems || (this._gridLineItems = this._computeGridLineItems(chartArea));\n      let i, ilen;\n      const drawLine = (p1, p2, style) => {\n        if (!style.width || !style.color) {\n          return;\n        }\n        ctx.save();\n        ctx.lineWidth = style.width;\n        ctx.strokeStyle = style.color;\n        ctx.setLineDash(style.borderDash || []);\n        ctx.lineDashOffset = style.borderDashOffset;\n        ctx.beginPath();\n        ctx.moveTo(p1.x, p1.y);\n        ctx.lineTo(p2.x, p2.y);\n        ctx.stroke();\n        ctx.restore();\n      };\n      if (grid.display) {\n        for (i = 0, ilen = items.length; i < ilen; ++i) {\n          const item = items[i];\n          if (grid.drawOnChartArea) {\n            drawLine({\n              x: item.x1,\n              y: item.y1\n            }, {\n              x: item.x2,\n              y: item.y2\n            }, item);\n          }\n          if (grid.drawTicks) {\n            drawLine({\n              x: item.tx1,\n              y: item.ty1\n            }, {\n              x: item.tx2,\n              y: item.ty2\n            }, {\n              color: item.tickColor,\n              width: item.tickWidth,\n              borderDash: item.tickBorderDash,\n              borderDashOffset: item.tickBorderDashOffset\n            });\n          }\n        }\n      }\n    }\n    drawBorder() {\n      const {\n        chart,\n        ctx,\n        options: {\n          grid\n        }\n      } = this;\n      const borderOpts = grid.setContext(this.getContext());\n      const axisWidth = grid.drawBorder ? borderOpts.borderWidth : 0;\n      if (!axisWidth) {\n        return;\n      }\n      const lastLineWidth = grid.setContext(this.getContext(0)).lineWidth;\n      const borderValue = this._borderValue;\n      let x1, x2, y1, y2;\n      if (this.isHorizontal()) {\n        x1 = _alignPixel(chart, this.left, axisWidth) - axisWidth / 2;\n        x2 = _alignPixel(chart, this.right, lastLineWidth) + lastLineWidth / 2;\n        y1 = y2 = borderValue;\n      } else {\n        y1 = _alignPixel(chart, this.top, axisWidth) - axisWidth / 2;\n        y2 = _alignPixel(chart, this.bottom, lastLineWidth) + lastLineWidth / 2;\n        x1 = x2 = borderValue;\n      }\n      ctx.save();\n      ctx.lineWidth = borderOpts.borderWidth;\n      ctx.strokeStyle = borderOpts.borderColor;\n      ctx.beginPath();\n      ctx.moveTo(x1, y1);\n      ctx.lineTo(x2, y2);\n      ctx.stroke();\n      ctx.restore();\n    }\n    drawLabels(chartArea) {\n      const optionTicks = this.options.ticks;\n      if (!optionTicks.display) {\n        return;\n      }\n      const ctx = this.ctx;\n      const area = this._computeLabelArea();\n      if (area) {\n        clipArea(ctx, area);\n      }\n      const items = this._labelItems || (this._labelItems = this._computeLabelItems(chartArea));\n      let i, ilen;\n      for (i = 0, ilen = items.length; i < ilen; ++i) {\n        const item = items[i];\n        const tickFont = item.font;\n        const label = item.label;\n        if (item.backdrop) {\n          ctx.fillStyle = item.backdrop.color;\n          ctx.fillRect(item.backdrop.left, item.backdrop.top, item.backdrop.width, item.backdrop.height);\n        }\n        let y = item.textOffset;\n        renderText(ctx, label, 0, y, tickFont, item);\n      }\n      if (area) {\n        unclipArea(ctx);\n      }\n    }\n    drawTitle() {\n      const {\n        ctx,\n        options: {\n          position,\n          title,\n          reverse\n        }\n      } = this;\n      if (!title.display) {\n        return;\n      }\n      const font = toFont(title.font);\n      const padding = toPadding(title.padding);\n      const align = title.align;\n      let offset = font.lineHeight / 2;\n      if (position === 'bottom' || position === 'center' || isObject(position)) {\n        offset += padding.bottom;\n        if (isArray(title.text)) {\n          offset += font.lineHeight * (title.text.length - 1);\n        }\n      } else {\n        offset += padding.top;\n      }\n      const {\n        titleX,\n        titleY,\n        maxWidth,\n        rotation\n      } = titleArgs(this, offset, position, align);\n      renderText(ctx, title.text, 0, 0, font, {\n        color: title.color,\n        maxWidth,\n        rotation,\n        textAlign: titleAlign(align, position, reverse),\n        textBaseline: 'middle',\n        translation: [titleX, titleY]\n      });\n    }\n    draw(chartArea) {\n      if (!this._isVisible()) {\n        return;\n      }\n      this.drawBackground();\n      this.drawGrid(chartArea);\n      this.drawBorder();\n      this.drawTitle();\n      this.drawLabels(chartArea);\n    }\n    _layers() {\n      const opts = this.options;\n      const tz = opts.ticks && opts.ticks.z || 0;\n      const gz = valueOrDefault(opts.grid && opts.grid.z, -1);\n      if (!this._isVisible() || this.draw !== Scale.prototype.draw) {\n        return [{\n          z: tz,\n          draw: chartArea => {\n            this.draw(chartArea);\n          }\n        }];\n      }\n      return [{\n        z: gz,\n        draw: chartArea => {\n          this.drawBackground();\n          this.drawGrid(chartArea);\n          this.drawTitle();\n        }\n      }, {\n        z: gz + 1,\n        draw: () => {\n          this.drawBorder();\n        }\n      }, {\n        z: tz,\n        draw: chartArea => {\n          this.drawLabels(chartArea);\n        }\n      }];\n    }\n    getMatchingVisibleMetas(type) {\n      const metas = this.chart.getSortedVisibleDatasetMetas();\n      const axisID = this.axis + 'AxisID';\n      const result = [];\n      let i, ilen;\n      for (i = 0, ilen = metas.length; i < ilen; ++i) {\n        const meta = metas[i];\n        if (meta[axisID] === this.id && (!type || meta.type === type)) {\n          result.push(meta);\n        }\n      }\n      return result;\n    }\n    _resolveTickFontOptions(index) {\n      const opts = this.options.ticks.setContext(this.getContext(index));\n      return toFont(opts.font);\n    }\n    _maxDigits() {\n      const fontSize = this._resolveTickFontOptions(0).lineHeight;\n      return (this.isHorizontal() ? this.width : this.height) / fontSize;\n    }\n  }\n  class TypedRegistry {\n    constructor(type, scope, override) {\n      this.type = type;\n      this.scope = scope;\n      this.override = override;\n      this.items = Object.create(null);\n    }\n    isForType(type) {\n      return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n    }\n    register(item) {\n      const proto = Object.getPrototypeOf(item);\n      let parentScope;\n      if (isIChartComponent(proto)) {\n        parentScope = this.register(proto);\n      }\n      const items = this.items;\n      const id = item.id;\n      const scope = this.scope + '.' + id;\n      if (!id) {\n        throw new Error('class does not have id: ' + item);\n      }\n      if (id in items) {\n        return scope;\n      }\n      items[id] = item;\n      registerDefaults(item, scope, parentScope);\n      if (this.override) {\n        defaults.override(item.id, item.overrides);\n      }\n      return scope;\n    }\n    get(id) {\n      return this.items[id];\n    }\n    unregister(item) {\n      const items = this.items;\n      const id = item.id;\n      const scope = this.scope;\n      if (id in items) {\n        delete items[id];\n      }\n      if (scope && id in defaults[scope]) {\n        delete defaults[scope][id];\n        if (this.override) {\n          delete overrides[id];\n        }\n      }\n    }\n  }\n  function registerDefaults(item, scope, parentScope) {\n    const itemDefaults = merge(Object.create(null), [parentScope ? defaults.get(parentScope) : {}, defaults.get(scope), item.defaults]);\n    defaults.set(scope, itemDefaults);\n    if (item.defaultRoutes) {\n      routeDefaults(scope, item.defaultRoutes);\n    }\n    if (item.descriptors) {\n      defaults.describe(scope, item.descriptors);\n    }\n  }\n  function routeDefaults(scope, routes) {\n    Object.keys(routes).forEach(property => {\n      const propertyParts = property.split('.');\n      const sourceName = propertyParts.pop();\n      const sourceScope = [scope].concat(propertyParts).join('.');\n      const parts = routes[property].split('.');\n      const targetName = parts.pop();\n      const targetScope = parts.join('.');\n      defaults.route(sourceScope, sourceName, targetScope, targetName);\n    });\n  }\n  function isIChartComponent(proto) {\n    return 'id' in proto && 'defaults' in proto;\n  }\n  class Registry {\n    constructor() {\n      this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n      this.elements = new TypedRegistry(Element, 'elements');\n      this.plugins = new TypedRegistry(Object, 'plugins');\n      this.scales = new TypedRegistry(Scale, 'scales');\n      this._typedRegistries = [this.controllers, this.scales, this.elements];\n    }\n    add(...args) {\n      this._each('register', args);\n    }\n    remove(...args) {\n      this._each('unregister', args);\n    }\n    addControllers(...args) {\n      this._each('register', args, this.controllers);\n    }\n    addElements(...args) {\n      this._each('register', args, this.elements);\n    }\n    addPlugins(...args) {\n      this._each('register', args, this.plugins);\n    }\n    addScales(...args) {\n      this._each('register', args, this.scales);\n    }\n    getController(id) {\n      return this._get(id, this.controllers, 'controller');\n    }\n    getElement(id) {\n      return this._get(id, this.elements, 'element');\n    }\n    getPlugin(id) {\n      return this._get(id, this.plugins, 'plugin');\n    }\n    getScale(id) {\n      return this._get(id, this.scales, 'scale');\n    }\n    removeControllers(...args) {\n      this._each('unregister', args, this.controllers);\n    }\n    removeElements(...args) {\n      this._each('unregister', args, this.elements);\n    }\n    removePlugins(...args) {\n      this._each('unregister', args, this.plugins);\n    }\n    removeScales(...args) {\n      this._each('unregister', args, this.scales);\n    }\n    _each(method, args, typedRegistry) {\n      [...args].forEach(arg => {\n        const reg = typedRegistry || this._getRegistryForType(arg);\n        if (typedRegistry || reg.isForType(arg) || reg === this.plugins && arg.id) {\n          this._exec(method, reg, arg);\n        } else {\n          each(arg, item => {\n            const itemReg = typedRegistry || this._getRegistryForType(item);\n            this._exec(method, itemReg, item);\n          });\n        }\n      });\n    }\n    _exec(method, registry, component) {\n      const camelMethod = _capitalize(method);\n      callback(component['before' + camelMethod], [], component);\n      registry[method](component);\n      callback(component['after' + camelMethod], [], component);\n    }\n    _getRegistryForType(type) {\n      for (let i = 0; i < this._typedRegistries.length; i++) {\n        const reg = this._typedRegistries[i];\n        if (reg.isForType(type)) {\n          return reg;\n        }\n      }\n      return this.plugins;\n    }\n    _get(id, typedRegistry, type) {\n      const item = typedRegistry.get(id);\n      if (item === undefined) {\n        throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n      }\n      return item;\n    }\n  }\n  var registry = new Registry();\n  class PluginService {\n    constructor() {\n      this._init = [];\n    }\n    notify(chart, hook, args, filter) {\n      if (hook === 'beforeInit') {\n        this._init = this._createDescriptors(chart, true);\n        this._notify(this._init, chart, 'install');\n      }\n      const descriptors = filter ? this._descriptors(chart).filter(filter) : this._descriptors(chart);\n      const result = this._notify(descriptors, chart, hook, args);\n      if (hook === 'afterDestroy') {\n        this._notify(descriptors, chart, 'stop');\n        this._notify(this._init, chart, 'uninstall');\n      }\n      return result;\n    }\n    _notify(descriptors, chart, hook, args) {\n      args = args || {};\n      for (const descriptor of descriptors) {\n        const plugin = descriptor.plugin;\n        const method = plugin[hook];\n        const params = [chart, args, descriptor.options];\n        if (callback(method, params, plugin) === false && args.cancelable) {\n          return false;\n        }\n      }\n      return true;\n    }\n    invalidate() {\n      if (!isNullOrUndef(this._cache)) {\n        this._oldCache = this._cache;\n        this._cache = undefined;\n      }\n    }\n    _descriptors(chart) {\n      if (this._cache) {\n        return this._cache;\n      }\n      const descriptors = this._cache = this._createDescriptors(chart);\n      this._notifyStateChanges(chart);\n      return descriptors;\n    }\n    _createDescriptors(chart, all) {\n      const config = chart && chart.config;\n      const options = valueOrDefault(config.options && config.options.plugins, {});\n      const plugins = allPlugins(config);\n      return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n    }\n    _notifyStateChanges(chart) {\n      const previousDescriptors = this._oldCache || [];\n      const descriptors = this._cache;\n      const diff = (a, b) => a.filter(x => !b.some(y => x.plugin.id === y.plugin.id));\n      this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n      this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n    }\n  }\n  function allPlugins(config) {\n    const plugins = [];\n    const keys = Object.keys(registry.plugins.items);\n    for (let i = 0; i < keys.length; i++) {\n      plugins.push(registry.getPlugin(keys[i]));\n    }\n    const local = config.plugins || [];\n    for (let i = 0; i < local.length; i++) {\n      const plugin = local[i];\n      if (plugins.indexOf(plugin) === -1) {\n        plugins.push(plugin);\n      }\n    }\n    return plugins;\n  }\n  function getOpts(options, all) {\n    if (!all && options === false) {\n      return null;\n    }\n    if (options === true) {\n      return {};\n    }\n    return options;\n  }\n  function createDescriptors(chart, plugins, options, all) {\n    const result = [];\n    const context = chart.getContext();\n    for (let i = 0; i < plugins.length; i++) {\n      const plugin = plugins[i];\n      const id = plugin.id;\n      const opts = getOpts(options[id], all);\n      if (opts === null) {\n        continue;\n      }\n      result.push({\n        plugin,\n        options: pluginOpts(chart.config, plugin, opts, context)\n      });\n    }\n    return result;\n  }\n  function pluginOpts(config, plugin, opts, context) {\n    const keys = config.pluginScopeKeys(plugin);\n    const scopes = config.getOptionScopes(opts, keys);\n    return config.createResolver(scopes, context, [''], {\n      scriptable: false,\n      indexable: false,\n      allKeys: true\n    });\n  }\n  function getIndexAxis(type, options) {\n    const datasetDefaults = defaults.datasets[type] || {};\n    const datasetOptions = (options.datasets || {})[type] || {};\n    return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n  }\n  function getAxisFromDefaultScaleID(id, indexAxis) {\n    let axis = id;\n    if (id === '_index_') {\n      axis = indexAxis;\n    } else if (id === '_value_') {\n      axis = indexAxis === 'x' ? 'y' : 'x';\n    }\n    return axis;\n  }\n  function getDefaultScaleIDFromAxis(axis, indexAxis) {\n    return axis === indexAxis ? '_index_' : '_value_';\n  }\n  function axisFromPosition(position) {\n    if (position === 'top' || position === 'bottom') {\n      return 'x';\n    }\n    if (position === 'left' || position === 'right') {\n      return 'y';\n    }\n  }\n  function determineAxis(id, scaleOptions) {\n    if (id === 'x' || id === 'y') {\n      return id;\n    }\n    return scaleOptions.axis || axisFromPosition(scaleOptions.position) || id.charAt(0).toLowerCase();\n  }\n  function mergeScaleConfig(config, options) {\n    const chartDefaults = overrides[config.type] || {\n      scales: {}\n    };\n    const configScales = options.scales || {};\n    const chartIndexAxis = getIndexAxis(config.type, options);\n    const firstIDs = Object.create(null);\n    const scales = Object.create(null);\n    Object.keys(configScales).forEach(id => {\n      const scaleConf = configScales[id];\n      if (!isObject(scaleConf)) {\n        return console.error(`Invalid scale configuration for scale: ${id}`);\n      }\n      if (scaleConf._proxy) {\n        return console.warn(`Ignoring resolver passed as options for scale: ${id}`);\n      }\n      const axis = determineAxis(id, scaleConf);\n      const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n      const defaultScaleOptions = chartDefaults.scales || {};\n      firstIDs[axis] = firstIDs[axis] || id;\n      scales[id] = mergeIf(Object.create(null), [{\n        axis\n      }, scaleConf, defaultScaleOptions[axis], defaultScaleOptions[defaultId]]);\n    });\n    config.data.datasets.forEach(dataset => {\n      const type = dataset.type || config.type;\n      const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n      const datasetDefaults = overrides[type] || {};\n      const defaultScaleOptions = datasetDefaults.scales || {};\n      Object.keys(defaultScaleOptions).forEach(defaultID => {\n        const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n        const id = dataset[axis + 'AxisID'] || firstIDs[axis] || axis;\n        scales[id] = scales[id] || Object.create(null);\n        mergeIf(scales[id], [{\n          axis\n        }, configScales[id], defaultScaleOptions[defaultID]]);\n      });\n    });\n    Object.keys(scales).forEach(key => {\n      const scale = scales[key];\n      mergeIf(scale, [defaults.scales[scale.type], defaults.scale]);\n    });\n    return scales;\n  }\n  function initOptions(config) {\n    const options = config.options || (config.options = {});\n    options.plugins = valueOrDefault(options.plugins, {});\n    options.scales = mergeScaleConfig(config, options);\n  }\n  function initData(data) {\n    data = data || {};\n    data.datasets = data.datasets || [];\n    data.labels = data.labels || [];\n    return data;\n  }\n  function initConfig(config) {\n    config = config || {};\n    config.data = initData(config.data);\n    initOptions(config);\n    return config;\n  }\n  const keyCache = new Map();\n  const keysCached = new Set();\n  function cachedKeys(cacheKey, generate) {\n    let keys = keyCache.get(cacheKey);\n    if (!keys) {\n      keys = generate();\n      keyCache.set(cacheKey, keys);\n      keysCached.add(keys);\n    }\n    return keys;\n  }\n  const addIfFound = (set, obj, key) => {\n    const opts = resolveObjectKey(obj, key);\n    if (opts !== undefined) {\n      set.add(opts);\n    }\n  };\n  class Config {\n    constructor(config) {\n      this._config = initConfig(config);\n      this._scopeCache = new Map();\n      this._resolverCache = new Map();\n    }\n    get platform() {\n      return this._config.platform;\n    }\n    get type() {\n      return this._config.type;\n    }\n    set type(type) {\n      this._config.type = type;\n    }\n    get data() {\n      return this._config.data;\n    }\n    set data(data) {\n      this._config.data = initData(data);\n    }\n    get options() {\n      return this._config.options;\n    }\n    set options(options) {\n      this._config.options = options;\n    }\n    get plugins() {\n      return this._config.plugins;\n    }\n    update() {\n      const config = this._config;\n      this.clearCache();\n      initOptions(config);\n    }\n    clearCache() {\n      this._scopeCache.clear();\n      this._resolverCache.clear();\n    }\n    datasetScopeKeys(datasetType) {\n      return cachedKeys(datasetType, () => [[`datasets.${datasetType}`, '']]);\n    }\n    datasetAnimationScopeKeys(datasetType, transition) {\n      return cachedKeys(`${datasetType}.transition.${transition}`, () => [[`datasets.${datasetType}.transitions.${transition}`, `transitions.${transition}`], [`datasets.${datasetType}`, '']]);\n    }\n    datasetElementScopeKeys(datasetType, elementType) {\n      return cachedKeys(`${datasetType}-${elementType}`, () => [[`datasets.${datasetType}.elements.${elementType}`, `datasets.${datasetType}`, `elements.${elementType}`, '']]);\n    }\n    pluginScopeKeys(plugin) {\n      const id = plugin.id;\n      const type = this.type;\n      return cachedKeys(`${type}-plugin-${id}`, () => [[`plugins.${id}`, ...(plugin.additionalOptionScopes || [])]]);\n    }\n    _cachedScopes(mainScope, resetCache) {\n      const _scopeCache = this._scopeCache;\n      let cache = _scopeCache.get(mainScope);\n      if (!cache || resetCache) {\n        cache = new Map();\n        _scopeCache.set(mainScope, cache);\n      }\n      return cache;\n    }\n    getOptionScopes(mainScope, keyLists, resetCache) {\n      const {\n        options,\n        type\n      } = this;\n      const cache = this._cachedScopes(mainScope, resetCache);\n      const cached = cache.get(keyLists);\n      if (cached) {\n        return cached;\n      }\n      const scopes = new Set();\n      keyLists.forEach(keys => {\n        if (mainScope) {\n          scopes.add(mainScope);\n          keys.forEach(key => addIfFound(scopes, mainScope, key));\n        }\n        keys.forEach(key => addIfFound(scopes, options, key));\n        keys.forEach(key => addIfFound(scopes, overrides[type] || {}, key));\n        keys.forEach(key => addIfFound(scopes, defaults, key));\n        keys.forEach(key => addIfFound(scopes, descriptors, key));\n      });\n      const array = Array.from(scopes);\n      if (array.length === 0) {\n        array.push(Object.create(null));\n      }\n      if (keysCached.has(keyLists)) {\n        cache.set(keyLists, array);\n      }\n      return array;\n    }\n    chartOptionScopes() {\n      const {\n        options,\n        type\n      } = this;\n      return [options, overrides[type] || {}, defaults.datasets[type] || {}, {\n        type\n      }, defaults, descriptors];\n    }\n    resolveNamedOptions(scopes, names, context, prefixes = ['']) {\n      const result = {\n        $shared: true\n      };\n      const {\n        resolver,\n        subPrefixes\n      } = getResolver(this._resolverCache, scopes, prefixes);\n      let options = resolver;\n      if (needContext(resolver, names)) {\n        result.$shared = false;\n        context = isFunction(context) ? context() : context;\n        const subResolver = this.createResolver(scopes, context, subPrefixes);\n        options = _attachContext(resolver, context, subResolver);\n      }\n      for (const prop of names) {\n        result[prop] = options[prop];\n      }\n      return result;\n    }\n    createResolver(scopes, context, prefixes = [''], descriptorDefaults) {\n      const {\n        resolver\n      } = getResolver(this._resolverCache, scopes, prefixes);\n      return isObject(context) ? _attachContext(resolver, context, undefined, descriptorDefaults) : resolver;\n    }\n  }\n  function getResolver(resolverCache, scopes, prefixes) {\n    let cache = resolverCache.get(scopes);\n    if (!cache) {\n      cache = new Map();\n      resolverCache.set(scopes, cache);\n    }\n    const cacheKey = prefixes.join();\n    let cached = cache.get(cacheKey);\n    if (!cached) {\n      const resolver = _createResolver(scopes, prefixes);\n      cached = {\n        resolver,\n        subPrefixes: prefixes.filter(p => !p.toLowerCase().includes('hover'))\n      };\n      cache.set(cacheKey, cached);\n    }\n    return cached;\n  }\n  const hasFunction = value => isObject(value) && Object.getOwnPropertyNames(value).reduce((acc, key) => acc || isFunction(value[key]), false);\n  function needContext(proxy, names) {\n    const {\n      isScriptable,\n      isIndexable\n    } = _descriptors(proxy);\n    for (const prop of names) {\n      const scriptable = isScriptable(prop);\n      const indexable = isIndexable(prop);\n      const value = (indexable || scriptable) && proxy[prop];\n      if (scriptable && (isFunction(value) || hasFunction(value)) || indexable && isArray(value)) {\n        return true;\n      }\n    }\n    return false;\n  }\n  var version = \"3.7.1\";\n  const KNOWN_POSITIONS = ['top', 'bottom', 'left', 'right', 'chartArea'];\n  function positionIsHorizontal(position, axis) {\n    return position === 'top' || position === 'bottom' || KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x';\n  }\n  function compare2Level(l1, l2) {\n    return function (a, b) {\n      return a[l1] === b[l1] ? a[l2] - b[l2] : a[l1] - b[l1];\n    };\n  }\n  function onAnimationsComplete(context) {\n    const chart = context.chart;\n    const animationOptions = chart.options.animation;\n    chart.notifyPlugins('afterRender');\n    callback(animationOptions && animationOptions.onComplete, [context], chart);\n  }\n  function onAnimationProgress(context) {\n    const chart = context.chart;\n    const animationOptions = chart.options.animation;\n    callback(animationOptions && animationOptions.onProgress, [context], chart);\n  }\n  function getCanvas(item) {\n    if (_isDomSupported() && typeof item === 'string') {\n      item = document.getElementById(item);\n    } else if (item && item.length) {\n      item = item[0];\n    }\n    if (item && item.canvas) {\n      item = item.canvas;\n    }\n    return item;\n  }\n  const instances = {};\n  const getChart = key => {\n    const canvas = getCanvas(key);\n    return Object.values(instances).filter(c => c.canvas === canvas).pop();\n  };\n  function moveNumericKeys(obj, start, move) {\n    const keys = Object.keys(obj);\n    for (const key of keys) {\n      const intKey = +key;\n      if (intKey >= start) {\n        const value = obj[key];\n        delete obj[key];\n        if (move > 0 || intKey > start) {\n          obj[intKey + move] = value;\n        }\n      }\n    }\n  }\n  function determineLastEvent(e, lastEvent, inChartArea, isClick) {\n    if (!inChartArea || e.type === 'mouseout') {\n      return null;\n    }\n    if (isClick) {\n      return lastEvent;\n    }\n    return e;\n  }\n  class Chart {\n    constructor(item, userConfig) {\n      const config = this.config = new Config(userConfig);\n      const initialCanvas = getCanvas(item);\n      const existingChart = getChart(initialCanvas);\n      if (existingChart) {\n        throw new Error('Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' + ' must be destroyed before the canvas can be reused.');\n      }\n      const options = config.createResolver(config.chartOptionScopes(), this.getContext());\n      this.platform = new (config.platform || _detectPlatform(initialCanvas))();\n      this.platform.updateConfig(config);\n      const context = this.platform.acquireContext(initialCanvas, options.aspectRatio);\n      const canvas = context && context.canvas;\n      const height = canvas && canvas.height;\n      const width = canvas && canvas.width;\n      this.id = uid();\n      this.ctx = context;\n      this.canvas = canvas;\n      this.width = width;\n      this.height = height;\n      this._options = options;\n      this._aspectRatio = this.aspectRatio;\n      this._layers = [];\n      this._metasets = [];\n      this._stacks = undefined;\n      this.boxes = [];\n      this.currentDevicePixelRatio = undefined;\n      this.chartArea = undefined;\n      this._active = [];\n      this._lastEvent = undefined;\n      this._listeners = {};\n      this._responsiveListeners = undefined;\n      this._sortedMetasets = [];\n      this.scales = {};\n      this._plugins = new PluginService();\n      this.$proxies = {};\n      this._hiddenIndices = {};\n      this.attached = false;\n      this._animationsDisabled = undefined;\n      this.$context = undefined;\n      this._doResize = debounce(mode => this.update(mode), options.resizeDelay || 0);\n      this._dataChanges = [];\n      instances[this.id] = this;\n      if (!context || !canvas) {\n        console.error(\"Failed to create chart: can't acquire context from the given item\");\n        return;\n      }\n      animator.listen(this, 'complete', onAnimationsComplete);\n      animator.listen(this, 'progress', onAnimationProgress);\n      this._initialize();\n      if (this.attached) {\n        this.update();\n      }\n    }\n    get aspectRatio() {\n      const {\n        options: {\n          aspectRatio,\n          maintainAspectRatio\n        },\n        width,\n        height,\n        _aspectRatio\n      } = this;\n      if (!isNullOrUndef(aspectRatio)) {\n        return aspectRatio;\n      }\n      if (maintainAspectRatio && _aspectRatio) {\n        return _aspectRatio;\n      }\n      return height ? width / height : null;\n    }\n    get data() {\n      return this.config.data;\n    }\n    set data(data) {\n      this.config.data = data;\n    }\n    get options() {\n      return this._options;\n    }\n    set options(options) {\n      this.config.options = options;\n    }\n    _initialize() {\n      this.notifyPlugins('beforeInit');\n      if (this.options.responsive) {\n        this.resize();\n      } else {\n        retinaScale(this, this.options.devicePixelRatio);\n      }\n      this.bindEvents();\n      this.notifyPlugins('afterInit');\n      return this;\n    }\n    clear() {\n      clearCanvas(this.canvas, this.ctx);\n      return this;\n    }\n    stop() {\n      animator.stop(this);\n      return this;\n    }\n    resize(width, height) {\n      if (!animator.running(this)) {\n        this._resize(width, height);\n      } else {\n        this._resizeBeforeDraw = {\n          width,\n          height\n        };\n      }\n    }\n    _resize(width, height) {\n      const options = this.options;\n      const canvas = this.canvas;\n      const aspectRatio = options.maintainAspectRatio && this.aspectRatio;\n      const newSize = this.platform.getMaximumSize(canvas, width, height, aspectRatio);\n      const newRatio = options.devicePixelRatio || this.platform.getDevicePixelRatio();\n      const mode = this.width ? 'resize' : 'attach';\n      this.width = newSize.width;\n      this.height = newSize.height;\n      this._aspectRatio = this.aspectRatio;\n      if (!retinaScale(this, newRatio, true)) {\n        return;\n      }\n      this.notifyPlugins('resize', {\n        size: newSize\n      });\n      callback(options.onResize, [this, newSize], this);\n      if (this.attached) {\n        if (this._doResize(mode)) {\n          this.render();\n        }\n      }\n    }\n    ensureScalesHaveIDs() {\n      const options = this.options;\n      const scalesOptions = options.scales || {};\n      each(scalesOptions, (axisOptions, axisID) => {\n        axisOptions.id = axisID;\n      });\n    }\n    buildOrUpdateScales() {\n      const options = this.options;\n      const scaleOpts = options.scales;\n      const scales = this.scales;\n      const updated = Object.keys(scales).reduce((obj, id) => {\n        obj[id] = false;\n        return obj;\n      }, {});\n      let items = [];\n      if (scaleOpts) {\n        items = items.concat(Object.keys(scaleOpts).map(id => {\n          const scaleOptions = scaleOpts[id];\n          const axis = determineAxis(id, scaleOptions);\n          const isRadial = axis === 'r';\n          const isHorizontal = axis === 'x';\n          return {\n            options: scaleOptions,\n            dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n            dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n          };\n        }));\n      }\n      each(items, item => {\n        const scaleOptions = item.options;\n        const id = scaleOptions.id;\n        const axis = determineAxis(id, scaleOptions);\n        const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n        if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n          scaleOptions.position = item.dposition;\n        }\n        updated[id] = true;\n        let scale = null;\n        if (id in scales && scales[id].type === scaleType) {\n          scale = scales[id];\n        } else {\n          const scaleClass = registry.getScale(scaleType);\n          scale = new scaleClass({\n            id,\n            type: scaleType,\n            ctx: this.ctx,\n            chart: this\n          });\n          scales[scale.id] = scale;\n        }\n        scale.init(scaleOptions, options);\n      });\n      each(updated, (hasUpdated, id) => {\n        if (!hasUpdated) {\n          delete scales[id];\n        }\n      });\n      each(scales, scale => {\n        layouts.configure(this, scale, scale.options);\n        layouts.addBox(this, scale);\n      });\n    }\n    _updateMetasets() {\n      const metasets = this._metasets;\n      const numData = this.data.datasets.length;\n      const numMeta = metasets.length;\n      metasets.sort((a, b) => a.index - b.index);\n      if (numMeta > numData) {\n        for (let i = numData; i < numMeta; ++i) {\n          this._destroyDatasetMeta(i);\n        }\n        metasets.splice(numData, numMeta - numData);\n      }\n      this._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n    }\n    _removeUnreferencedMetasets() {\n      const {\n        _metasets: metasets,\n        data: {\n          datasets\n        }\n      } = this;\n      if (metasets.length > datasets.length) {\n        delete this._stacks;\n      }\n      metasets.forEach((meta, index) => {\n        if (datasets.filter(x => x === meta._dataset).length === 0) {\n          this._destroyDatasetMeta(index);\n        }\n      });\n    }\n    buildOrUpdateControllers() {\n      const newControllers = [];\n      const datasets = this.data.datasets;\n      let i, ilen;\n      this._removeUnreferencedMetasets();\n      for (i = 0, ilen = datasets.length; i < ilen; i++) {\n        const dataset = datasets[i];\n        let meta = this.getDatasetMeta(i);\n        const type = dataset.type || this.config.type;\n        if (meta.type && meta.type !== type) {\n          this._destroyDatasetMeta(i);\n          meta = this.getDatasetMeta(i);\n        }\n        meta.type = type;\n        meta.indexAxis = dataset.indexAxis || getIndexAxis(type, this.options);\n        meta.order = dataset.order || 0;\n        meta.index = i;\n        meta.label = '' + dataset.label;\n        meta.visible = this.isDatasetVisible(i);\n        if (meta.controller) {\n          meta.controller.updateIndex(i);\n          meta.controller.linkScales();\n        } else {\n          const ControllerClass = registry.getController(type);\n          const {\n            datasetElementType,\n            dataElementType\n          } = defaults.datasets[type];\n          Object.assign(ControllerClass.prototype, {\n            dataElementType: registry.getElement(dataElementType),\n            datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n          });\n          meta.controller = new ControllerClass(this, i);\n          newControllers.push(meta.controller);\n        }\n      }\n      this._updateMetasets();\n      return newControllers;\n    }\n    _resetElements() {\n      each(this.data.datasets, (dataset, datasetIndex) => {\n        this.getDatasetMeta(datasetIndex).controller.reset();\n      }, this);\n    }\n    reset() {\n      this._resetElements();\n      this.notifyPlugins('reset');\n    }\n    update(mode) {\n      const config = this.config;\n      config.update();\n      const options = this._options = config.createResolver(config.chartOptionScopes(), this.getContext());\n      const animsDisabled = this._animationsDisabled = !options.animation;\n      this._updateScales();\n      this._checkEventBindings();\n      this._updateHiddenIndices();\n      this._plugins.invalidate();\n      if (this.notifyPlugins('beforeUpdate', {\n        mode,\n        cancelable: true\n      }) === false) {\n        return;\n      }\n      const newControllers = this.buildOrUpdateControllers();\n      this.notifyPlugins('beforeElementsUpdate');\n      let minPadding = 0;\n      for (let i = 0, ilen = this.data.datasets.length; i < ilen; i++) {\n        const {\n          controller\n        } = this.getDatasetMeta(i);\n        const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n        controller.buildOrUpdateElements(reset);\n        minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n      }\n      minPadding = this._minPadding = options.layout.autoPadding ? minPadding : 0;\n      this._updateLayout(minPadding);\n      if (!animsDisabled) {\n        each(newControllers, controller => {\n          controller.reset();\n        });\n      }\n      this._updateDatasets(mode);\n      this.notifyPlugins('afterUpdate', {\n        mode\n      });\n      this._layers.sort(compare2Level('z', '_idx'));\n      const {\n        _active,\n        _lastEvent\n      } = this;\n      if (_lastEvent) {\n        this._eventHandler(_lastEvent, true);\n      } else if (_active.length) {\n        this._updateHoverStyles(_active, _active, true);\n      }\n      this.render();\n    }\n    _updateScales() {\n      each(this.scales, scale => {\n        layouts.removeBox(this, scale);\n      });\n      this.ensureScalesHaveIDs();\n      this.buildOrUpdateScales();\n    }\n    _checkEventBindings() {\n      const options = this.options;\n      const existingEvents = new Set(Object.keys(this._listeners));\n      const newEvents = new Set(options.events);\n      if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== options.responsive) {\n        this.unbindEvents();\n        this.bindEvents();\n      }\n    }\n    _updateHiddenIndices() {\n      const {\n        _hiddenIndices\n      } = this;\n      const changes = this._getUniformDataChanges() || [];\n      for (const {\n        method,\n        start,\n        count\n      } of changes) {\n        const move = method === '_removeElements' ? -count : count;\n        moveNumericKeys(_hiddenIndices, start, move);\n      }\n    }\n    _getUniformDataChanges() {\n      const _dataChanges = this._dataChanges;\n      if (!_dataChanges || !_dataChanges.length) {\n        return;\n      }\n      this._dataChanges = [];\n      const datasetCount = this.data.datasets.length;\n      const makeSet = idx => new Set(_dataChanges.filter(c => c[0] === idx).map((c, i) => i + ',' + c.splice(1).join(',')));\n      const changeSet = makeSet(0);\n      for (let i = 1; i < datasetCount; i++) {\n        if (!setsEqual(changeSet, makeSet(i))) {\n          return;\n        }\n      }\n      return Array.from(changeSet).map(c => c.split(',')).map(a => ({\n        method: a[1],\n        start: +a[2],\n        count: +a[3]\n      }));\n    }\n    _updateLayout(minPadding) {\n      if (this.notifyPlugins('beforeLayout', {\n        cancelable: true\n      }) === false) {\n        return;\n      }\n      layouts.update(this, this.width, this.height, minPadding);\n      const area = this.chartArea;\n      const noArea = area.width <= 0 || area.height <= 0;\n      this._layers = [];\n      each(this.boxes, box => {\n        if (noArea && box.position === 'chartArea') {\n          return;\n        }\n        if (box.configure) {\n          box.configure();\n        }\n        this._layers.push(...box._layers());\n      }, this);\n      this._layers.forEach((item, index) => {\n        item._idx = index;\n      });\n      this.notifyPlugins('afterLayout');\n    }\n    _updateDatasets(mode) {\n      if (this.notifyPlugins('beforeDatasetsUpdate', {\n        mode,\n        cancelable: true\n      }) === false) {\n        return;\n      }\n      for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n        this.getDatasetMeta(i).controller.configure();\n      }\n      for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n        this._updateDataset(i, isFunction(mode) ? mode({\n          datasetIndex: i\n        }) : mode);\n      }\n      this.notifyPlugins('afterDatasetsUpdate', {\n        mode\n      });\n    }\n    _updateDataset(index, mode) {\n      const meta = this.getDatasetMeta(index);\n      const args = {\n        meta,\n        index,\n        mode,\n        cancelable: true\n      };\n      if (this.notifyPlugins('beforeDatasetUpdate', args) === false) {\n        return;\n      }\n      meta.controller._update(mode);\n      args.cancelable = false;\n      this.notifyPlugins('afterDatasetUpdate', args);\n    }\n    render() {\n      if (this.notifyPlugins('beforeRender', {\n        cancelable: true\n      }) === false) {\n        return;\n      }\n      if (animator.has(this)) {\n        if (this.attached && !animator.running(this)) {\n          animator.start(this);\n        }\n      } else {\n        this.draw();\n        onAnimationsComplete({\n          chart: this\n        });\n      }\n    }\n    draw() {\n      let i;\n      if (this._resizeBeforeDraw) {\n        const {\n          width,\n          height\n        } = this._resizeBeforeDraw;\n        this._resize(width, height);\n        this._resizeBeforeDraw = null;\n      }\n      this.clear();\n      if (this.width <= 0 || this.height <= 0) {\n        return;\n      }\n      if (this.notifyPlugins('beforeDraw', {\n        cancelable: true\n      }) === false) {\n        return;\n      }\n      const layers = this._layers;\n      for (i = 0; i < layers.length && layers[i].z <= 0; ++i) {\n        layers[i].draw(this.chartArea);\n      }\n      this._drawDatasets();\n      for (; i < layers.length; ++i) {\n        layers[i].draw(this.chartArea);\n      }\n      this.notifyPlugins('afterDraw');\n    }\n    _getSortedDatasetMetas(filterVisible) {\n      const metasets = this._sortedMetasets;\n      const result = [];\n      let i, ilen;\n      for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n        const meta = metasets[i];\n        if (!filterVisible || meta.visible) {\n          result.push(meta);\n        }\n      }\n      return result;\n    }\n    getSortedVisibleDatasetMetas() {\n      return this._getSortedDatasetMetas(true);\n    }\n    _drawDatasets() {\n      if (this.notifyPlugins('beforeDatasetsDraw', {\n        cancelable: true\n      }) === false) {\n        return;\n      }\n      const metasets = this.getSortedVisibleDatasetMetas();\n      for (let i = metasets.length - 1; i >= 0; --i) {\n        this._drawDataset(metasets[i]);\n      }\n      this.notifyPlugins('afterDatasetsDraw');\n    }\n    _drawDataset(meta) {\n      const ctx = this.ctx;\n      const clip = meta._clip;\n      const useClip = !clip.disabled;\n      const area = this.chartArea;\n      const args = {\n        meta,\n        index: meta.index,\n        cancelable: true\n      };\n      if (this.notifyPlugins('beforeDatasetDraw', args) === false) {\n        return;\n      }\n      if (useClip) {\n        clipArea(ctx, {\n          left: clip.left === false ? 0 : area.left - clip.left,\n          right: clip.right === false ? this.width : area.right + clip.right,\n          top: clip.top === false ? 0 : area.top - clip.top,\n          bottom: clip.bottom === false ? this.height : area.bottom + clip.bottom\n        });\n      }\n      meta.controller.draw();\n      if (useClip) {\n        unclipArea(ctx);\n      }\n      args.cancelable = false;\n      this.notifyPlugins('afterDatasetDraw', args);\n    }\n    getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n      const method = Interaction.modes[mode];\n      if (typeof method === 'function') {\n        return method(this, e, options, useFinalPosition);\n      }\n      return [];\n    }\n    getDatasetMeta(datasetIndex) {\n      const dataset = this.data.datasets[datasetIndex];\n      const metasets = this._metasets;\n      let meta = metasets.filter(x => x && x._dataset === dataset).pop();\n      if (!meta) {\n        meta = {\n          type: null,\n          data: [],\n          dataset: null,\n          controller: null,\n          hidden: null,\n          xAxisID: null,\n          yAxisID: null,\n          order: dataset && dataset.order || 0,\n          index: datasetIndex,\n          _dataset: dataset,\n          _parsed: [],\n          _sorted: false\n        };\n        metasets.push(meta);\n      }\n      return meta;\n    }\n    getContext() {\n      return this.$context || (this.$context = createContext(null, {\n        chart: this,\n        type: 'chart'\n      }));\n    }\n    getVisibleDatasetCount() {\n      return this.getSortedVisibleDatasetMetas().length;\n    }\n    isDatasetVisible(datasetIndex) {\n      const dataset = this.data.datasets[datasetIndex];\n      if (!dataset) {\n        return false;\n      }\n      const meta = this.getDatasetMeta(datasetIndex);\n      return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n    }\n    setDatasetVisibility(datasetIndex, visible) {\n      const meta = this.getDatasetMeta(datasetIndex);\n      meta.hidden = !visible;\n    }\n    toggleDataVisibility(index) {\n      this._hiddenIndices[index] = !this._hiddenIndices[index];\n    }\n    getDataVisibility(index) {\n      return !this._hiddenIndices[index];\n    }\n    _updateVisibility(datasetIndex, dataIndex, visible) {\n      const mode = visible ? 'show' : 'hide';\n      const meta = this.getDatasetMeta(datasetIndex);\n      const anims = meta.controller._resolveAnimations(undefined, mode);\n      if (defined(dataIndex)) {\n        meta.data[dataIndex].hidden = !visible;\n        this.update();\n      } else {\n        this.setDatasetVisibility(datasetIndex, visible);\n        anims.update(meta, {\n          visible\n        });\n        this.update(ctx => ctx.datasetIndex === datasetIndex ? mode : undefined);\n      }\n    }\n    hide(datasetIndex, dataIndex) {\n      this._updateVisibility(datasetIndex, dataIndex, false);\n    }\n    show(datasetIndex, dataIndex) {\n      this._updateVisibility(datasetIndex, dataIndex, true);\n    }\n    _destroyDatasetMeta(datasetIndex) {\n      const meta = this._metasets[datasetIndex];\n      if (meta && meta.controller) {\n        meta.controller._destroy();\n      }\n      delete this._metasets[datasetIndex];\n    }\n    _stop() {\n      let i, ilen;\n      this.stop();\n      animator.remove(this);\n      for (i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n        this._destroyDatasetMeta(i);\n      }\n    }\n    destroy() {\n      this.notifyPlugins('beforeDestroy');\n      const {\n        canvas,\n        ctx\n      } = this;\n      this._stop();\n      this.config.clearCache();\n      if (canvas) {\n        this.unbindEvents();\n        clearCanvas(canvas, ctx);\n        this.platform.releaseContext(ctx);\n        this.canvas = null;\n        this.ctx = null;\n      }\n      this.notifyPlugins('destroy');\n      delete instances[this.id];\n      this.notifyPlugins('afterDestroy');\n    }\n    toBase64Image(...args) {\n      return this.canvas.toDataURL(...args);\n    }\n    bindEvents() {\n      this.bindUserEvents();\n      if (this.options.responsive) {\n        this.bindResponsiveEvents();\n      } else {\n        this.attached = true;\n      }\n    }\n    bindUserEvents() {\n      const listeners = this._listeners;\n      const platform = this.platform;\n      const _add = (type, listener) => {\n        platform.addEventListener(this, type, listener);\n        listeners[type] = listener;\n      };\n      const listener = (e, x, y) => {\n        e.offsetX = x;\n        e.offsetY = y;\n        this._eventHandler(e);\n      };\n      each(this.options.events, type => _add(type, listener));\n    }\n    bindResponsiveEvents() {\n      if (!this._responsiveListeners) {\n        this._responsiveListeners = {};\n      }\n      const listeners = this._responsiveListeners;\n      const platform = this.platform;\n      const _add = (type, listener) => {\n        platform.addEventListener(this, type, listener);\n        listeners[type] = listener;\n      };\n      const _remove = (type, listener) => {\n        if (listeners[type]) {\n          platform.removeEventListener(this, type, listener);\n          delete listeners[type];\n        }\n      };\n      const listener = (width, height) => {\n        if (this.canvas) {\n          this.resize(width, height);\n        }\n      };\n      let detached;\n      const attached = () => {\n        _remove('attach', attached);\n        this.attached = true;\n        this.resize();\n        _add('resize', listener);\n        _add('detach', detached);\n      };\n      detached = () => {\n        this.attached = false;\n        _remove('resize', listener);\n        this._stop();\n        this._resize(0, 0);\n        _add('attach', attached);\n      };\n      if (platform.isAttached(this.canvas)) {\n        attached();\n      } else {\n        detached();\n      }\n    }\n    unbindEvents() {\n      each(this._listeners, (listener, type) => {\n        this.platform.removeEventListener(this, type, listener);\n      });\n      this._listeners = {};\n      each(this._responsiveListeners, (listener, type) => {\n        this.platform.removeEventListener(this, type, listener);\n      });\n      this._responsiveListeners = undefined;\n    }\n    updateHoverStyle(items, mode, enabled) {\n      const prefix = enabled ? 'set' : 'remove';\n      let meta, item, i, ilen;\n      if (mode === 'dataset') {\n        meta = this.getDatasetMeta(items[0].datasetIndex);\n        meta.controller['_' + prefix + 'DatasetHoverStyle']();\n      }\n      for (i = 0, ilen = items.length; i < ilen; ++i) {\n        item = items[i];\n        const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n        if (controller) {\n          controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n        }\n      }\n    }\n    getActiveElements() {\n      return this._active || [];\n    }\n    setActiveElements(activeElements) {\n      const lastActive = this._active || [];\n      const active = activeElements.map(({\n        datasetIndex,\n        index\n      }) => {\n        const meta = this.getDatasetMeta(datasetIndex);\n        if (!meta) {\n          throw new Error('No dataset found at index ' + datasetIndex);\n        }\n        return {\n          datasetIndex,\n          element: meta.data[index],\n          index\n        };\n      });\n      const changed = !_elementsEqual(active, lastActive);\n      if (changed) {\n        this._active = active;\n        this._lastEvent = null;\n        this._updateHoverStyles(active, lastActive);\n      }\n    }\n    notifyPlugins(hook, args, filter) {\n      return this._plugins.notify(this, hook, args, filter);\n    }\n    _updateHoverStyles(active, lastActive, replay) {\n      const hoverOptions = this.options.hover;\n      const diff = (a, b) => a.filter(x => !b.some(y => x.datasetIndex === y.datasetIndex && x.index === y.index));\n      const deactivated = diff(lastActive, active);\n      const activated = replay ? active : diff(active, lastActive);\n      if (deactivated.length) {\n        this.updateHoverStyle(deactivated, hoverOptions.mode, false);\n      }\n      if (activated.length && hoverOptions.mode) {\n        this.updateHoverStyle(activated, hoverOptions.mode, true);\n      }\n    }\n    _eventHandler(e, replay) {\n      const args = {\n        event: e,\n        replay,\n        cancelable: true,\n        inChartArea: _isPointInArea(e, this.chartArea, this._minPadding)\n      };\n      const eventFilter = plugin => (plugin.options.events || this.options.events).includes(e.native.type);\n      if (this.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n        return;\n      }\n      const changed = this._handleEvent(e, replay, args.inChartArea);\n      args.cancelable = false;\n      this.notifyPlugins('afterEvent', args, eventFilter);\n      if (changed || args.changed) {\n        this.render();\n      }\n      return this;\n    }\n    _handleEvent(e, replay, inChartArea) {\n      const {\n        _active: lastActive = [],\n        options\n      } = this;\n      const useFinalPosition = replay;\n      const active = this._getActiveElements(e, lastActive, inChartArea, useFinalPosition);\n      const isClick = _isClickEvent(e);\n      const lastEvent = determineLastEvent(e, this._lastEvent, inChartArea, isClick);\n      if (inChartArea) {\n        this._lastEvent = null;\n        callback(options.onHover, [e, active, this], this);\n        if (isClick) {\n          callback(options.onClick, [e, active, this], this);\n        }\n      }\n      const changed = !_elementsEqual(active, lastActive);\n      if (changed || replay) {\n        this._active = active;\n        this._updateHoverStyles(active, lastActive, replay);\n      }\n      this._lastEvent = lastEvent;\n      return changed;\n    }\n    _getActiveElements(e, lastActive, inChartArea, useFinalPosition) {\n      if (e.type === 'mouseout') {\n        return [];\n      }\n      if (!inChartArea) {\n        return lastActive;\n      }\n      const hoverOptions = this.options.hover;\n      return this.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n    }\n  }\n  const invalidatePlugins = () => each(Chart.instances, chart => chart._plugins.invalidate());\n  const enumerable = true;\n  Object.defineProperties(Chart, {\n    defaults: {\n      enumerable,\n      value: defaults\n    },\n    instances: {\n      enumerable,\n      value: instances\n    },\n    overrides: {\n      enumerable,\n      value: overrides\n    },\n    registry: {\n      enumerable,\n      value: registry\n    },\n    version: {\n      enumerable,\n      value: version\n    },\n    getChart: {\n      enumerable,\n      value: getChart\n    },\n    register: {\n      enumerable,\n      value: (...items) => {\n        registry.add(...items);\n        invalidatePlugins();\n      }\n    },\n    unregister: {\n      enumerable,\n      value: (...items) => {\n        registry.remove(...items);\n        invalidatePlugins();\n      }\n    }\n  });\n  function abstract() {\n    throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n  }\n  class DateAdapter {\n    constructor(options) {\n      this.options = options || {};\n    }\n    formats() {\n      return abstract();\n    }\n    parse(value, format) {\n      return abstract();\n    }\n    format(timestamp, format) {\n      return abstract();\n    }\n    add(timestamp, amount, unit) {\n      return abstract();\n    }\n    diff(a, b, unit) {\n      return abstract();\n    }\n    startOf(timestamp, unit, weekday) {\n      return abstract();\n    }\n    endOf(timestamp, unit) {\n      return abstract();\n    }\n  }\n  DateAdapter.override = function (members) {\n    Object.assign(DateAdapter.prototype, members);\n  };\n  var _adapters = {\n    _date: DateAdapter\n  };\n  function getAllScaleValues(scale, type) {\n    if (!scale._cache.$bar) {\n      const visibleMetas = scale.getMatchingVisibleMetas(type);\n      let values = [];\n      for (let i = 0, ilen = visibleMetas.length; i < ilen; i++) {\n        values = values.concat(visibleMetas[i].controller.getAllParsedValues(scale));\n      }\n      scale._cache.$bar = _arrayUnique(values.sort((a, b) => a - b));\n    }\n    return scale._cache.$bar;\n  }\n  function computeMinSampleSize(meta) {\n    const scale = meta.iScale;\n    const values = getAllScaleValues(scale, meta.type);\n    let min = scale._length;\n    let i, ilen, curr, prev;\n    const updateMinAndPrev = () => {\n      if (curr === 32767 || curr === -32768) {\n        return;\n      }\n      if (defined(prev)) {\n        min = Math.min(min, Math.abs(curr - prev) || min);\n      }\n      prev = curr;\n    };\n    for (i = 0, ilen = values.length; i < ilen; ++i) {\n      curr = scale.getPixelForValue(values[i]);\n      updateMinAndPrev();\n    }\n    prev = undefined;\n    for (i = 0, ilen = scale.ticks.length; i < ilen; ++i) {\n      curr = scale.getPixelForTick(i);\n      updateMinAndPrev();\n    }\n    return min;\n  }\n  function computeFitCategoryTraits(index, ruler, options, stackCount) {\n    const thickness = options.barThickness;\n    let size, ratio;\n    if (isNullOrUndef(thickness)) {\n      size = ruler.min * options.categoryPercentage;\n      ratio = options.barPercentage;\n    } else {\n      size = thickness * stackCount;\n      ratio = 1;\n    }\n    return {\n      chunk: size / stackCount,\n      ratio,\n      start: ruler.pixels[index] - size / 2\n    };\n  }\n  function computeFlexCategoryTraits(index, ruler, options, stackCount) {\n    const pixels = ruler.pixels;\n    const curr = pixels[index];\n    let prev = index > 0 ? pixels[index - 1] : null;\n    let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n    const percent = options.categoryPercentage;\n    if (prev === null) {\n      prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n    }\n    if (next === null) {\n      next = curr + curr - prev;\n    }\n    const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n    const size = Math.abs(next - prev) / 2 * percent;\n    return {\n      chunk: size / stackCount,\n      ratio: options.barPercentage,\n      start\n    };\n  }\n  function parseFloatBar(entry, item, vScale, i) {\n    const startValue = vScale.parse(entry[0], i);\n    const endValue = vScale.parse(entry[1], i);\n    const min = Math.min(startValue, endValue);\n    const max = Math.max(startValue, endValue);\n    let barStart = min;\n    let barEnd = max;\n    if (Math.abs(min) > Math.abs(max)) {\n      barStart = max;\n      barEnd = min;\n    }\n    item[vScale.axis] = barEnd;\n    item._custom = {\n      barStart,\n      barEnd,\n      start: startValue,\n      end: endValue,\n      min,\n      max\n    };\n  }\n  function parseValue(entry, item, vScale, i) {\n    if (isArray(entry)) {\n      parseFloatBar(entry, item, vScale, i);\n    } else {\n      item[vScale.axis] = vScale.parse(entry, i);\n    }\n    return item;\n  }\n  function parseArrayOrPrimitive(meta, data, start, count) {\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = [];\n    let i, ilen, item, entry;\n    for (i = start, ilen = start + count; i < ilen; ++i) {\n      entry = data[i];\n      item = {};\n      item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n      parsed.push(parseValue(entry, item, vScale, i));\n    }\n    return parsed;\n  }\n  function isFloatBar(custom) {\n    return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n  }\n  function barSign(size, vScale, actualBase) {\n    if (size !== 0) {\n      return sign(size);\n    }\n    return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);\n  }\n  function borderProps(properties) {\n    let reverse, start, end, top, bottom;\n    if (properties.horizontal) {\n      reverse = properties.base > properties.x;\n      start = 'left';\n      end = 'right';\n    } else {\n      reverse = properties.base < properties.y;\n      start = 'bottom';\n      end = 'top';\n    }\n    if (reverse) {\n      top = 'end';\n      bottom = 'start';\n    } else {\n      top = 'start';\n      bottom = 'end';\n    }\n    return {\n      start,\n      end,\n      reverse,\n      top,\n      bottom\n    };\n  }\n  function setBorderSkipped(properties, options, stack, index) {\n    let edge = options.borderSkipped;\n    const res = {};\n    if (!edge) {\n      properties.borderSkipped = res;\n      return;\n    }\n    const {\n      start,\n      end,\n      reverse,\n      top,\n      bottom\n    } = borderProps(properties);\n    if (edge === 'middle' && stack) {\n      properties.enableBorderRadius = true;\n      if ((stack._top || 0) === index) {\n        edge = top;\n      } else if ((stack._bottom || 0) === index) {\n        edge = bottom;\n      } else {\n        res[parseEdge(bottom, start, end, reverse)] = true;\n        edge = top;\n      }\n    }\n    res[parseEdge(edge, start, end, reverse)] = true;\n    properties.borderSkipped = res;\n  }\n  function parseEdge(edge, a, b, reverse) {\n    if (reverse) {\n      edge = swap(edge, a, b);\n      edge = startEnd(edge, b, a);\n    } else {\n      edge = startEnd(edge, a, b);\n    }\n    return edge;\n  }\n  function swap(orig, v1, v2) {\n    return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n  }\n  function startEnd(v, start, end) {\n    return v === 'start' ? start : v === 'end' ? end : v;\n  }\n  function setInflateAmount(properties, {\n    inflateAmount\n  }, ratio) {\n    properties.inflateAmount = inflateAmount === 'auto' ? ratio === 1 ? 0.33 : 0 : inflateAmount;\n  }\n  class BarController extends DatasetController {\n    parsePrimitiveData(meta, data, start, count) {\n      return parseArrayOrPrimitive(meta, data, start, count);\n    }\n    parseArrayData(meta, data, start, count) {\n      return parseArrayOrPrimitive(meta, data, start, count);\n    }\n    parseObjectData(meta, data, start, count) {\n      const {\n        iScale,\n        vScale\n      } = meta;\n      const {\n        xAxisKey = 'x',\n        yAxisKey = 'y'\n      } = this._parsing;\n      const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n      const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n      const parsed = [];\n      let i, ilen, item, obj;\n      for (i = start, ilen = start + count; i < ilen; ++i) {\n        obj = data[i];\n        item = {};\n        item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n        parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n      }\n      return parsed;\n    }\n    updateRangeFromParsed(range, scale, parsed, stack) {\n      super.updateRangeFromParsed(range, scale, parsed, stack);\n      const custom = parsed._custom;\n      if (custom && scale === this._cachedMeta.vScale) {\n        range.min = Math.min(range.min, custom.min);\n        range.max = Math.max(range.max, custom.max);\n      }\n    }\n    getMaxOverflow() {\n      return 0;\n    }\n    getLabelAndValue(index) {\n      const meta = this._cachedMeta;\n      const {\n        iScale,\n        vScale\n      } = meta;\n      const parsed = this.getParsed(index);\n      const custom = parsed._custom;\n      const value = isFloatBar(custom) ? '[' + custom.start + ', ' + custom.end + ']' : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n      return {\n        label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n        value\n      };\n    }\n    initialize() {\n      this.enableOptionSharing = true;\n      super.initialize();\n      const meta = this._cachedMeta;\n      meta.stack = this.getDataset().stack;\n    }\n    update(mode) {\n      const meta = this._cachedMeta;\n      this.updateElements(meta.data, 0, meta.data.length, mode);\n    }\n    updateElements(bars, start, count, mode) {\n      const reset = mode === 'reset';\n      const {\n        index,\n        _cachedMeta: {\n          vScale\n        }\n      } = this;\n      const base = vScale.getBasePixel();\n      const horizontal = vScale.isHorizontal();\n      const ruler = this._getRuler();\n      const firstOpts = this.resolveDataElementOptions(start, mode);\n      const sharedOptions = this.getSharedOptions(firstOpts);\n      const includeOptions = this.includeOptions(mode, sharedOptions);\n      this.updateSharedOptions(sharedOptions, mode, firstOpts);\n      for (let i = start; i < start + count; i++) {\n        const parsed = this.getParsed(i);\n        const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {\n          base,\n          head: base\n        } : this._calculateBarValuePixels(i);\n        const ipixels = this._calculateBarIndexPixels(i, ruler);\n        const stack = (parsed._stacks || {})[vScale.axis];\n        const properties = {\n          horizontal,\n          base: vpixels.base,\n          enableBorderRadius: !stack || isFloatBar(parsed._custom) || index === stack._top || index === stack._bottom,\n          x: horizontal ? vpixels.head : ipixels.center,\n          y: horizontal ? ipixels.center : vpixels.head,\n          height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n          width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n        };\n        if (includeOptions) {\n          properties.options = sharedOptions || this.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n        }\n        const options = properties.options || bars[i].options;\n        setBorderSkipped(properties, options, stack, index);\n        setInflateAmount(properties, options, ruler.ratio);\n        this.updateElement(bars[i], i, properties, mode);\n      }\n    }\n    _getStacks(last, dataIndex) {\n      const meta = this._cachedMeta;\n      const iScale = meta.iScale;\n      const metasets = iScale.getMatchingVisibleMetas(this._type);\n      const stacked = iScale.options.stacked;\n      const ilen = metasets.length;\n      const stacks = [];\n      let i, item;\n      for (i = 0; i < ilen; ++i) {\n        item = metasets[i];\n        if (!item.controller.options.grouped) {\n          continue;\n        }\n        if (typeof dataIndex !== 'undefined') {\n          const val = item.controller.getParsed(dataIndex)[item.controller._cachedMeta.vScale.axis];\n          if (isNullOrUndef(val) || isNaN(val)) {\n            continue;\n          }\n        }\n        if (stacked === false || stacks.indexOf(item.stack) === -1 || stacked === undefined && item.stack === undefined) {\n          stacks.push(item.stack);\n        }\n        if (item.index === last) {\n          break;\n        }\n      }\n      if (!stacks.length) {\n        stacks.push(undefined);\n      }\n      return stacks;\n    }\n    _getStackCount(index) {\n      return this._getStacks(undefined, index).length;\n    }\n    _getStackIndex(datasetIndex, name, dataIndex) {\n      const stacks = this._getStacks(datasetIndex, dataIndex);\n      const index = name !== undefined ? stacks.indexOf(name) : -1;\n      return index === -1 ? stacks.length - 1 : index;\n    }\n    _getRuler() {\n      const opts = this.options;\n      const meta = this._cachedMeta;\n      const iScale = meta.iScale;\n      const pixels = [];\n      let i, ilen;\n      for (i = 0, ilen = meta.data.length; i < ilen; ++i) {\n        pixels.push(iScale.getPixelForValue(this.getParsed(i)[iScale.axis], i));\n      }\n      const barThickness = opts.barThickness;\n      const min = barThickness || computeMinSampleSize(meta);\n      return {\n        min,\n        pixels,\n        start: iScale._startPixel,\n        end: iScale._endPixel,\n        stackCount: this._getStackCount(),\n        scale: iScale,\n        grouped: opts.grouped,\n        ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n      };\n    }\n    _calculateBarValuePixels(index) {\n      const {\n        _cachedMeta: {\n          vScale,\n          _stacked\n        },\n        options: {\n          base: baseValue,\n          minBarLength\n        }\n      } = this;\n      const actualBase = baseValue || 0;\n      const parsed = this.getParsed(index);\n      const custom = parsed._custom;\n      const floating = isFloatBar(custom);\n      let value = parsed[vScale.axis];\n      let start = 0;\n      let length = _stacked ? this.applyStack(vScale, parsed, _stacked) : value;\n      let head, size;\n      if (length !== value) {\n        start = length - value;\n        length = value;\n      }\n      if (floating) {\n        value = custom.barStart;\n        length = custom.barEnd - custom.barStart;\n        if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n          start = 0;\n        }\n        start += value;\n      }\n      const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n      let base = vScale.getPixelForValue(startValue);\n      if (this.chart.getDataVisibility(index)) {\n        head = vScale.getPixelForValue(start + length);\n      } else {\n        head = base;\n      }\n      size = head - base;\n      if (Math.abs(size) < minBarLength) {\n        size = barSign(size, vScale, actualBase) * minBarLength;\n        if (value === actualBase) {\n          base -= size / 2;\n        }\n        head = base + size;\n      }\n      if (base === vScale.getPixelForValue(actualBase)) {\n        const halfGrid = sign(size) * vScale.getLineWidthForValue(actualBase) / 2;\n        base += halfGrid;\n        size -= halfGrid;\n      }\n      return {\n        size,\n        base,\n        head,\n        center: head + size / 2\n      };\n    }\n    _calculateBarIndexPixels(index, ruler) {\n      const scale = ruler.scale;\n      const options = this.options;\n      const skipNull = options.skipNull;\n      const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n      let center, size;\n      if (ruler.grouped) {\n        const stackCount = skipNull ? this._getStackCount(index) : ruler.stackCount;\n        const range = options.barThickness === 'flex' ? computeFlexCategoryTraits(index, ruler, options, stackCount) : computeFitCategoryTraits(index, ruler, options, stackCount);\n        const stackIndex = this._getStackIndex(this.index, this._cachedMeta.stack, skipNull ? index : undefined);\n        center = range.start + range.chunk * stackIndex + range.chunk / 2;\n        size = Math.min(maxBarThickness, range.chunk * range.ratio);\n      } else {\n        center = scale.getPixelForValue(this.getParsed(index)[scale.axis], index);\n        size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n      }\n      return {\n        base: center - size / 2,\n        head: center + size / 2,\n        center,\n        size\n      };\n    }\n    draw() {\n      const meta = this._cachedMeta;\n      const vScale = meta.vScale;\n      const rects = meta.data;\n      const ilen = rects.length;\n      let i = 0;\n      for (; i < ilen; ++i) {\n        if (this.getParsed(i)[vScale.axis] !== null) {\n          rects[i].draw(this._ctx);\n        }\n      }\n    }\n  }\n  BarController.id = 'bar';\n  BarController.defaults = {\n    datasetElementType: false,\n    dataElementType: 'bar',\n    categoryPercentage: 0.8,\n    barPercentage: 0.9,\n    grouped: true,\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'base', 'width', 'height']\n      }\n    }\n  };\n  BarController.overrides = {\n    scales: {\n      _index_: {\n        type: 'category',\n        offset: true,\n        grid: {\n          offset: true\n        }\n      },\n      _value_: {\n        type: 'linear',\n        beginAtZero: true\n      }\n    }\n  };\n  class BubbleController extends DatasetController {\n    initialize() {\n      this.enableOptionSharing = true;\n      super.initialize();\n    }\n    parsePrimitiveData(meta, data, start, count) {\n      const parsed = super.parsePrimitiveData(meta, data, start, count);\n      for (let i = 0; i < parsed.length; i++) {\n        parsed[i]._custom = this.resolveDataElementOptions(i + start).radius;\n      }\n      return parsed;\n    }\n    parseArrayData(meta, data, start, count) {\n      const parsed = super.parseArrayData(meta, data, start, count);\n      for (let i = 0; i < parsed.length; i++) {\n        const item = data[start + i];\n        parsed[i]._custom = valueOrDefault(item[2], this.resolveDataElementOptions(i + start).radius);\n      }\n      return parsed;\n    }\n    parseObjectData(meta, data, start, count) {\n      const parsed = super.parseObjectData(meta, data, start, count);\n      for (let i = 0; i < parsed.length; i++) {\n        const item = data[start + i];\n        parsed[i]._custom = valueOrDefault(item && item.r && +item.r, this.resolveDataElementOptions(i + start).radius);\n      }\n      return parsed;\n    }\n    getMaxOverflow() {\n      const data = this._cachedMeta.data;\n      let max = 0;\n      for (let i = data.length - 1; i >= 0; --i) {\n        max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n      }\n      return max > 0 && max;\n    }\n    getLabelAndValue(index) {\n      const meta = this._cachedMeta;\n      const {\n        xScale,\n        yScale\n      } = meta;\n      const parsed = this.getParsed(index);\n      const x = xScale.getLabelForValue(parsed.x);\n      const y = yScale.getLabelForValue(parsed.y);\n      const r = parsed._custom;\n      return {\n        label: meta.label,\n        value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n      };\n    }\n    update(mode) {\n      const points = this._cachedMeta.data;\n      this.updateElements(points, 0, points.length, mode);\n    }\n    updateElements(points, start, count, mode) {\n      const reset = mode === 'reset';\n      const {\n        iScale,\n        vScale\n      } = this._cachedMeta;\n      const firstOpts = this.resolveDataElementOptions(start, mode);\n      const sharedOptions = this.getSharedOptions(firstOpts);\n      const includeOptions = this.includeOptions(mode, sharedOptions);\n      const iAxis = iScale.axis;\n      const vAxis = vScale.axis;\n      for (let i = start; i < start + count; i++) {\n        const point = points[i];\n        const parsed = !reset && this.getParsed(i);\n        const properties = {};\n        const iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n        const vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n        properties.skip = isNaN(iPixel) || isNaN(vPixel);\n        if (includeOptions) {\n          properties.options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n          if (reset) {\n            properties.options.radius = 0;\n          }\n        }\n        this.updateElement(point, i, properties, mode);\n      }\n      this.updateSharedOptions(sharedOptions, mode, firstOpts);\n    }\n    resolveDataElementOptions(index, mode) {\n      const parsed = this.getParsed(index);\n      let values = super.resolveDataElementOptions(index, mode);\n      if (values.$shared) {\n        values = Object.assign({}, values, {\n          $shared: false\n        });\n      }\n      const radius = values.radius;\n      if (mode !== 'active') {\n        values.radius = 0;\n      }\n      values.radius += valueOrDefault(parsed && parsed._custom, radius);\n      return values;\n    }\n  }\n  BubbleController.id = 'bubble';\n  BubbleController.defaults = {\n    datasetElementType: false,\n    dataElementType: 'point',\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'borderWidth', 'radius']\n      }\n    }\n  };\n  BubbleController.overrides = {\n    scales: {\n      x: {\n        type: 'linear'\n      },\n      y: {\n        type: 'linear'\n      }\n    },\n    plugins: {\n      tooltip: {\n        callbacks: {\n          title() {\n            return '';\n          }\n        }\n      }\n    }\n  };\n  function getRatioAndOffset(rotation, circumference, cutout) {\n    let ratioX = 1;\n    let ratioY = 1;\n    let offsetX = 0;\n    let offsetY = 0;\n    if (circumference < TAU) {\n      const startAngle = rotation;\n      const endAngle = startAngle + circumference;\n      const startX = Math.cos(startAngle);\n      const startY = Math.sin(startAngle);\n      const endX = Math.cos(endAngle);\n      const endY = Math.sin(endAngle);\n      const calcMax = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n      const calcMin = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n      const maxX = calcMax(0, startX, endX);\n      const maxY = calcMax(HALF_PI, startY, endY);\n      const minX = calcMin(PI, startX, endX);\n      const minY = calcMin(PI + HALF_PI, startY, endY);\n      ratioX = (maxX - minX) / 2;\n      ratioY = (maxY - minY) / 2;\n      offsetX = -(maxX + minX) / 2;\n      offsetY = -(maxY + minY) / 2;\n    }\n    return {\n      ratioX,\n      ratioY,\n      offsetX,\n      offsetY\n    };\n  }\n  class DoughnutController extends DatasetController {\n    constructor(chart, datasetIndex) {\n      super(chart, datasetIndex);\n      this.enableOptionSharing = true;\n      this.innerRadius = undefined;\n      this.outerRadius = undefined;\n      this.offsetX = undefined;\n      this.offsetY = undefined;\n    }\n    linkScales() {}\n    parse(start, count) {\n      const data = this.getDataset().data;\n      const meta = this._cachedMeta;\n      if (this._parsing === false) {\n        meta._parsed = data;\n      } else {\n        let getter = i => +data[i];\n        if (isObject(data[start])) {\n          const {\n            key = 'value'\n          } = this._parsing;\n          getter = i => +resolveObjectKey(data[i], key);\n        }\n        let i, ilen;\n        for (i = start, ilen = start + count; i < ilen; ++i) {\n          meta._parsed[i] = getter(i);\n        }\n      }\n    }\n    _getRotation() {\n      return toRadians(this.options.rotation - 90);\n    }\n    _getCircumference() {\n      return toRadians(this.options.circumference);\n    }\n    _getRotationExtents() {\n      let min = TAU;\n      let max = -TAU;\n      for (let i = 0; i < this.chart.data.datasets.length; ++i) {\n        if (this.chart.isDatasetVisible(i)) {\n          const controller = this.chart.getDatasetMeta(i).controller;\n          const rotation = controller._getRotation();\n          const circumference = controller._getCircumference();\n          min = Math.min(min, rotation);\n          max = Math.max(max, rotation + circumference);\n        }\n      }\n      return {\n        rotation: min,\n        circumference: max - min\n      };\n    }\n    update(mode) {\n      const chart = this.chart;\n      const {\n        chartArea\n      } = chart;\n      const meta = this._cachedMeta;\n      const arcs = meta.data;\n      const spacing = this.getMaxBorderWidth() + this.getMaxOffset(arcs) + this.options.spacing;\n      const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n      const cutout = Math.min(toPercentage(this.options.cutout, maxSize), 1);\n      const chartWeight = this._getRingWeight(this.index);\n      const {\n        circumference,\n        rotation\n      } = this._getRotationExtents();\n      const {\n        ratioX,\n        ratioY,\n        offsetX,\n        offsetY\n      } = getRatioAndOffset(rotation, circumference, cutout);\n      const maxWidth = (chartArea.width - spacing) / ratioX;\n      const maxHeight = (chartArea.height - spacing) / ratioY;\n      const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n      const outerRadius = toDimension(this.options.radius, maxRadius);\n      const innerRadius = Math.max(outerRadius * cutout, 0);\n      const radiusLength = (outerRadius - innerRadius) / this._getVisibleDatasetWeightTotal();\n      this.offsetX = offsetX * outerRadius;\n      this.offsetY = offsetY * outerRadius;\n      meta.total = this.calculateTotal();\n      this.outerRadius = outerRadius - radiusLength * this._getRingWeightOffset(this.index);\n      this.innerRadius = Math.max(this.outerRadius - radiusLength * chartWeight, 0);\n      this.updateElements(arcs, 0, arcs.length, mode);\n    }\n    _circumference(i, reset) {\n      const opts = this.options;\n      const meta = this._cachedMeta;\n      const circumference = this._getCircumference();\n      if (reset && opts.animation.animateRotate || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\n        return 0;\n      }\n      return this.calculateCircumference(meta._parsed[i] * circumference / TAU);\n    }\n    updateElements(arcs, start, count, mode) {\n      const reset = mode === 'reset';\n      const chart = this.chart;\n      const chartArea = chart.chartArea;\n      const opts = chart.options;\n      const animationOpts = opts.animation;\n      const centerX = (chartArea.left + chartArea.right) / 2;\n      const centerY = (chartArea.top + chartArea.bottom) / 2;\n      const animateScale = reset && animationOpts.animateScale;\n      const innerRadius = animateScale ? 0 : this.innerRadius;\n      const outerRadius = animateScale ? 0 : this.outerRadius;\n      const firstOpts = this.resolveDataElementOptions(start, mode);\n      const sharedOptions = this.getSharedOptions(firstOpts);\n      const includeOptions = this.includeOptions(mode, sharedOptions);\n      let startAngle = this._getRotation();\n      let i;\n      for (i = 0; i < start; ++i) {\n        startAngle += this._circumference(i, reset);\n      }\n      for (i = start; i < start + count; ++i) {\n        const circumference = this._circumference(i, reset);\n        const arc = arcs[i];\n        const properties = {\n          x: centerX + this.offsetX,\n          y: centerY + this.offsetY,\n          startAngle,\n          endAngle: startAngle + circumference,\n          circumference,\n          outerRadius,\n          innerRadius\n        };\n        if (includeOptions) {\n          properties.options = sharedOptions || this.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n        }\n        startAngle += circumference;\n        this.updateElement(arc, i, properties, mode);\n      }\n      this.updateSharedOptions(sharedOptions, mode, firstOpts);\n    }\n    calculateTotal() {\n      const meta = this._cachedMeta;\n      const metaData = meta.data;\n      let total = 0;\n      let i;\n      for (i = 0; i < metaData.length; i++) {\n        const value = meta._parsed[i];\n        if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\n          total += Math.abs(value);\n        }\n      }\n      return total;\n    }\n    calculateCircumference(value) {\n      const total = this._cachedMeta.total;\n      if (total > 0 && !isNaN(value)) {\n        return TAU * (Math.abs(value) / total);\n      }\n      return 0;\n    }\n    getLabelAndValue(index) {\n      const meta = this._cachedMeta;\n      const chart = this.chart;\n      const labels = chart.data.labels || [];\n      const value = formatNumber(meta._parsed[index], chart.options.locale);\n      return {\n        label: labels[index] || '',\n        value\n      };\n    }\n    getMaxBorderWidth(arcs) {\n      let max = 0;\n      const chart = this.chart;\n      let i, ilen, meta, controller, options;\n      if (!arcs) {\n        for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n          if (chart.isDatasetVisible(i)) {\n            meta = chart.getDatasetMeta(i);\n            arcs = meta.data;\n            controller = meta.controller;\n            break;\n          }\n        }\n      }\n      if (!arcs) {\n        return 0;\n      }\n      for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n        options = controller.resolveDataElementOptions(i);\n        if (options.borderAlign !== 'inner') {\n          max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n        }\n      }\n      return max;\n    }\n    getMaxOffset(arcs) {\n      let max = 0;\n      for (let i = 0, ilen = arcs.length; i < ilen; ++i) {\n        const options = this.resolveDataElementOptions(i);\n        max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n      }\n      return max;\n    }\n    _getRingWeightOffset(datasetIndex) {\n      let ringWeightOffset = 0;\n      for (let i = 0; i < datasetIndex; ++i) {\n        if (this.chart.isDatasetVisible(i)) {\n          ringWeightOffset += this._getRingWeight(i);\n        }\n      }\n      return ringWeightOffset;\n    }\n    _getRingWeight(datasetIndex) {\n      return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n    }\n    _getVisibleDatasetWeightTotal() {\n      return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n    }\n  }\n  DoughnutController.id = 'doughnut';\n  DoughnutController.defaults = {\n    datasetElementType: false,\n    dataElementType: 'arc',\n    animation: {\n      animateRotate: true,\n      animateScale: false\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['circumference', 'endAngle', 'innerRadius', 'outerRadius', 'startAngle', 'x', 'y', 'offset', 'borderWidth', 'spacing']\n      }\n    },\n    cutout: '50%',\n    rotation: 0,\n    circumference: 360,\n    radius: '100%',\n    spacing: 0,\n    indexAxis: 'r'\n  };\n  DoughnutController.descriptors = {\n    _scriptable: name => name !== 'spacing',\n    _indexable: name => name !== 'spacing'\n  };\n  DoughnutController.overrides = {\n    aspectRatio: 1,\n    plugins: {\n      legend: {\n        labels: {\n          generateLabels(chart) {\n            const data = chart.data;\n            if (data.labels.length && data.datasets.length) {\n              const {\n                labels: {\n                  pointStyle\n                }\n              } = chart.legend.options;\n              return data.labels.map((label, i) => {\n                const meta = chart.getDatasetMeta(0);\n                const style = meta.controller.getStyle(i);\n                return {\n                  text: label,\n                  fillStyle: style.backgroundColor,\n                  strokeStyle: style.borderColor,\n                  lineWidth: style.borderWidth,\n                  pointStyle: pointStyle,\n                  hidden: !chart.getDataVisibility(i),\n                  index: i\n                };\n              });\n            }\n            return [];\n          }\n        },\n        onClick(e, legendItem, legend) {\n          legend.chart.toggleDataVisibility(legendItem.index);\n          legend.chart.update();\n        }\n      },\n      tooltip: {\n        callbacks: {\n          title() {\n            return '';\n          },\n          label(tooltipItem) {\n            let dataLabel = tooltipItem.label;\n            const value = ': ' + tooltipItem.formattedValue;\n            if (isArray(dataLabel)) {\n              dataLabel = dataLabel.slice();\n              dataLabel[0] += value;\n            } else {\n              dataLabel += value;\n            }\n            return dataLabel;\n          }\n        }\n      }\n    }\n  };\n  class LineController extends DatasetController {\n    initialize() {\n      this.enableOptionSharing = true;\n      super.initialize();\n    }\n    update(mode) {\n      const meta = this._cachedMeta;\n      const {\n        dataset: line,\n        data: points = [],\n        _dataset\n      } = meta;\n      const animationsDisabled = this.chart._animationsDisabled;\n      let {\n        start,\n        count\n      } = getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n      this._drawStart = start;\n      this._drawCount = count;\n      if (scaleRangesChanged(meta)) {\n        start = 0;\n        count = points.length;\n      }\n      line._chart = this.chart;\n      line._datasetIndex = this.index;\n      line._decimated = !!_dataset._decimated;\n      line.points = points;\n      const options = this.resolveDatasetElementOptions(mode);\n      if (!this.options.showLine) {\n        options.borderWidth = 0;\n      }\n      options.segment = this.options.segment;\n      this.updateElement(line, undefined, {\n        animated: !animationsDisabled,\n        options\n      }, mode);\n      this.updateElements(points, start, count, mode);\n    }\n    updateElements(points, start, count, mode) {\n      const reset = mode === 'reset';\n      const {\n        iScale,\n        vScale,\n        _stacked,\n        _dataset\n      } = this._cachedMeta;\n      const firstOpts = this.resolveDataElementOptions(start, mode);\n      const sharedOptions = this.getSharedOptions(firstOpts);\n      const includeOptions = this.includeOptions(mode, sharedOptions);\n      const iAxis = iScale.axis;\n      const vAxis = vScale.axis;\n      const {\n        spanGaps,\n        segment\n      } = this.options;\n      const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n      const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n      let prevParsed = start > 0 && this.getParsed(start - 1);\n      for (let i = start; i < start + count; ++i) {\n        const point = points[i];\n        const parsed = this.getParsed(i);\n        const properties = directUpdate ? point : {};\n        const nullData = isNullOrUndef(parsed[vAxis]);\n        const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n        const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n        properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n        properties.stop = i > 0 && parsed[iAxis] - prevParsed[iAxis] > maxGapLength;\n        if (segment) {\n          properties.parsed = parsed;\n          properties.raw = _dataset.data[i];\n        }\n        if (includeOptions) {\n          properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n        }\n        if (!directUpdate) {\n          this.updateElement(point, i, properties, mode);\n        }\n        prevParsed = parsed;\n      }\n      this.updateSharedOptions(sharedOptions, mode, firstOpts);\n    }\n    getMaxOverflow() {\n      const meta = this._cachedMeta;\n      const dataset = meta.dataset;\n      const border = dataset.options && dataset.options.borderWidth || 0;\n      const data = meta.data || [];\n      if (!data.length) {\n        return border;\n      }\n      const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n      const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n      return Math.max(border, firstPoint, lastPoint) / 2;\n    }\n    draw() {\n      const meta = this._cachedMeta;\n      meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n      super.draw();\n    }\n  }\n  LineController.id = 'line';\n  LineController.defaults = {\n    datasetElementType: 'line',\n    dataElementType: 'point',\n    showLine: true,\n    spanGaps: false\n  };\n  LineController.overrides = {\n    scales: {\n      _index_: {\n        type: 'category'\n      },\n      _value_: {\n        type: 'linear'\n      }\n    }\n  };\n  function getStartAndCountOfVisiblePoints(meta, points, animationsDisabled) {\n    const pointCount = points.length;\n    let start = 0;\n    let count = pointCount;\n    if (meta._sorted) {\n      const {\n        iScale,\n        _parsed\n      } = meta;\n      const axis = iScale.axis;\n      const {\n        min,\n        max,\n        minDefined,\n        maxDefined\n      } = iScale.getUserBounds();\n      if (minDefined) {\n        start = _limitValue(Math.min(_lookupByKey(_parsed, iScale.axis, min).lo, animationsDisabled ? pointCount : _lookupByKey(points, axis, iScale.getPixelForValue(min)).lo), 0, pointCount - 1);\n      }\n      if (maxDefined) {\n        count = _limitValue(Math.max(_lookupByKey(_parsed, iScale.axis, max).hi + 1, animationsDisabled ? 0 : _lookupByKey(points, axis, iScale.getPixelForValue(max)).hi + 1), start, pointCount) - start;\n      } else {\n        count = pointCount - start;\n      }\n    }\n    return {\n      start,\n      count\n    };\n  }\n  function scaleRangesChanged(meta) {\n    const {\n      xScale,\n      yScale,\n      _scaleRanges\n    } = meta;\n    const newRanges = {\n      xmin: xScale.min,\n      xmax: xScale.max,\n      ymin: yScale.min,\n      ymax: yScale.max\n    };\n    if (!_scaleRanges) {\n      meta._scaleRanges = newRanges;\n      return true;\n    }\n    const changed = _scaleRanges.xmin !== xScale.min || _scaleRanges.xmax !== xScale.max || _scaleRanges.ymin !== yScale.min || _scaleRanges.ymax !== yScale.max;\n    Object.assign(_scaleRanges, newRanges);\n    return changed;\n  }\n  class PolarAreaController extends DatasetController {\n    constructor(chart, datasetIndex) {\n      super(chart, datasetIndex);\n      this.innerRadius = undefined;\n      this.outerRadius = undefined;\n    }\n    getLabelAndValue(index) {\n      const meta = this._cachedMeta;\n      const chart = this.chart;\n      const labels = chart.data.labels || [];\n      const value = formatNumber(meta._parsed[index].r, chart.options.locale);\n      return {\n        label: labels[index] || '',\n        value\n      };\n    }\n    update(mode) {\n      const arcs = this._cachedMeta.data;\n      this._updateRadius();\n      this.updateElements(arcs, 0, arcs.length, mode);\n    }\n    _updateRadius() {\n      const chart = this.chart;\n      const chartArea = chart.chartArea;\n      const opts = chart.options;\n      const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n      const outerRadius = Math.max(minSize / 2, 0);\n      const innerRadius = Math.max(opts.cutoutPercentage ? outerRadius / 100 * opts.cutoutPercentage : 1, 0);\n      const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n      this.outerRadius = outerRadius - radiusLength * this.index;\n      this.innerRadius = this.outerRadius - radiusLength;\n    }\n    updateElements(arcs, start, count, mode) {\n      const reset = mode === 'reset';\n      const chart = this.chart;\n      const dataset = this.getDataset();\n      const opts = chart.options;\n      const animationOpts = opts.animation;\n      const scale = this._cachedMeta.rScale;\n      const centerX = scale.xCenter;\n      const centerY = scale.yCenter;\n      const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n      let angle = datasetStartAngle;\n      let i;\n      const defaultAngle = 360 / this.countVisibleElements();\n      for (i = 0; i < start; ++i) {\n        angle += this._computeAngle(i, mode, defaultAngle);\n      }\n      for (i = start; i < start + count; i++) {\n        const arc = arcs[i];\n        let startAngle = angle;\n        let endAngle = angle + this._computeAngle(i, mode, defaultAngle);\n        let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(dataset.data[i]) : 0;\n        angle = endAngle;\n        if (reset) {\n          if (animationOpts.animateScale) {\n            outerRadius = 0;\n          }\n          if (animationOpts.animateRotate) {\n            startAngle = endAngle = datasetStartAngle;\n          }\n        }\n        const properties = {\n          x: centerX,\n          y: centerY,\n          innerRadius: 0,\n          outerRadius,\n          startAngle,\n          endAngle,\n          options: this.resolveDataElementOptions(i, arc.active ? 'active' : mode)\n        };\n        this.updateElement(arc, i, properties, mode);\n      }\n    }\n    countVisibleElements() {\n      const dataset = this.getDataset();\n      const meta = this._cachedMeta;\n      let count = 0;\n      meta.data.forEach((element, index) => {\n        if (!isNaN(dataset.data[index]) && this.chart.getDataVisibility(index)) {\n          count++;\n        }\n      });\n      return count;\n    }\n    _computeAngle(index, mode, defaultAngle) {\n      return this.chart.getDataVisibility(index) ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle) : 0;\n    }\n  }\n  PolarAreaController.id = 'polarArea';\n  PolarAreaController.defaults = {\n    dataElementType: 'arc',\n    animation: {\n      animateRotate: true,\n      animateScale: true\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'startAngle', 'endAngle', 'innerRadius', 'outerRadius']\n      }\n    },\n    indexAxis: 'r',\n    startAngle: 0\n  };\n  PolarAreaController.overrides = {\n    aspectRatio: 1,\n    plugins: {\n      legend: {\n        labels: {\n          generateLabels(chart) {\n            const data = chart.data;\n            if (data.labels.length && data.datasets.length) {\n              const {\n                labels: {\n                  pointStyle\n                }\n              } = chart.legend.options;\n              return data.labels.map((label, i) => {\n                const meta = chart.getDatasetMeta(0);\n                const style = meta.controller.getStyle(i);\n                return {\n                  text: label,\n                  fillStyle: style.backgroundColor,\n                  strokeStyle: style.borderColor,\n                  lineWidth: style.borderWidth,\n                  pointStyle: pointStyle,\n                  hidden: !chart.getDataVisibility(i),\n                  index: i\n                };\n              });\n            }\n            return [];\n          }\n        },\n        onClick(e, legendItem, legend) {\n          legend.chart.toggleDataVisibility(legendItem.index);\n          legend.chart.update();\n        }\n      },\n      tooltip: {\n        callbacks: {\n          title() {\n            return '';\n          },\n          label(context) {\n            return context.chart.data.labels[context.dataIndex] + ': ' + context.formattedValue;\n          }\n        }\n      }\n    },\n    scales: {\n      r: {\n        type: 'radialLinear',\n        angleLines: {\n          display: false\n        },\n        beginAtZero: true,\n        grid: {\n          circular: true\n        },\n        pointLabels: {\n          display: false\n        },\n        startAngle: 0\n      }\n    }\n  };\n  class PieController extends DoughnutController {}\n  PieController.id = 'pie';\n  PieController.defaults = {\n    cutout: 0,\n    rotation: 0,\n    circumference: 360,\n    radius: '100%'\n  };\n  class RadarController extends DatasetController {\n    getLabelAndValue(index) {\n      const vScale = this._cachedMeta.vScale;\n      const parsed = this.getParsed(index);\n      return {\n        label: vScale.getLabels()[index],\n        value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n      };\n    }\n    update(mode) {\n      const meta = this._cachedMeta;\n      const line = meta.dataset;\n      const points = meta.data || [];\n      const labels = meta.iScale.getLabels();\n      line.points = points;\n      if (mode !== 'resize') {\n        const options = this.resolveDatasetElementOptions(mode);\n        if (!this.options.showLine) {\n          options.borderWidth = 0;\n        }\n        const properties = {\n          _loop: true,\n          _fullLoop: labels.length === points.length,\n          options\n        };\n        this.updateElement(line, undefined, properties, mode);\n      }\n      this.updateElements(points, 0, points.length, mode);\n    }\n    updateElements(points, start, count, mode) {\n      const dataset = this.getDataset();\n      const scale = this._cachedMeta.rScale;\n      const reset = mode === 'reset';\n      for (let i = start; i < start + count; i++) {\n        const point = points[i];\n        const options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n        const pointPosition = scale.getPointPositionForValue(i, dataset.data[i]);\n        const x = reset ? scale.xCenter : pointPosition.x;\n        const y = reset ? scale.yCenter : pointPosition.y;\n        const properties = {\n          x,\n          y,\n          angle: pointPosition.angle,\n          skip: isNaN(x) || isNaN(y),\n          options\n        };\n        this.updateElement(point, i, properties, mode);\n      }\n    }\n  }\n  RadarController.id = 'radar';\n  RadarController.defaults = {\n    datasetElementType: 'line',\n    dataElementType: 'point',\n    indexAxis: 'r',\n    showLine: true,\n    elements: {\n      line: {\n        fill: 'start'\n      }\n    }\n  };\n  RadarController.overrides = {\n    aspectRatio: 1,\n    scales: {\n      r: {\n        type: 'radialLinear'\n      }\n    }\n  };\n  class ScatterController extends LineController {}\n  ScatterController.id = 'scatter';\n  ScatterController.defaults = {\n    showLine: false,\n    fill: false\n  };\n  ScatterController.overrides = {\n    interaction: {\n      mode: 'point'\n    },\n    plugins: {\n      tooltip: {\n        callbacks: {\n          title() {\n            return '';\n          },\n          label(item) {\n            return '(' + item.label + ', ' + item.formattedValue + ')';\n          }\n        }\n      }\n    },\n    scales: {\n      x: {\n        type: 'linear'\n      },\n      y: {\n        type: 'linear'\n      }\n    }\n  };\n  var controllers = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    BarController: BarController,\n    BubbleController: BubbleController,\n    DoughnutController: DoughnutController,\n    LineController: LineController,\n    PolarAreaController: PolarAreaController,\n    PieController: PieController,\n    RadarController: RadarController,\n    ScatterController: ScatterController\n  });\n  function clipArc(ctx, element, endAngle) {\n    const {\n      startAngle,\n      pixelMargin,\n      x,\n      y,\n      outerRadius,\n      innerRadius\n    } = element;\n    let angleMargin = pixelMargin / outerRadius;\n    ctx.beginPath();\n    ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n    if (innerRadius > pixelMargin) {\n      angleMargin = pixelMargin / innerRadius;\n      ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n    } else {\n      ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n    }\n    ctx.closePath();\n    ctx.clip();\n  }\n  function toRadiusCorners(value) {\n    return _readValueToProps(value, ['outerStart', 'outerEnd', 'innerStart', 'innerEnd']);\n  }\n  function parseBorderRadius$1(arc, innerRadius, outerRadius, angleDelta) {\n    const o = toRadiusCorners(arc.options.borderRadius);\n    const halfThickness = (outerRadius - innerRadius) / 2;\n    const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n    const computeOuterLimit = val => {\n      const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n      return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n    };\n    return {\n      outerStart: computeOuterLimit(o.outerStart),\n      outerEnd: computeOuterLimit(o.outerEnd),\n      innerStart: _limitValue(o.innerStart, 0, innerLimit),\n      innerEnd: _limitValue(o.innerEnd, 0, innerLimit)\n    };\n  }\n  function rThetaToXY(r, theta, x, y) {\n    return {\n      x: x + r * Math.cos(theta),\n      y: y + r * Math.sin(theta)\n    };\n  }\n  function pathArc(ctx, element, offset, spacing, end) {\n    const {\n      x,\n      y,\n      startAngle: start,\n      pixelMargin,\n      innerRadius: innerR\n    } = element;\n    const outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n    const innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n    let spacingOffset = 0;\n    const alpha = end - start;\n    if (spacing) {\n      const noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n      const noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n      const avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n      const adjustedAngle = avNogSpacingRadius !== 0 ? alpha * avNogSpacingRadius / (avNogSpacingRadius + spacing) : alpha;\n      spacingOffset = (alpha - adjustedAngle) / 2;\n    }\n    const beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n    const angleOffset = (alpha - beta) / 2;\n    const startAngle = start + angleOffset + spacingOffset;\n    const endAngle = end - angleOffset - spacingOffset;\n    const {\n      outerStart,\n      outerEnd,\n      innerStart,\n      innerEnd\n    } = parseBorderRadius$1(element, innerRadius, outerRadius, endAngle - startAngle);\n    const outerStartAdjustedRadius = outerRadius - outerStart;\n    const outerEndAdjustedRadius = outerRadius - outerEnd;\n    const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n    const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n    const innerStartAdjustedRadius = innerRadius + innerStart;\n    const innerEndAdjustedRadius = innerRadius + innerEnd;\n    const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n    const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n    ctx.beginPath();\n    ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerEndAdjustedAngle);\n    if (outerEnd > 0) {\n      const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n    }\n    const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n    ctx.lineTo(p4.x, p4.y);\n    if (innerEnd > 0) {\n      const pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n    }\n    ctx.arc(x, y, innerRadius, endAngle - innerEnd / innerRadius, startAngle + innerStart / innerRadius, true);\n    if (innerStart > 0) {\n      const pCenter = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n    }\n    const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n    ctx.lineTo(p8.x, p8.y);\n    if (outerStart > 0) {\n      const pCenter = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n    }\n    ctx.closePath();\n  }\n  function drawArc(ctx, element, offset, spacing) {\n    const {\n      fullCircles,\n      startAngle,\n      circumference\n    } = element;\n    let endAngle = element.endAngle;\n    if (fullCircles) {\n      pathArc(ctx, element, offset, spacing, startAngle + TAU);\n      for (let i = 0; i < fullCircles; ++i) {\n        ctx.fill();\n      }\n      if (!isNaN(circumference)) {\n        endAngle = startAngle + circumference % TAU;\n        if (circumference % TAU === 0) {\n          endAngle += TAU;\n        }\n      }\n    }\n    pathArc(ctx, element, offset, spacing, endAngle);\n    ctx.fill();\n    return endAngle;\n  }\n  function drawFullCircleBorders(ctx, element, inner) {\n    const {\n      x,\n      y,\n      startAngle,\n      pixelMargin,\n      fullCircles\n    } = element;\n    const outerRadius = Math.max(element.outerRadius - pixelMargin, 0);\n    const innerRadius = element.innerRadius + pixelMargin;\n    let i;\n    if (inner) {\n      clipArc(ctx, element, startAngle + TAU);\n    }\n    ctx.beginPath();\n    ctx.arc(x, y, innerRadius, startAngle + TAU, startAngle, true);\n    for (i = 0; i < fullCircles; ++i) {\n      ctx.stroke();\n    }\n    ctx.beginPath();\n    ctx.arc(x, y, outerRadius, startAngle, startAngle + TAU);\n    for (i = 0; i < fullCircles; ++i) {\n      ctx.stroke();\n    }\n  }\n  function drawBorder(ctx, element, offset, spacing, endAngle) {\n    const {\n      options\n    } = element;\n    const {\n      borderWidth,\n      borderJoinStyle\n    } = options;\n    const inner = options.borderAlign === 'inner';\n    if (!borderWidth) {\n      return;\n    }\n    if (inner) {\n      ctx.lineWidth = borderWidth * 2;\n      ctx.lineJoin = borderJoinStyle || 'round';\n    } else {\n      ctx.lineWidth = borderWidth;\n      ctx.lineJoin = borderJoinStyle || 'bevel';\n    }\n    if (element.fullCircles) {\n      drawFullCircleBorders(ctx, element, inner);\n    }\n    if (inner) {\n      clipArc(ctx, element, endAngle);\n    }\n    pathArc(ctx, element, offset, spacing, endAngle);\n    ctx.stroke();\n  }\n  class ArcElement extends Element {\n    constructor(cfg) {\n      super();\n      this.options = undefined;\n      this.circumference = undefined;\n      this.startAngle = undefined;\n      this.endAngle = undefined;\n      this.innerRadius = undefined;\n      this.outerRadius = undefined;\n      this.pixelMargin = 0;\n      this.fullCircles = 0;\n      if (cfg) {\n        Object.assign(this, cfg);\n      }\n    }\n    inRange(chartX, chartY, useFinalPosition) {\n      const point = this.getProps(['x', 'y'], useFinalPosition);\n      const {\n        angle,\n        distance\n      } = getAngleFromPoint(point, {\n        x: chartX,\n        y: chartY\n      });\n      const {\n        startAngle,\n        endAngle,\n        innerRadius,\n        outerRadius,\n        circumference\n      } = this.getProps(['startAngle', 'endAngle', 'innerRadius', 'outerRadius', 'circumference'], useFinalPosition);\n      const rAdjust = this.options.spacing / 2;\n      const _circumference = valueOrDefault(circumference, endAngle - startAngle);\n      const betweenAngles = _circumference >= TAU || _angleBetween(angle, startAngle, endAngle);\n      const withinRadius = _isBetween(distance, innerRadius + rAdjust, outerRadius + rAdjust);\n      return betweenAngles && withinRadius;\n    }\n    getCenterPoint(useFinalPosition) {\n      const {\n        x,\n        y,\n        startAngle,\n        endAngle,\n        innerRadius,\n        outerRadius\n      } = this.getProps(['x', 'y', 'startAngle', 'endAngle', 'innerRadius', 'outerRadius', 'circumference'], useFinalPosition);\n      const {\n        offset,\n        spacing\n      } = this.options;\n      const halfAngle = (startAngle + endAngle) / 2;\n      const halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n      return {\n        x: x + Math.cos(halfAngle) * halfRadius,\n        y: y + Math.sin(halfAngle) * halfRadius\n      };\n    }\n    tooltipPosition(useFinalPosition) {\n      return this.getCenterPoint(useFinalPosition);\n    }\n    draw(ctx) {\n      const {\n        options,\n        circumference\n      } = this;\n      const offset = (options.offset || 0) / 2;\n      const spacing = (options.spacing || 0) / 2;\n      this.pixelMargin = options.borderAlign === 'inner' ? 0.33 : 0;\n      this.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n      if (circumference === 0 || this.innerRadius < 0 || this.outerRadius < 0) {\n        return;\n      }\n      ctx.save();\n      let radiusOffset = 0;\n      if (offset) {\n        radiusOffset = offset / 2;\n        const halfAngle = (this.startAngle + this.endAngle) / 2;\n        ctx.translate(Math.cos(halfAngle) * radiusOffset, Math.sin(halfAngle) * radiusOffset);\n        if (this.circumference >= PI) {\n          radiusOffset = offset;\n        }\n      }\n      ctx.fillStyle = options.backgroundColor;\n      ctx.strokeStyle = options.borderColor;\n      const endAngle = drawArc(ctx, this, radiusOffset, spacing);\n      drawBorder(ctx, this, radiusOffset, spacing, endAngle);\n      ctx.restore();\n    }\n  }\n  ArcElement.id = 'arc';\n  ArcElement.defaults = {\n    borderAlign: 'center',\n    borderColor: '#fff',\n    borderJoinStyle: undefined,\n    borderRadius: 0,\n    borderWidth: 2,\n    offset: 0,\n    spacing: 0,\n    angle: undefined\n  };\n  ArcElement.defaultRoutes = {\n    backgroundColor: 'backgroundColor'\n  };\n  function setStyle(ctx, options, style = options) {\n    ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n    ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n    ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n    ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n    ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n    ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n  }\n  function lineTo(ctx, previous, target) {\n    ctx.lineTo(target.x, target.y);\n  }\n  function getLineMethod(options) {\n    if (options.stepped) {\n      return _steppedLineTo;\n    }\n    if (options.tension || options.cubicInterpolationMode === 'monotone') {\n      return _bezierCurveTo;\n    }\n    return lineTo;\n  }\n  function pathVars(points, segment, params = {}) {\n    const count = points.length;\n    const {\n      start: paramsStart = 0,\n      end: paramsEnd = count - 1\n    } = params;\n    const {\n      start: segmentStart,\n      end: segmentEnd\n    } = segment;\n    const start = Math.max(paramsStart, segmentStart);\n    const end = Math.min(paramsEnd, segmentEnd);\n    const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n    return {\n      count,\n      start,\n      loop: segment.loop,\n      ilen: end < start && !outside ? count + end - start : end - start\n    };\n  }\n  function pathSegment(ctx, line, segment, params) {\n    const {\n      points,\n      options\n    } = line;\n    const {\n      count,\n      start,\n      loop,\n      ilen\n    } = pathVars(points, segment, params);\n    const lineMethod = getLineMethod(options);\n    let {\n      move = true,\n      reverse\n    } = params || {};\n    let i, point, prev;\n    for (i = 0; i <= ilen; ++i) {\n      point = points[(start + (reverse ? ilen - i : i)) % count];\n      if (point.skip) {\n        continue;\n      } else if (move) {\n        ctx.moveTo(point.x, point.y);\n        move = false;\n      } else {\n        lineMethod(ctx, prev, point, reverse, options.stepped);\n      }\n      prev = point;\n    }\n    if (loop) {\n      point = points[(start + (reverse ? ilen : 0)) % count];\n      lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n    return !!loop;\n  }\n  function fastPathSegment(ctx, line, segment, params) {\n    const points = line.points;\n    const {\n      count,\n      start,\n      ilen\n    } = pathVars(points, segment, params);\n    const {\n      move = true,\n      reverse\n    } = params || {};\n    let avgX = 0;\n    let countX = 0;\n    let i, point, prevX, minY, maxY, lastY;\n    const pointIndex = index => (start + (reverse ? ilen - index : index)) % count;\n    const drawX = () => {\n      if (minY !== maxY) {\n        ctx.lineTo(avgX, maxY);\n        ctx.lineTo(avgX, minY);\n        ctx.lineTo(avgX, lastY);\n      }\n    };\n    if (move) {\n      point = points[pointIndex(0)];\n      ctx.moveTo(point.x, point.y);\n    }\n    for (i = 0; i <= ilen; ++i) {\n      point = points[pointIndex(i)];\n      if (point.skip) {\n        continue;\n      }\n      const x = point.x;\n      const y = point.y;\n      const truncX = x | 0;\n      if (truncX === prevX) {\n        if (y < minY) {\n          minY = y;\n        } else if (y > maxY) {\n          maxY = y;\n        }\n        avgX = (countX * avgX + x) / ++countX;\n      } else {\n        drawX();\n        ctx.lineTo(x, y);\n        prevX = truncX;\n        countX = 0;\n        minY = maxY = y;\n      }\n      lastY = y;\n    }\n    drawX();\n  }\n  function _getSegmentMethod(line) {\n    const opts = line.options;\n    const borderDash = opts.borderDash && opts.borderDash.length;\n    const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n    return useFastPath ? fastPathSegment : pathSegment;\n  }\n  function _getInterpolationMethod(options) {\n    if (options.stepped) {\n      return _steppedInterpolation;\n    }\n    if (options.tension || options.cubicInterpolationMode === 'monotone') {\n      return _bezierInterpolation;\n    }\n    return _pointInLine;\n  }\n  function strokePathWithCache(ctx, line, start, count) {\n    let path = line._path;\n    if (!path) {\n      path = line._path = new Path2D();\n      if (line.path(path, start, count)) {\n        path.closePath();\n      }\n    }\n    setStyle(ctx, line.options);\n    ctx.stroke(path);\n  }\n  function strokePathDirect(ctx, line, start, count) {\n    const {\n      segments,\n      options\n    } = line;\n    const segmentMethod = _getSegmentMethod(line);\n    for (const segment of segments) {\n      setStyle(ctx, options, segment.style);\n      ctx.beginPath();\n      if (segmentMethod(ctx, line, segment, {\n        start,\n        end: start + count - 1\n      })) {\n        ctx.closePath();\n      }\n      ctx.stroke();\n    }\n  }\n  const usePath2D = typeof Path2D === 'function';\n  function draw(ctx, line, start, count) {\n    if (usePath2D && !line.options.segment) {\n      strokePathWithCache(ctx, line, start, count);\n    } else {\n      strokePathDirect(ctx, line, start, count);\n    }\n  }\n  class LineElement extends Element {\n    constructor(cfg) {\n      super();\n      this.animated = true;\n      this.options = undefined;\n      this._chart = undefined;\n      this._loop = undefined;\n      this._fullLoop = undefined;\n      this._path = undefined;\n      this._points = undefined;\n      this._segments = undefined;\n      this._decimated = false;\n      this._pointsUpdated = false;\n      this._datasetIndex = undefined;\n      if (cfg) {\n        Object.assign(this, cfg);\n      }\n    }\n    updateControlPoints(chartArea, indexAxis) {\n      const options = this.options;\n      if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !this._pointsUpdated) {\n        const loop = options.spanGaps ? this._loop : this._fullLoop;\n        _updateBezierControlPoints(this._points, options, chartArea, loop, indexAxis);\n        this._pointsUpdated = true;\n      }\n    }\n    set points(points) {\n      this._points = points;\n      delete this._segments;\n      delete this._path;\n      this._pointsUpdated = false;\n    }\n    get points() {\n      return this._points;\n    }\n    get segments() {\n      return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n    }\n    first() {\n      const segments = this.segments;\n      const points = this.points;\n      return segments.length && points[segments[0].start];\n    }\n    last() {\n      const segments = this.segments;\n      const points = this.points;\n      const count = segments.length;\n      return count && points[segments[count - 1].end];\n    }\n    interpolate(point, property) {\n      const options = this.options;\n      const value = point[property];\n      const points = this.points;\n      const segments = _boundSegments(this, {\n        property,\n        start: value,\n        end: value\n      });\n      if (!segments.length) {\n        return;\n      }\n      const result = [];\n      const _interpolate = _getInterpolationMethod(options);\n      let i, ilen;\n      for (i = 0, ilen = segments.length; i < ilen; ++i) {\n        const {\n          start,\n          end\n        } = segments[i];\n        const p1 = points[start];\n        const p2 = points[end];\n        if (p1 === p2) {\n          result.push(p1);\n          continue;\n        }\n        const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n        const interpolated = _interpolate(p1, p2, t, options.stepped);\n        interpolated[property] = point[property];\n        result.push(interpolated);\n      }\n      return result.length === 1 ? result[0] : result;\n    }\n    pathSegment(ctx, segment, params) {\n      const segmentMethod = _getSegmentMethod(this);\n      return segmentMethod(ctx, this, segment, params);\n    }\n    path(ctx, start, count) {\n      const segments = this.segments;\n      const segmentMethod = _getSegmentMethod(this);\n      let loop = this._loop;\n      start = start || 0;\n      count = count || this.points.length - start;\n      for (const segment of segments) {\n        loop &= segmentMethod(ctx, this, segment, {\n          start,\n          end: start + count - 1\n        });\n      }\n      return !!loop;\n    }\n    draw(ctx, chartArea, start, count) {\n      const options = this.options || {};\n      const points = this.points || [];\n      if (points.length && options.borderWidth) {\n        ctx.save();\n        draw(ctx, this, start, count);\n        ctx.restore();\n      }\n      if (this.animated) {\n        this._pointsUpdated = false;\n        this._path = undefined;\n      }\n    }\n  }\n  LineElement.id = 'line';\n  LineElement.defaults = {\n    borderCapStyle: 'butt',\n    borderDash: [],\n    borderDashOffset: 0,\n    borderJoinStyle: 'miter',\n    borderWidth: 3,\n    capBezierPoints: true,\n    cubicInterpolationMode: 'default',\n    fill: false,\n    spanGaps: false,\n    stepped: false,\n    tension: 0\n  };\n  LineElement.defaultRoutes = {\n    backgroundColor: 'backgroundColor',\n    borderColor: 'borderColor'\n  };\n  LineElement.descriptors = {\n    _scriptable: true,\n    _indexable: name => name !== 'borderDash' && name !== 'fill'\n  };\n  function inRange$1(el, pos, axis, useFinalPosition) {\n    const options = el.options;\n    const {\n      [axis]: value\n    } = el.getProps([axis], useFinalPosition);\n    return Math.abs(pos - value) < options.radius + options.hitRadius;\n  }\n  class PointElement extends Element {\n    constructor(cfg) {\n      super();\n      this.options = undefined;\n      this.parsed = undefined;\n      this.skip = undefined;\n      this.stop = undefined;\n      if (cfg) {\n        Object.assign(this, cfg);\n      }\n    }\n    inRange(mouseX, mouseY, useFinalPosition) {\n      const options = this.options;\n      const {\n        x,\n        y\n      } = this.getProps(['x', 'y'], useFinalPosition);\n      return Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2) < Math.pow(options.hitRadius + options.radius, 2);\n    }\n    inXRange(mouseX, useFinalPosition) {\n      return inRange$1(this, mouseX, 'x', useFinalPosition);\n    }\n    inYRange(mouseY, useFinalPosition) {\n      return inRange$1(this, mouseY, 'y', useFinalPosition);\n    }\n    getCenterPoint(useFinalPosition) {\n      const {\n        x,\n        y\n      } = this.getProps(['x', 'y'], useFinalPosition);\n      return {\n        x,\n        y\n      };\n    }\n    size(options) {\n      options = options || this.options || {};\n      let radius = options.radius || 0;\n      radius = Math.max(radius, radius && options.hoverRadius || 0);\n      const borderWidth = radius && options.borderWidth || 0;\n      return (radius + borderWidth) * 2;\n    }\n    draw(ctx, area) {\n      const options = this.options;\n      if (this.skip || options.radius < 0.1 || !_isPointInArea(this, area, this.size(options) / 2)) {\n        return;\n      }\n      ctx.strokeStyle = options.borderColor;\n      ctx.lineWidth = options.borderWidth;\n      ctx.fillStyle = options.backgroundColor;\n      drawPoint(ctx, options, this.x, this.y);\n    }\n    getRange() {\n      const options = this.options || {};\n      return options.radius + options.hitRadius;\n    }\n  }\n  PointElement.id = 'point';\n  PointElement.defaults = {\n    borderWidth: 1,\n    hitRadius: 1,\n    hoverBorderWidth: 1,\n    hoverRadius: 4,\n    pointStyle: 'circle',\n    radius: 3,\n    rotation: 0\n  };\n  PointElement.defaultRoutes = {\n    backgroundColor: 'backgroundColor',\n    borderColor: 'borderColor'\n  };\n  function getBarBounds(bar, useFinalPosition) {\n    const {\n      x,\n      y,\n      base,\n      width,\n      height\n    } = bar.getProps(['x', 'y', 'base', 'width', 'height'], useFinalPosition);\n    let left, right, top, bottom, half;\n    if (bar.horizontal) {\n      half = height / 2;\n      left = Math.min(x, base);\n      right = Math.max(x, base);\n      top = y - half;\n      bottom = y + half;\n    } else {\n      half = width / 2;\n      left = x - half;\n      right = x + half;\n      top = Math.min(y, base);\n      bottom = Math.max(y, base);\n    }\n    return {\n      left,\n      top,\n      right,\n      bottom\n    };\n  }\n  function skipOrLimit(skip, value, min, max) {\n    return skip ? 0 : _limitValue(value, min, max);\n  }\n  function parseBorderWidth(bar, maxW, maxH) {\n    const value = bar.options.borderWidth;\n    const skip = bar.borderSkipped;\n    const o = toTRBL(value);\n    return {\n      t: skipOrLimit(skip.top, o.top, 0, maxH),\n      r: skipOrLimit(skip.right, o.right, 0, maxW),\n      b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n      l: skipOrLimit(skip.left, o.left, 0, maxW)\n    };\n  }\n  function parseBorderRadius(bar, maxW, maxH) {\n    const {\n      enableBorderRadius\n    } = bar.getProps(['enableBorderRadius']);\n    const value = bar.options.borderRadius;\n    const o = toTRBLCorners(value);\n    const maxR = Math.min(maxW, maxH);\n    const skip = bar.borderSkipped;\n    const enableBorder = enableBorderRadius || isObject(value);\n    return {\n      topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n      topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n      bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n      bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n    };\n  }\n  function boundingRects(bar) {\n    const bounds = getBarBounds(bar);\n    const width = bounds.right - bounds.left;\n    const height = bounds.bottom - bounds.top;\n    const border = parseBorderWidth(bar, width / 2, height / 2);\n    const radius = parseBorderRadius(bar, width / 2, height / 2);\n    return {\n      outer: {\n        x: bounds.left,\n        y: bounds.top,\n        w: width,\n        h: height,\n        radius\n      },\n      inner: {\n        x: bounds.left + border.l,\n        y: bounds.top + border.t,\n        w: width - border.l - border.r,\n        h: height - border.t - border.b,\n        radius: {\n          topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n          topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n          bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n          bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r))\n        }\n      }\n    };\n  }\n  function inRange(bar, x, y, useFinalPosition) {\n    const skipX = x === null;\n    const skipY = y === null;\n    const skipBoth = skipX && skipY;\n    const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n    return bounds && (skipX || _isBetween(x, bounds.left, bounds.right)) && (skipY || _isBetween(y, bounds.top, bounds.bottom));\n  }\n  function hasRadius(radius) {\n    return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n  }\n  function addNormalRectPath(ctx, rect) {\n    ctx.rect(rect.x, rect.y, rect.w, rect.h);\n  }\n  function inflateRect(rect, amount, refRect = {}) {\n    const x = rect.x !== refRect.x ? -amount : 0;\n    const y = rect.y !== refRect.y ? -amount : 0;\n    const w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\n    const h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\n    return {\n      x: rect.x + x,\n      y: rect.y + y,\n      w: rect.w + w,\n      h: rect.h + h,\n      radius: rect.radius\n    };\n  }\n  class BarElement extends Element {\n    constructor(cfg) {\n      super();\n      this.options = undefined;\n      this.horizontal = undefined;\n      this.base = undefined;\n      this.width = undefined;\n      this.height = undefined;\n      this.inflateAmount = undefined;\n      if (cfg) {\n        Object.assign(this, cfg);\n      }\n    }\n    draw(ctx) {\n      const {\n        inflateAmount,\n        options: {\n          borderColor,\n          backgroundColor\n        }\n      } = this;\n      const {\n        inner,\n        outer\n      } = boundingRects(this);\n      const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n      ctx.save();\n      if (outer.w !== inner.w || outer.h !== inner.h) {\n        ctx.beginPath();\n        addRectPath(ctx, inflateRect(outer, inflateAmount, inner));\n        ctx.clip();\n        addRectPath(ctx, inflateRect(inner, -inflateAmount, outer));\n        ctx.fillStyle = borderColor;\n        ctx.fill('evenodd');\n      }\n      ctx.beginPath();\n      addRectPath(ctx, inflateRect(inner, inflateAmount));\n      ctx.fillStyle = backgroundColor;\n      ctx.fill();\n      ctx.restore();\n    }\n    inRange(mouseX, mouseY, useFinalPosition) {\n      return inRange(this, mouseX, mouseY, useFinalPosition);\n    }\n    inXRange(mouseX, useFinalPosition) {\n      return inRange(this, mouseX, null, useFinalPosition);\n    }\n    inYRange(mouseY, useFinalPosition) {\n      return inRange(this, null, mouseY, useFinalPosition);\n    }\n    getCenterPoint(useFinalPosition) {\n      const {\n        x,\n        y,\n        base,\n        horizontal\n      } = this.getProps(['x', 'y', 'base', 'horizontal'], useFinalPosition);\n      return {\n        x: horizontal ? (x + base) / 2 : x,\n        y: horizontal ? y : (y + base) / 2\n      };\n    }\n    getRange(axis) {\n      return axis === 'x' ? this.width / 2 : this.height / 2;\n    }\n  }\n  BarElement.id = 'bar';\n  BarElement.defaults = {\n    borderSkipped: 'start',\n    borderWidth: 0,\n    borderRadius: 0,\n    inflateAmount: 'auto',\n    pointStyle: undefined\n  };\n  BarElement.defaultRoutes = {\n    backgroundColor: 'backgroundColor',\n    borderColor: 'borderColor'\n  };\n  var elements = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    ArcElement: ArcElement,\n    LineElement: LineElement,\n    PointElement: PointElement,\n    BarElement: BarElement\n  });\n  function lttbDecimation(data, start, count, availableWidth, options) {\n    const samples = options.samples || availableWidth;\n    if (samples >= count) {\n      return data.slice(start, start + count);\n    }\n    const decimated = [];\n    const bucketWidth = (count - 2) / (samples - 2);\n    let sampledIndex = 0;\n    const endIndex = start + count - 1;\n    let a = start;\n    let i, maxAreaPoint, maxArea, area, nextA;\n    decimated[sampledIndex++] = data[a];\n    for (i = 0; i < samples - 2; i++) {\n      let avgX = 0;\n      let avgY = 0;\n      let j;\n      const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n      const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n      const avgRangeLength = avgRangeEnd - avgRangeStart;\n      for (j = avgRangeStart; j < avgRangeEnd; j++) {\n        avgX += data[j].x;\n        avgY += data[j].y;\n      }\n      avgX /= avgRangeLength;\n      avgY /= avgRangeLength;\n      const rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n      const rangeTo = Math.min(Math.floor((i + 1) * bucketWidth) + 1, count) + start;\n      const {\n        x: pointAx,\n        y: pointAy\n      } = data[a];\n      maxArea = area = -1;\n      for (j = rangeOffs; j < rangeTo; j++) {\n        area = 0.5 * Math.abs((pointAx - avgX) * (data[j].y - pointAy) - (pointAx - data[j].x) * (avgY - pointAy));\n        if (area > maxArea) {\n          maxArea = area;\n          maxAreaPoint = data[j];\n          nextA = j;\n        }\n      }\n      decimated[sampledIndex++] = maxAreaPoint;\n      a = nextA;\n    }\n    decimated[sampledIndex++] = data[endIndex];\n    return decimated;\n  }\n  function minMaxDecimation(data, start, count, availableWidth) {\n    let avgX = 0;\n    let countX = 0;\n    let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n    const decimated = [];\n    const endIndex = start + count - 1;\n    const xMin = data[start].x;\n    const xMax = data[endIndex].x;\n    const dx = xMax - xMin;\n    for (i = start; i < start + count; ++i) {\n      point = data[i];\n      x = (point.x - xMin) / dx * availableWidth;\n      y = point.y;\n      const truncX = x | 0;\n      if (truncX === prevX) {\n        if (y < minY) {\n          minY = y;\n          minIndex = i;\n        } else if (y > maxY) {\n          maxY = y;\n          maxIndex = i;\n        }\n        avgX = (countX * avgX + point.x) / ++countX;\n      } else {\n        const lastIndex = i - 1;\n        if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n          const intermediateIndex1 = Math.min(minIndex, maxIndex);\n          const intermediateIndex2 = Math.max(minIndex, maxIndex);\n          if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n            decimated.push({\n              ...data[intermediateIndex1],\n              x: avgX\n            });\n          }\n          if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n            decimated.push({\n              ...data[intermediateIndex2],\n              x: avgX\n            });\n          }\n        }\n        if (i > 0 && lastIndex !== startIndex) {\n          decimated.push(data[lastIndex]);\n        }\n        decimated.push(point);\n        prevX = truncX;\n        countX = 0;\n        minY = maxY = y;\n        minIndex = maxIndex = startIndex = i;\n      }\n    }\n    return decimated;\n  }\n  function cleanDecimatedDataset(dataset) {\n    if (dataset._decimated) {\n      const data = dataset._data;\n      delete dataset._decimated;\n      delete dataset._data;\n      Object.defineProperty(dataset, 'data', {\n        value: data\n      });\n    }\n  }\n  function cleanDecimatedData(chart) {\n    chart.data.datasets.forEach(dataset => {\n      cleanDecimatedDataset(dataset);\n    });\n  }\n  function getStartAndCountOfVisiblePointsSimplified(meta, points) {\n    const pointCount = points.length;\n    let start = 0;\n    let count;\n    const {\n      iScale\n    } = meta;\n    const {\n      min,\n      max,\n      minDefined,\n      maxDefined\n    } = iScale.getUserBounds();\n    if (minDefined) {\n      start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\n    }\n    if (maxDefined) {\n      count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n    } else {\n      count = pointCount - start;\n    }\n    return {\n      start,\n      count\n    };\n  }\n  var plugin_decimation = {\n    id: 'decimation',\n    defaults: {\n      algorithm: 'min-max',\n      enabled: false\n    },\n    beforeElementsUpdate: (chart, args, options) => {\n      if (!options.enabled) {\n        cleanDecimatedData(chart);\n        return;\n      }\n      const availableWidth = chart.width;\n      chart.data.datasets.forEach((dataset, datasetIndex) => {\n        const {\n          _data,\n          indexAxis\n        } = dataset;\n        const meta = chart.getDatasetMeta(datasetIndex);\n        const data = _data || dataset.data;\n        if (resolve([indexAxis, chart.options.indexAxis]) === 'y') {\n          return;\n        }\n        if (meta.type !== 'line') {\n          return;\n        }\n        const xAxis = chart.scales[meta.xAxisID];\n        if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n          return;\n        }\n        if (chart.options.parsing) {\n          return;\n        }\n        let {\n          start,\n          count\n        } = getStartAndCountOfVisiblePointsSimplified(meta, data);\n        const threshold = options.threshold || 4 * availableWidth;\n        if (count <= threshold) {\n          cleanDecimatedDataset(dataset);\n          return;\n        }\n        if (isNullOrUndef(_data)) {\n          dataset._data = data;\n          delete dataset.data;\n          Object.defineProperty(dataset, 'data', {\n            configurable: true,\n            enumerable: true,\n            get: function () {\n              return this._decimated;\n            },\n            set: function (d) {\n              this._data = d;\n            }\n          });\n        }\n        let decimated;\n        switch (options.algorithm) {\n          case 'lttb':\n            decimated = lttbDecimation(data, start, count, availableWidth, options);\n            break;\n          case 'min-max':\n            decimated = minMaxDecimation(data, start, count, availableWidth);\n            break;\n          default:\n            throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\n        }\n        dataset._decimated = decimated;\n      });\n    },\n    destroy(chart) {\n      cleanDecimatedData(chart);\n    }\n  };\n  function getLineByIndex(chart, index) {\n    const meta = chart.getDatasetMeta(index);\n    const visible = meta && chart.isDatasetVisible(index);\n    return visible ? meta.dataset : null;\n  }\n  function parseFillOption(line) {\n    const options = line.options;\n    const fillOption = options.fill;\n    let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n    if (fill === undefined) {\n      fill = !!options.backgroundColor;\n    }\n    if (fill === false || fill === null) {\n      return false;\n    }\n    if (fill === true) {\n      return 'origin';\n    }\n    return fill;\n  }\n  function decodeFill(line, index, count) {\n    const fill = parseFillOption(line);\n    if (isObject(fill)) {\n      return isNaN(fill.value) ? false : fill;\n    }\n    let target = parseFloat(fill);\n    if (isNumberFinite(target) && Math.floor(target) === target) {\n      if (fill[0] === '-' || fill[0] === '+') {\n        target = index + target;\n      }\n      if (target === index || target < 0 || target >= count) {\n        return false;\n      }\n      return target;\n    }\n    return ['origin', 'start', 'end', 'stack', 'shape'].indexOf(fill) >= 0 && fill;\n  }\n  function computeLinearBoundary(source) {\n    const {\n      scale = {},\n      fill\n    } = source;\n    let target = null;\n    let horizontal;\n    if (fill === 'start') {\n      target = scale.bottom;\n    } else if (fill === 'end') {\n      target = scale.top;\n    } else if (isObject(fill)) {\n      target = scale.getPixelForValue(fill.value);\n    } else if (scale.getBasePixel) {\n      target = scale.getBasePixel();\n    }\n    if (isNumberFinite(target)) {\n      horizontal = scale.isHorizontal();\n      return {\n        x: horizontal ? target : null,\n        y: horizontal ? null : target\n      };\n    }\n    return null;\n  }\n  class simpleArc {\n    constructor(opts) {\n      this.x = opts.x;\n      this.y = opts.y;\n      this.radius = opts.radius;\n    }\n    pathSegment(ctx, bounds, opts) {\n      const {\n        x,\n        y,\n        radius\n      } = this;\n      bounds = bounds || {\n        start: 0,\n        end: TAU\n      };\n      ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n      return !opts.bounds;\n    }\n    interpolate(point) {\n      const {\n        x,\n        y,\n        radius\n      } = this;\n      const angle = point.angle;\n      return {\n        x: x + Math.cos(angle) * radius,\n        y: y + Math.sin(angle) * radius,\n        angle\n      };\n    }\n  }\n  function computeCircularBoundary(source) {\n    const {\n      scale,\n      fill\n    } = source;\n    const options = scale.options;\n    const length = scale.getLabels().length;\n    const target = [];\n    const start = options.reverse ? scale.max : scale.min;\n    const end = options.reverse ? scale.min : scale.max;\n    let i, center, value;\n    if (fill === 'start') {\n      value = start;\n    } else if (fill === 'end') {\n      value = end;\n    } else if (isObject(fill)) {\n      value = fill.value;\n    } else {\n      value = scale.getBaseValue();\n    }\n    if (options.grid.circular) {\n      center = scale.getPointPositionForValue(0, start);\n      return new simpleArc({\n        x: center.x,\n        y: center.y,\n        radius: scale.getDistanceFromCenterForValue(value)\n      });\n    }\n    for (i = 0; i < length; ++i) {\n      target.push(scale.getPointPositionForValue(i, value));\n    }\n    return target;\n  }\n  function computeBoundary(source) {\n    const scale = source.scale || {};\n    if (scale.getPointPositionForValue) {\n      return computeCircularBoundary(source);\n    }\n    return computeLinearBoundary(source);\n  }\n  function findSegmentEnd(start, end, points) {\n    for (; end > start; end--) {\n      const point = points[end];\n      if (!isNaN(point.x) && !isNaN(point.y)) {\n        break;\n      }\n    }\n    return end;\n  }\n  function pointsFromSegments(boundary, line) {\n    const {\n      x = null,\n      y = null\n    } = boundary || {};\n    const linePoints = line.points;\n    const points = [];\n    line.segments.forEach(({\n      start,\n      end\n    }) => {\n      end = findSegmentEnd(start, end, linePoints);\n      const first = linePoints[start];\n      const last = linePoints[end];\n      if (y !== null) {\n        points.push({\n          x: first.x,\n          y\n        });\n        points.push({\n          x: last.x,\n          y\n        });\n      } else if (x !== null) {\n        points.push({\n          x,\n          y: first.y\n        });\n        points.push({\n          x,\n          y: last.y\n        });\n      }\n    });\n    return points;\n  }\n  function buildStackLine(source) {\n    const {\n      scale,\n      index,\n      line\n    } = source;\n    const points = [];\n    const segments = line.segments;\n    const sourcePoints = line.points;\n    const linesBelow = getLinesBelow(scale, index);\n    linesBelow.push(createBoundaryLine({\n      x: null,\n      y: scale.bottom\n    }, line));\n    for (let i = 0; i < segments.length; i++) {\n      const segment = segments[i];\n      for (let j = segment.start; j <= segment.end; j++) {\n        addPointsBelow(points, sourcePoints[j], linesBelow);\n      }\n    }\n    return new LineElement({\n      points,\n      options: {}\n    });\n  }\n  function getLinesBelow(scale, index) {\n    const below = [];\n    const metas = scale.getMatchingVisibleMetas('line');\n    for (let i = 0; i < metas.length; i++) {\n      const meta = metas[i];\n      if (meta.index === index) {\n        break;\n      }\n      if (!meta.hidden) {\n        below.unshift(meta.dataset);\n      }\n    }\n    return below;\n  }\n  function addPointsBelow(points, sourcePoint, linesBelow) {\n    const postponed = [];\n    for (let j = 0; j < linesBelow.length; j++) {\n      const line = linesBelow[j];\n      const {\n        first,\n        last,\n        point\n      } = findPoint(line, sourcePoint, 'x');\n      if (!point || first && last) {\n        continue;\n      }\n      if (first) {\n        postponed.unshift(point);\n      } else {\n        points.push(point);\n        if (!last) {\n          break;\n        }\n      }\n    }\n    points.push(...postponed);\n  }\n  function findPoint(line, sourcePoint, property) {\n    const point = line.interpolate(sourcePoint, property);\n    if (!point) {\n      return {};\n    }\n    const pointValue = point[property];\n    const segments = line.segments;\n    const linePoints = line.points;\n    let first = false;\n    let last = false;\n    for (let i = 0; i < segments.length; i++) {\n      const segment = segments[i];\n      const firstValue = linePoints[segment.start][property];\n      const lastValue = linePoints[segment.end][property];\n      if (_isBetween(pointValue, firstValue, lastValue)) {\n        first = pointValue === firstValue;\n        last = pointValue === lastValue;\n        break;\n      }\n    }\n    return {\n      first,\n      last,\n      point\n    };\n  }\n  function getTarget(source) {\n    const {\n      chart,\n      fill,\n      line\n    } = source;\n    if (isNumberFinite(fill)) {\n      return getLineByIndex(chart, fill);\n    }\n    if (fill === 'stack') {\n      return buildStackLine(source);\n    }\n    if (fill === 'shape') {\n      return true;\n    }\n    const boundary = computeBoundary(source);\n    if (boundary instanceof simpleArc) {\n      return boundary;\n    }\n    return createBoundaryLine(boundary, line);\n  }\n  function createBoundaryLine(boundary, line) {\n    let points = [];\n    let _loop = false;\n    if (isArray(boundary)) {\n      _loop = true;\n      points = boundary;\n    } else {\n      points = pointsFromSegments(boundary, line);\n    }\n    return points.length ? new LineElement({\n      points,\n      options: {\n        tension: 0\n      },\n      _loop,\n      _fullLoop: _loop\n    }) : null;\n  }\n  function resolveTarget(sources, index, propagate) {\n    const source = sources[index];\n    let fill = source.fill;\n    const visited = [index];\n    let target;\n    if (!propagate) {\n      return fill;\n    }\n    while (fill !== false && visited.indexOf(fill) === -1) {\n      if (!isNumberFinite(fill)) {\n        return fill;\n      }\n      target = sources[fill];\n      if (!target) {\n        return false;\n      }\n      if (target.visible) {\n        return fill;\n      }\n      visited.push(fill);\n      fill = target.fill;\n    }\n    return false;\n  }\n  function _clip(ctx, target, clipY) {\n    const {\n      segments,\n      points\n    } = target;\n    let first = true;\n    let lineLoop = false;\n    ctx.beginPath();\n    for (const segment of segments) {\n      const {\n        start,\n        end\n      } = segment;\n      const firstPoint = points[start];\n      const lastPoint = points[findSegmentEnd(start, end, points)];\n      if (first) {\n        ctx.moveTo(firstPoint.x, firstPoint.y);\n        first = false;\n      } else {\n        ctx.lineTo(firstPoint.x, clipY);\n        ctx.lineTo(firstPoint.x, firstPoint.y);\n      }\n      lineLoop = !!target.pathSegment(ctx, segment, {\n        move: lineLoop\n      });\n      if (lineLoop) {\n        ctx.closePath();\n      } else {\n        ctx.lineTo(lastPoint.x, clipY);\n      }\n    }\n    ctx.lineTo(target.first().x, clipY);\n    ctx.closePath();\n    ctx.clip();\n  }\n  function getBounds(property, first, last, loop) {\n    if (loop) {\n      return;\n    }\n    let start = first[property];\n    let end = last[property];\n    if (property === 'angle') {\n      start = _normalizeAngle(start);\n      end = _normalizeAngle(end);\n    }\n    return {\n      property,\n      start,\n      end\n    };\n  }\n  function _getEdge(a, b, prop, fn) {\n    if (a && b) {\n      return fn(a[prop], b[prop]);\n    }\n    return a ? a[prop] : b ? b[prop] : 0;\n  }\n  function _segments(line, target, property) {\n    const segments = line.segments;\n    const points = line.points;\n    const tpoints = target.points;\n    const parts = [];\n    for (const segment of segments) {\n      let {\n        start,\n        end\n      } = segment;\n      end = findSegmentEnd(start, end, points);\n      const bounds = getBounds(property, points[start], points[end], segment.loop);\n      if (!target.segments) {\n        parts.push({\n          source: segment,\n          target: bounds,\n          start: points[start],\n          end: points[end]\n        });\n        continue;\n      }\n      const targetSegments = _boundSegments(target, bounds);\n      for (const tgt of targetSegments) {\n        const subBounds = getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n        const fillSources = _boundSegment(segment, points, subBounds);\n        for (const fillSource of fillSources) {\n          parts.push({\n            source: fillSource,\n            target: tgt,\n            start: {\n              [property]: _getEdge(bounds, subBounds, 'start', Math.max)\n            },\n            end: {\n              [property]: _getEdge(bounds, subBounds, 'end', Math.min)\n            }\n          });\n        }\n      }\n    }\n    return parts;\n  }\n  function clipBounds(ctx, scale, bounds) {\n    const {\n      top,\n      bottom\n    } = scale.chart.chartArea;\n    const {\n      property,\n      start,\n      end\n    } = bounds || {};\n    if (property === 'x') {\n      ctx.beginPath();\n      ctx.rect(start, top, end - start, bottom - top);\n      ctx.clip();\n    }\n  }\n  function interpolatedLineTo(ctx, target, point, property) {\n    const interpolatedPoint = target.interpolate(point, property);\n    if (interpolatedPoint) {\n      ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n    }\n  }\n  function _fill(ctx, cfg) {\n    const {\n      line,\n      target,\n      property,\n      color,\n      scale\n    } = cfg;\n    const segments = _segments(line, target, property);\n    for (const {\n      source: src,\n      target: tgt,\n      start,\n      end\n    } of segments) {\n      const {\n        style: {\n          backgroundColor = color\n        } = {}\n      } = src;\n      const notShape = target !== true;\n      ctx.save();\n      ctx.fillStyle = backgroundColor;\n      clipBounds(ctx, scale, notShape && getBounds(property, start, end));\n      ctx.beginPath();\n      const lineLoop = !!line.pathSegment(ctx, src);\n      let loop;\n      if (notShape) {\n        if (lineLoop) {\n          ctx.closePath();\n        } else {\n          interpolatedLineTo(ctx, target, end, property);\n        }\n        const targetLoop = !!target.pathSegment(ctx, tgt, {\n          move: lineLoop,\n          reverse: true\n        });\n        loop = lineLoop && targetLoop;\n        if (!loop) {\n          interpolatedLineTo(ctx, target, start, property);\n        }\n      }\n      ctx.closePath();\n      ctx.fill(loop ? 'evenodd' : 'nonzero');\n      ctx.restore();\n    }\n  }\n  function doFill(ctx, cfg) {\n    const {\n      line,\n      target,\n      above,\n      below,\n      area,\n      scale\n    } = cfg;\n    const property = line._loop ? 'angle' : cfg.axis;\n    ctx.save();\n    if (property === 'x' && below !== above) {\n      _clip(ctx, target, area.top);\n      _fill(ctx, {\n        line,\n        target,\n        color: above,\n        scale,\n        property\n      });\n      ctx.restore();\n      ctx.save();\n      _clip(ctx, target, area.bottom);\n    }\n    _fill(ctx, {\n      line,\n      target,\n      color: below,\n      scale,\n      property\n    });\n    ctx.restore();\n  }\n  function drawfill(ctx, source, area) {\n    const target = getTarget(source);\n    const {\n      line,\n      scale,\n      axis\n    } = source;\n    const lineOpts = line.options;\n    const fillOption = lineOpts.fill;\n    const color = lineOpts.backgroundColor;\n    const {\n      above = color,\n      below = color\n    } = fillOption || {};\n    if (target && line.points.length) {\n      clipArea(ctx, area);\n      doFill(ctx, {\n        line,\n        target,\n        above,\n        below,\n        area,\n        scale,\n        axis\n      });\n      unclipArea(ctx);\n    }\n  }\n  var plugin_filler = {\n    id: 'filler',\n    afterDatasetsUpdate(chart, _args, options) {\n      const count = (chart.data.datasets || []).length;\n      const sources = [];\n      let meta, i, line, source;\n      for (i = 0; i < count; ++i) {\n        meta = chart.getDatasetMeta(i);\n        line = meta.dataset;\n        source = null;\n        if (line && line.options && line instanceof LineElement) {\n          source = {\n            visible: chart.isDatasetVisible(i),\n            index: i,\n            fill: decodeFill(line, i, count),\n            chart,\n            axis: meta.controller.options.indexAxis,\n            scale: meta.vScale,\n            line\n          };\n        }\n        meta.$filler = source;\n        sources.push(source);\n      }\n      for (i = 0; i < count; ++i) {\n        source = sources[i];\n        if (!source || source.fill === false) {\n          continue;\n        }\n        source.fill = resolveTarget(sources, i, options.propagate);\n      }\n    },\n    beforeDraw(chart, _args, options) {\n      const draw = options.drawTime === 'beforeDraw';\n      const metasets = chart.getSortedVisibleDatasetMetas();\n      const area = chart.chartArea;\n      for (let i = metasets.length - 1; i >= 0; --i) {\n        const source = metasets[i].$filler;\n        if (!source) {\n          continue;\n        }\n        source.line.updateControlPoints(area, source.axis);\n        if (draw) {\n          drawfill(chart.ctx, source, area);\n        }\n      }\n    },\n    beforeDatasetsDraw(chart, _args, options) {\n      if (options.drawTime !== 'beforeDatasetsDraw') {\n        return;\n      }\n      const metasets = chart.getSortedVisibleDatasetMetas();\n      for (let i = metasets.length - 1; i >= 0; --i) {\n        const source = metasets[i].$filler;\n        if (source) {\n          drawfill(chart.ctx, source, chart.chartArea);\n        }\n      }\n    },\n    beforeDatasetDraw(chart, args, options) {\n      const source = args.meta.$filler;\n      if (!source || source.fill === false || options.drawTime !== 'beforeDatasetDraw') {\n        return;\n      }\n      drawfill(chart.ctx, source, chart.chartArea);\n    },\n    defaults: {\n      propagate: true,\n      drawTime: 'beforeDatasetDraw'\n    }\n  };\n  const getBoxSize = (labelOpts, fontSize) => {\n    let {\n      boxHeight = fontSize,\n      boxWidth = fontSize\n    } = labelOpts;\n    if (labelOpts.usePointStyle) {\n      boxHeight = Math.min(boxHeight, fontSize);\n      boxWidth = Math.min(boxWidth, fontSize);\n    }\n    return {\n      boxWidth,\n      boxHeight,\n      itemHeight: Math.max(fontSize, boxHeight)\n    };\n  };\n  const itemsEqual = (a, b) => a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\n  class Legend extends Element {\n    constructor(config) {\n      super();\n      this._added = false;\n      this.legendHitBoxes = [];\n      this._hoveredItem = null;\n      this.doughnutMode = false;\n      this.chart = config.chart;\n      this.options = config.options;\n      this.ctx = config.ctx;\n      this.legendItems = undefined;\n      this.columnSizes = undefined;\n      this.lineWidths = undefined;\n      this.maxHeight = undefined;\n      this.maxWidth = undefined;\n      this.top = undefined;\n      this.bottom = undefined;\n      this.left = undefined;\n      this.right = undefined;\n      this.height = undefined;\n      this.width = undefined;\n      this._margins = undefined;\n      this.position = undefined;\n      this.weight = undefined;\n      this.fullSize = undefined;\n    }\n    update(maxWidth, maxHeight, margins) {\n      this.maxWidth = maxWidth;\n      this.maxHeight = maxHeight;\n      this._margins = margins;\n      this.setDimensions();\n      this.buildLabels();\n      this.fit();\n    }\n    setDimensions() {\n      if (this.isHorizontal()) {\n        this.width = this.maxWidth;\n        this.left = this._margins.left;\n        this.right = this.width;\n      } else {\n        this.height = this.maxHeight;\n        this.top = this._margins.top;\n        this.bottom = this.height;\n      }\n    }\n    buildLabels() {\n      const labelOpts = this.options.labels || {};\n      let legendItems = callback(labelOpts.generateLabels, [this.chart], this) || [];\n      if (labelOpts.filter) {\n        legendItems = legendItems.filter(item => labelOpts.filter(item, this.chart.data));\n      }\n      if (labelOpts.sort) {\n        legendItems = legendItems.sort((a, b) => labelOpts.sort(a, b, this.chart.data));\n      }\n      if (this.options.reverse) {\n        legendItems.reverse();\n      }\n      this.legendItems = legendItems;\n    }\n    fit() {\n      const {\n        options,\n        ctx\n      } = this;\n      if (!options.display) {\n        this.width = this.height = 0;\n        return;\n      }\n      const labelOpts = options.labels;\n      const labelFont = toFont(labelOpts.font);\n      const fontSize = labelFont.size;\n      const titleHeight = this._computeTitleHeight();\n      const {\n        boxWidth,\n        itemHeight\n      } = getBoxSize(labelOpts, fontSize);\n      let width, height;\n      ctx.font = labelFont.string;\n      if (this.isHorizontal()) {\n        width = this.maxWidth;\n        height = this._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n      } else {\n        height = this.maxHeight;\n        width = this._fitCols(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n      }\n      this.width = Math.min(width, options.maxWidth || this.maxWidth);\n      this.height = Math.min(height, options.maxHeight || this.maxHeight);\n    }\n    _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n      const {\n        ctx,\n        maxWidth,\n        options: {\n          labels: {\n            padding\n          }\n        }\n      } = this;\n      const hitboxes = this.legendHitBoxes = [];\n      const lineWidths = this.lineWidths = [0];\n      const lineHeight = itemHeight + padding;\n      let totalHeight = titleHeight;\n      ctx.textAlign = 'left';\n      ctx.textBaseline = 'middle';\n      let row = -1;\n      let top = -lineHeight;\n      this.legendItems.forEach((legendItem, i) => {\n        const itemWidth = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width;\n        if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n          totalHeight += lineHeight;\n          lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n          top += lineHeight;\n          row++;\n        }\n        hitboxes[i] = {\n          left: 0,\n          top,\n          row,\n          width: itemWidth,\n          height: itemHeight\n        };\n        lineWidths[lineWidths.length - 1] += itemWidth + padding;\n      });\n      return totalHeight;\n    }\n    _fitCols(titleHeight, fontSize, boxWidth, itemHeight) {\n      const {\n        ctx,\n        maxHeight,\n        options: {\n          labels: {\n            padding\n          }\n        }\n      } = this;\n      const hitboxes = this.legendHitBoxes = [];\n      const columnSizes = this.columnSizes = [];\n      const heightLimit = maxHeight - titleHeight;\n      let totalWidth = padding;\n      let currentColWidth = 0;\n      let currentColHeight = 0;\n      let left = 0;\n      let col = 0;\n      this.legendItems.forEach((legendItem, i) => {\n        const itemWidth = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width;\n        if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n          totalWidth += currentColWidth + padding;\n          columnSizes.push({\n            width: currentColWidth,\n            height: currentColHeight\n          });\n          left += currentColWidth + padding;\n          col++;\n          currentColWidth = currentColHeight = 0;\n        }\n        hitboxes[i] = {\n          left,\n          top: currentColHeight,\n          col,\n          width: itemWidth,\n          height: itemHeight\n        };\n        currentColWidth = Math.max(currentColWidth, itemWidth);\n        currentColHeight += itemHeight + padding;\n      });\n      totalWidth += currentColWidth;\n      columnSizes.push({\n        width: currentColWidth,\n        height: currentColHeight\n      });\n      return totalWidth;\n    }\n    adjustHitBoxes() {\n      if (!this.options.display) {\n        return;\n      }\n      const titleHeight = this._computeTitleHeight();\n      const {\n        legendHitBoxes: hitboxes,\n        options: {\n          align,\n          labels: {\n            padding\n          },\n          rtl\n        }\n      } = this;\n      const rtlHelper = getRtlAdapter(rtl, this.left, this.width);\n      if (this.isHorizontal()) {\n        let row = 0;\n        let left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n        for (const hitbox of hitboxes) {\n          if (row !== hitbox.row) {\n            row = hitbox.row;\n            left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n          }\n          hitbox.top += this.top + titleHeight + padding;\n          hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\n          left += hitbox.width + padding;\n        }\n      } else {\n        let col = 0;\n        let top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n        for (const hitbox of hitboxes) {\n          if (hitbox.col !== col) {\n            col = hitbox.col;\n            top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n          }\n          hitbox.top = top;\n          hitbox.left += this.left + padding;\n          hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(hitbox.left), hitbox.width);\n          top += hitbox.height + padding;\n        }\n      }\n    }\n    isHorizontal() {\n      return this.options.position === 'top' || this.options.position === 'bottom';\n    }\n    draw() {\n      if (this.options.display) {\n        const ctx = this.ctx;\n        clipArea(ctx, this);\n        this._draw();\n        unclipArea(ctx);\n      }\n    }\n    _draw() {\n      const {\n        options: opts,\n        columnSizes,\n        lineWidths,\n        ctx\n      } = this;\n      const {\n        align,\n        labels: labelOpts\n      } = opts;\n      const defaultColor = defaults.color;\n      const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n      const labelFont = toFont(labelOpts.font);\n      const {\n        color: fontColor,\n        padding\n      } = labelOpts;\n      const fontSize = labelFont.size;\n      const halfFontSize = fontSize / 2;\n      let cursor;\n      this.drawTitle();\n      ctx.textAlign = rtlHelper.textAlign('left');\n      ctx.textBaseline = 'middle';\n      ctx.lineWidth = 0.5;\n      ctx.font = labelFont.string;\n      const {\n        boxWidth,\n        boxHeight,\n        itemHeight\n      } = getBoxSize(labelOpts, fontSize);\n      const drawLegendBox = function (x, y, legendItem) {\n        if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n          return;\n        }\n        ctx.save();\n        const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n        ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n        ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n        ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n        ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n        ctx.lineWidth = lineWidth;\n        ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n        ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n        if (labelOpts.usePointStyle) {\n          const drawOptions = {\n            radius: boxWidth * Math.SQRT2 / 2,\n            pointStyle: legendItem.pointStyle,\n            rotation: legendItem.rotation,\n            borderWidth: lineWidth\n          };\n          const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n          const centerY = y + halfFontSize;\n          drawPoint(ctx, drawOptions, centerX, centerY);\n        } else {\n          const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n          const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n          const borderRadius = toTRBLCorners(legendItem.borderRadius);\n          ctx.beginPath();\n          if (Object.values(borderRadius).some(v => v !== 0)) {\n            addRoundedRectPath(ctx, {\n              x: xBoxLeft,\n              y: yBoxTop,\n              w: boxWidth,\n              h: boxHeight,\n              radius: borderRadius\n            });\n          } else {\n            ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n          }\n          ctx.fill();\n          if (lineWidth !== 0) {\n            ctx.stroke();\n          }\n        }\n        ctx.restore();\n      };\n      const fillText = function (x, y, legendItem) {\n        renderText(ctx, legendItem.text, x, y + itemHeight / 2, labelFont, {\n          strikethrough: legendItem.hidden,\n          textAlign: rtlHelper.textAlign(legendItem.textAlign)\n        });\n      };\n      const isHorizontal = this.isHorizontal();\n      const titleHeight = this._computeTitleHeight();\n      if (isHorizontal) {\n        cursor = {\n          x: _alignStartEnd(align, this.left + padding, this.right - lineWidths[0]),\n          y: this.top + padding + titleHeight,\n          line: 0\n        };\n      } else {\n        cursor = {\n          x: this.left + padding,\n          y: _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[0].height),\n          line: 0\n        };\n      }\n      overrideTextDirection(this.ctx, opts.textDirection);\n      const lineHeight = itemHeight + padding;\n      this.legendItems.forEach((legendItem, i) => {\n        ctx.strokeStyle = legendItem.fontColor || fontColor;\n        ctx.fillStyle = legendItem.fontColor || fontColor;\n        const textWidth = ctx.measureText(legendItem.text).width;\n        const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n        const width = boxWidth + halfFontSize + textWidth;\n        let x = cursor.x;\n        let y = cursor.y;\n        rtlHelper.setWidth(this.width);\n        if (isHorizontal) {\n          if (i > 0 && x + width + padding > this.right) {\n            y = cursor.y += lineHeight;\n            cursor.line++;\n            x = cursor.x = _alignStartEnd(align, this.left + padding, this.right - lineWidths[cursor.line]);\n          }\n        } else if (i > 0 && y + lineHeight > this.bottom) {\n          x = cursor.x = x + columnSizes[cursor.line].width + padding;\n          cursor.line++;\n          y = cursor.y = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[cursor.line].height);\n        }\n        const realX = rtlHelper.x(x);\n        drawLegendBox(realX, y, legendItem);\n        x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : this.right, opts.rtl);\n        fillText(rtlHelper.x(x), y, legendItem);\n        if (isHorizontal) {\n          cursor.x += width + padding;\n        } else {\n          cursor.y += lineHeight;\n        }\n      });\n      restoreTextDirection(this.ctx, opts.textDirection);\n    }\n    drawTitle() {\n      const opts = this.options;\n      const titleOpts = opts.title;\n      const titleFont = toFont(titleOpts.font);\n      const titlePadding = toPadding(titleOpts.padding);\n      if (!titleOpts.display) {\n        return;\n      }\n      const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n      const ctx = this.ctx;\n      const position = titleOpts.position;\n      const halfFontSize = titleFont.size / 2;\n      const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n      let y;\n      let left = this.left;\n      let maxWidth = this.width;\n      if (this.isHorizontal()) {\n        maxWidth = Math.max(...this.lineWidths);\n        y = this.top + topPaddingPlusHalfFontSize;\n        left = _alignStartEnd(opts.align, left, this.right - maxWidth);\n      } else {\n        const maxHeight = this.columnSizes.reduce((acc, size) => Math.max(acc, size.height), 0);\n        y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, this.top, this.bottom - maxHeight - opts.labels.padding - this._computeTitleHeight());\n      }\n      const x = _alignStartEnd(position, left, left + maxWidth);\n      ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n      ctx.textBaseline = 'middle';\n      ctx.strokeStyle = titleOpts.color;\n      ctx.fillStyle = titleOpts.color;\n      ctx.font = titleFont.string;\n      renderText(ctx, titleOpts.text, x, y, titleFont);\n    }\n    _computeTitleHeight() {\n      const titleOpts = this.options.title;\n      const titleFont = toFont(titleOpts.font);\n      const titlePadding = toPadding(titleOpts.padding);\n      return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n    }\n    _getLegendItemAt(x, y) {\n      let i, hitBox, lh;\n      if (_isBetween(x, this.left, this.right) && _isBetween(y, this.top, this.bottom)) {\n        lh = this.legendHitBoxes;\n        for (i = 0; i < lh.length; ++i) {\n          hitBox = lh[i];\n          if (_isBetween(x, hitBox.left, hitBox.left + hitBox.width) && _isBetween(y, hitBox.top, hitBox.top + hitBox.height)) {\n            return this.legendItems[i];\n          }\n        }\n      }\n      return null;\n    }\n    handleEvent(e) {\n      const opts = this.options;\n      if (!isListened(e.type, opts)) {\n        return;\n      }\n      const hoveredItem = this._getLegendItemAt(e.x, e.y);\n      if (e.type === 'mousemove') {\n        const previous = this._hoveredItem;\n        const sameItem = itemsEqual(previous, hoveredItem);\n        if (previous && !sameItem) {\n          callback(opts.onLeave, [e, previous, this], this);\n        }\n        this._hoveredItem = hoveredItem;\n        if (hoveredItem && !sameItem) {\n          callback(opts.onHover, [e, hoveredItem, this], this);\n        }\n      } else if (hoveredItem) {\n        callback(opts.onClick, [e, hoveredItem, this], this);\n      }\n    }\n  }\n  function isListened(type, opts) {\n    if (type === 'mousemove' && (opts.onHover || opts.onLeave)) {\n      return true;\n    }\n    if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n      return true;\n    }\n    return false;\n  }\n  var plugin_legend = {\n    id: 'legend',\n    _element: Legend,\n    start(chart, _args, options) {\n      const legend = chart.legend = new Legend({\n        ctx: chart.ctx,\n        options,\n        chart\n      });\n      layouts.configure(chart, legend, options);\n      layouts.addBox(chart, legend);\n    },\n    stop(chart) {\n      layouts.removeBox(chart, chart.legend);\n      delete chart.legend;\n    },\n    beforeUpdate(chart, _args, options) {\n      const legend = chart.legend;\n      layouts.configure(chart, legend, options);\n      legend.options = options;\n    },\n    afterUpdate(chart) {\n      const legend = chart.legend;\n      legend.buildLabels();\n      legend.adjustHitBoxes();\n    },\n    afterEvent(chart, args) {\n      if (!args.replay) {\n        chart.legend.handleEvent(args.event);\n      }\n    },\n    defaults: {\n      display: true,\n      position: 'top',\n      align: 'center',\n      fullSize: true,\n      reverse: false,\n      weight: 1000,\n      onClick(e, legendItem, legend) {\n        const index = legendItem.datasetIndex;\n        const ci = legend.chart;\n        if (ci.isDatasetVisible(index)) {\n          ci.hide(index);\n          legendItem.hidden = true;\n        } else {\n          ci.show(index);\n          legendItem.hidden = false;\n        }\n      },\n      onHover: null,\n      onLeave: null,\n      labels: {\n        color: ctx => ctx.chart.options.color,\n        boxWidth: 40,\n        padding: 10,\n        generateLabels(chart) {\n          const datasets = chart.data.datasets;\n          const {\n            labels: {\n              usePointStyle,\n              pointStyle,\n              textAlign,\n              color\n            }\n          } = chart.legend.options;\n          return chart._getSortedDatasetMetas().map(meta => {\n            const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n            const borderWidth = toPadding(style.borderWidth);\n            return {\n              text: datasets[meta.index].label,\n              fillStyle: style.backgroundColor,\n              fontColor: color,\n              hidden: !meta.visible,\n              lineCap: style.borderCapStyle,\n              lineDash: style.borderDash,\n              lineDashOffset: style.borderDashOffset,\n              lineJoin: style.borderJoinStyle,\n              lineWidth: (borderWidth.width + borderWidth.height) / 4,\n              strokeStyle: style.borderColor,\n              pointStyle: pointStyle || style.pointStyle,\n              rotation: style.rotation,\n              textAlign: textAlign || style.textAlign,\n              borderRadius: 0,\n              datasetIndex: meta.index\n            };\n          }, this);\n        }\n      },\n      title: {\n        color: ctx => ctx.chart.options.color,\n        display: false,\n        position: 'center',\n        text: ''\n      }\n    },\n    descriptors: {\n      _scriptable: name => !name.startsWith('on'),\n      labels: {\n        _scriptable: name => !['generateLabels', 'filter', 'sort'].includes(name)\n      }\n    }\n  };\n  class Title extends Element {\n    constructor(config) {\n      super();\n      this.chart = config.chart;\n      this.options = config.options;\n      this.ctx = config.ctx;\n      this._padding = undefined;\n      this.top = undefined;\n      this.bottom = undefined;\n      this.left = undefined;\n      this.right = undefined;\n      this.width = undefined;\n      this.height = undefined;\n      this.position = undefined;\n      this.weight = undefined;\n      this.fullSize = undefined;\n    }\n    update(maxWidth, maxHeight) {\n      const opts = this.options;\n      this.left = 0;\n      this.top = 0;\n      if (!opts.display) {\n        this.width = this.height = this.right = this.bottom = 0;\n        return;\n      }\n      this.width = this.right = maxWidth;\n      this.height = this.bottom = maxHeight;\n      const lineCount = isArray(opts.text) ? opts.text.length : 1;\n      this._padding = toPadding(opts.padding);\n      const textSize = lineCount * toFont(opts.font).lineHeight + this._padding.height;\n      if (this.isHorizontal()) {\n        this.height = textSize;\n      } else {\n        this.width = textSize;\n      }\n    }\n    isHorizontal() {\n      const pos = this.options.position;\n      return pos === 'top' || pos === 'bottom';\n    }\n    _drawArgs(offset) {\n      const {\n        top,\n        left,\n        bottom,\n        right,\n        options\n      } = this;\n      const align = options.align;\n      let rotation = 0;\n      let maxWidth, titleX, titleY;\n      if (this.isHorizontal()) {\n        titleX = _alignStartEnd(align, left, right);\n        titleY = top + offset;\n        maxWidth = right - left;\n      } else {\n        if (options.position === 'left') {\n          titleX = left + offset;\n          titleY = _alignStartEnd(align, bottom, top);\n          rotation = PI * -0.5;\n        } else {\n          titleX = right - offset;\n          titleY = _alignStartEnd(align, top, bottom);\n          rotation = PI * 0.5;\n        }\n        maxWidth = bottom - top;\n      }\n      return {\n        titleX,\n        titleY,\n        maxWidth,\n        rotation\n      };\n    }\n    draw() {\n      const ctx = this.ctx;\n      const opts = this.options;\n      if (!opts.display) {\n        return;\n      }\n      const fontOpts = toFont(opts.font);\n      const lineHeight = fontOpts.lineHeight;\n      const offset = lineHeight / 2 + this._padding.top;\n      const {\n        titleX,\n        titleY,\n        maxWidth,\n        rotation\n      } = this._drawArgs(offset);\n      renderText(ctx, opts.text, 0, 0, fontOpts, {\n        color: opts.color,\n        maxWidth,\n        rotation,\n        textAlign: _toLeftRightCenter(opts.align),\n        textBaseline: 'middle',\n        translation: [titleX, titleY]\n      });\n    }\n  }\n  function createTitle(chart, titleOpts) {\n    const title = new Title({\n      ctx: chart.ctx,\n      options: titleOpts,\n      chart\n    });\n    layouts.configure(chart, title, titleOpts);\n    layouts.addBox(chart, title);\n    chart.titleBlock = title;\n  }\n  var plugin_title = {\n    id: 'title',\n    _element: Title,\n    start(chart, _args, options) {\n      createTitle(chart, options);\n    },\n    stop(chart) {\n      const titleBlock = chart.titleBlock;\n      layouts.removeBox(chart, titleBlock);\n      delete chart.titleBlock;\n    },\n    beforeUpdate(chart, _args, options) {\n      const title = chart.titleBlock;\n      layouts.configure(chart, title, options);\n      title.options = options;\n    },\n    defaults: {\n      align: 'center',\n      display: false,\n      font: {\n        weight: 'bold'\n      },\n      fullSize: true,\n      padding: 10,\n      position: 'top',\n      text: '',\n      weight: 2000\n    },\n    defaultRoutes: {\n      color: 'color'\n    },\n    descriptors: {\n      _scriptable: true,\n      _indexable: false\n    }\n  };\n  const map = new WeakMap();\n  var plugin_subtitle = {\n    id: 'subtitle',\n    start(chart, _args, options) {\n      const title = new Title({\n        ctx: chart.ctx,\n        options,\n        chart\n      });\n      layouts.configure(chart, title, options);\n      layouts.addBox(chart, title);\n      map.set(chart, title);\n    },\n    stop(chart) {\n      layouts.removeBox(chart, map.get(chart));\n      map.delete(chart);\n    },\n    beforeUpdate(chart, _args, options) {\n      const title = map.get(chart);\n      layouts.configure(chart, title, options);\n      title.options = options;\n    },\n    defaults: {\n      align: 'center',\n      display: false,\n      font: {\n        weight: 'normal'\n      },\n      fullSize: true,\n      padding: 0,\n      position: 'top',\n      text: '',\n      weight: 1500\n    },\n    defaultRoutes: {\n      color: 'color'\n    },\n    descriptors: {\n      _scriptable: true,\n      _indexable: false\n    }\n  };\n  const positioners = {\n    average(items) {\n      if (!items.length) {\n        return false;\n      }\n      let i, len;\n      let x = 0;\n      let y = 0;\n      let count = 0;\n      for (i = 0, len = items.length; i < len; ++i) {\n        const el = items[i].element;\n        if (el && el.hasValue()) {\n          const pos = el.tooltipPosition();\n          x += pos.x;\n          y += pos.y;\n          ++count;\n        }\n      }\n      return {\n        x: x / count,\n        y: y / count\n      };\n    },\n    nearest(items, eventPosition) {\n      if (!items.length) {\n        return false;\n      }\n      let x = eventPosition.x;\n      let y = eventPosition.y;\n      let minDistance = Number.POSITIVE_INFINITY;\n      let i, len, nearestElement;\n      for (i = 0, len = items.length; i < len; ++i) {\n        const el = items[i].element;\n        if (el && el.hasValue()) {\n          const center = el.getCenterPoint();\n          const d = distanceBetweenPoints(eventPosition, center);\n          if (d < minDistance) {\n            minDistance = d;\n            nearestElement = el;\n          }\n        }\n      }\n      if (nearestElement) {\n        const tp = nearestElement.tooltipPosition();\n        x = tp.x;\n        y = tp.y;\n      }\n      return {\n        x,\n        y\n      };\n    }\n  };\n  function pushOrConcat(base, toPush) {\n    if (toPush) {\n      if (isArray(toPush)) {\n        Array.prototype.push.apply(base, toPush);\n      } else {\n        base.push(toPush);\n      }\n    }\n    return base;\n  }\n  function splitNewlines(str) {\n    if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n      return str.split('\\n');\n    }\n    return str;\n  }\n  function createTooltipItem(chart, item) {\n    const {\n      element,\n      datasetIndex,\n      index\n    } = item;\n    const controller = chart.getDatasetMeta(datasetIndex).controller;\n    const {\n      label,\n      value\n    } = controller.getLabelAndValue(index);\n    return {\n      chart,\n      label,\n      parsed: controller.getParsed(index),\n      raw: chart.data.datasets[datasetIndex].data[index],\n      formattedValue: value,\n      dataset: controller.getDataset(),\n      dataIndex: index,\n      datasetIndex,\n      element\n    };\n  }\n  function getTooltipSize(tooltip, options) {\n    const ctx = tooltip.chart.ctx;\n    const {\n      body,\n      footer,\n      title\n    } = tooltip;\n    const {\n      boxWidth,\n      boxHeight\n    } = options;\n    const bodyFont = toFont(options.bodyFont);\n    const titleFont = toFont(options.titleFont);\n    const footerFont = toFont(options.footerFont);\n    const titleLineCount = title.length;\n    const footerLineCount = footer.length;\n    const bodyLineItemCount = body.length;\n    const padding = toPadding(options.padding);\n    let height = padding.height;\n    let width = 0;\n    let combinedBodyLength = body.reduce((count, bodyItem) => count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n    combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n    if (titleLineCount) {\n      height += titleLineCount * titleFont.lineHeight + (titleLineCount - 1) * options.titleSpacing + options.titleMarginBottom;\n    }\n    if (combinedBodyLength) {\n      const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n      height += bodyLineItemCount * bodyLineHeight + (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight + (combinedBodyLength - 1) * options.bodySpacing;\n    }\n    if (footerLineCount) {\n      height += options.footerMarginTop + footerLineCount * footerFont.lineHeight + (footerLineCount - 1) * options.footerSpacing;\n    }\n    let widthPadding = 0;\n    const maxLineWidth = function (line) {\n      width = Math.max(width, ctx.measureText(line).width + widthPadding);\n    };\n    ctx.save();\n    ctx.font = titleFont.string;\n    each(tooltip.title, maxLineWidth);\n    ctx.font = bodyFont.string;\n    each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n    widthPadding = options.displayColors ? boxWidth + 2 + options.boxPadding : 0;\n    each(body, bodyItem => {\n      each(bodyItem.before, maxLineWidth);\n      each(bodyItem.lines, maxLineWidth);\n      each(bodyItem.after, maxLineWidth);\n    });\n    widthPadding = 0;\n    ctx.font = footerFont.string;\n    each(tooltip.footer, maxLineWidth);\n    ctx.restore();\n    width += padding.width;\n    return {\n      width,\n      height\n    };\n  }\n  function determineYAlign(chart, size) {\n    const {\n      y,\n      height\n    } = size;\n    if (y < height / 2) {\n      return 'top';\n    } else if (y > chart.height - height / 2) {\n      return 'bottom';\n    }\n    return 'center';\n  }\n  function doesNotFitWithAlign(xAlign, chart, options, size) {\n    const {\n      x,\n      width\n    } = size;\n    const caret = options.caretSize + options.caretPadding;\n    if (xAlign === 'left' && x + width + caret > chart.width) {\n      return true;\n    }\n    if (xAlign === 'right' && x - width - caret < 0) {\n      return true;\n    }\n  }\n  function determineXAlign(chart, options, size, yAlign) {\n    const {\n      x,\n      width\n    } = size;\n    const {\n      width: chartWidth,\n      chartArea: {\n        left,\n        right\n      }\n    } = chart;\n    let xAlign = 'center';\n    if (yAlign === 'center') {\n      xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n    } else if (x <= width / 2) {\n      xAlign = 'left';\n    } else if (x >= chartWidth - width / 2) {\n      xAlign = 'right';\n    }\n    if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n      xAlign = 'center';\n    }\n    return xAlign;\n  }\n  function determineAlignment(chart, options, size) {\n    const yAlign = size.yAlign || options.yAlign || determineYAlign(chart, size);\n    return {\n      xAlign: size.xAlign || options.xAlign || determineXAlign(chart, options, size, yAlign),\n      yAlign\n    };\n  }\n  function alignX(size, xAlign) {\n    let {\n      x,\n      width\n    } = size;\n    if (xAlign === 'right') {\n      x -= width;\n    } else if (xAlign === 'center') {\n      x -= width / 2;\n    }\n    return x;\n  }\n  function alignY(size, yAlign, paddingAndSize) {\n    let {\n      y,\n      height\n    } = size;\n    if (yAlign === 'top') {\n      y += paddingAndSize;\n    } else if (yAlign === 'bottom') {\n      y -= height + paddingAndSize;\n    } else {\n      y -= height / 2;\n    }\n    return y;\n  }\n  function getBackgroundPoint(options, size, alignment, chart) {\n    const {\n      caretSize,\n      caretPadding,\n      cornerRadius\n    } = options;\n    const {\n      xAlign,\n      yAlign\n    } = alignment;\n    const paddingAndSize = caretSize + caretPadding;\n    const {\n      topLeft,\n      topRight,\n      bottomLeft,\n      bottomRight\n    } = toTRBLCorners(cornerRadius);\n    let x = alignX(size, xAlign);\n    const y = alignY(size, yAlign, paddingAndSize);\n    if (yAlign === 'center') {\n      if (xAlign === 'left') {\n        x += paddingAndSize;\n      } else if (xAlign === 'right') {\n        x -= paddingAndSize;\n      }\n    } else if (xAlign === 'left') {\n      x -= Math.max(topLeft, bottomLeft) + caretSize;\n    } else if (xAlign === 'right') {\n      x += Math.max(topRight, bottomRight) + caretSize;\n    }\n    return {\n      x: _limitValue(x, 0, chart.width - size.width),\n      y: _limitValue(y, 0, chart.height - size.height)\n    };\n  }\n  function getAlignedX(tooltip, align, options) {\n    const padding = toPadding(options.padding);\n    return align === 'center' ? tooltip.x + tooltip.width / 2 : align === 'right' ? tooltip.x + tooltip.width - padding.right : tooltip.x + padding.left;\n  }\n  function getBeforeAfterBodyLines(callback) {\n    return pushOrConcat([], splitNewlines(callback));\n  }\n  function createTooltipContext(parent, tooltip, tooltipItems) {\n    return createContext(parent, {\n      tooltip,\n      tooltipItems,\n      type: 'tooltip'\n    });\n  }\n  function overrideCallbacks(callbacks, context) {\n    const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n    return override ? callbacks.override(override) : callbacks;\n  }\n  class Tooltip extends Element {\n    constructor(config) {\n      super();\n      this.opacity = 0;\n      this._active = [];\n      this._eventPosition = undefined;\n      this._size = undefined;\n      this._cachedAnimations = undefined;\n      this._tooltipItems = [];\n      this.$animations = undefined;\n      this.$context = undefined;\n      this.chart = config.chart || config._chart;\n      this._chart = this.chart;\n      this.options = config.options;\n      this.dataPoints = undefined;\n      this.title = undefined;\n      this.beforeBody = undefined;\n      this.body = undefined;\n      this.afterBody = undefined;\n      this.footer = undefined;\n      this.xAlign = undefined;\n      this.yAlign = undefined;\n      this.x = undefined;\n      this.y = undefined;\n      this.height = undefined;\n      this.width = undefined;\n      this.caretX = undefined;\n      this.caretY = undefined;\n      this.labelColors = undefined;\n      this.labelPointStyles = undefined;\n      this.labelTextColors = undefined;\n    }\n    initialize(options) {\n      this.options = options;\n      this._cachedAnimations = undefined;\n      this.$context = undefined;\n    }\n    _resolveAnimations() {\n      const cached = this._cachedAnimations;\n      if (cached) {\n        return cached;\n      }\n      const chart = this.chart;\n      const options = this.options.setContext(this.getContext());\n      const opts = options.enabled && chart.options.animation && options.animations;\n      const animations = new Animations(this.chart, opts);\n      if (opts._cacheable) {\n        this._cachedAnimations = Object.freeze(animations);\n      }\n      return animations;\n    }\n    getContext() {\n      return this.$context || (this.$context = createTooltipContext(this.chart.getContext(), this, this._tooltipItems));\n    }\n    getTitle(context, options) {\n      const {\n        callbacks\n      } = options;\n      const beforeTitle = callbacks.beforeTitle.apply(this, [context]);\n      const title = callbacks.title.apply(this, [context]);\n      const afterTitle = callbacks.afterTitle.apply(this, [context]);\n      let lines = [];\n      lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n      lines = pushOrConcat(lines, splitNewlines(title));\n      lines = pushOrConcat(lines, splitNewlines(afterTitle));\n      return lines;\n    }\n    getBeforeBody(tooltipItems, options) {\n      return getBeforeAfterBodyLines(options.callbacks.beforeBody.apply(this, [tooltipItems]));\n    }\n    getBody(tooltipItems, options) {\n      const {\n        callbacks\n      } = options;\n      const bodyItems = [];\n      each(tooltipItems, context => {\n        const bodyItem = {\n          before: [],\n          lines: [],\n          after: []\n        };\n        const scoped = overrideCallbacks(callbacks, context);\n        pushOrConcat(bodyItem.before, splitNewlines(scoped.beforeLabel.call(this, context)));\n        pushOrConcat(bodyItem.lines, scoped.label.call(this, context));\n        pushOrConcat(bodyItem.after, splitNewlines(scoped.afterLabel.call(this, context)));\n        bodyItems.push(bodyItem);\n      });\n      return bodyItems;\n    }\n    getAfterBody(tooltipItems, options) {\n      return getBeforeAfterBodyLines(options.callbacks.afterBody.apply(this, [tooltipItems]));\n    }\n    getFooter(tooltipItems, options) {\n      const {\n        callbacks\n      } = options;\n      const beforeFooter = callbacks.beforeFooter.apply(this, [tooltipItems]);\n      const footer = callbacks.footer.apply(this, [tooltipItems]);\n      const afterFooter = callbacks.afterFooter.apply(this, [tooltipItems]);\n      let lines = [];\n      lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n      lines = pushOrConcat(lines, splitNewlines(footer));\n      lines = pushOrConcat(lines, splitNewlines(afterFooter));\n      return lines;\n    }\n    _createItems(options) {\n      const active = this._active;\n      const data = this.chart.data;\n      const labelColors = [];\n      const labelPointStyles = [];\n      const labelTextColors = [];\n      let tooltipItems = [];\n      let i, len;\n      for (i = 0, len = active.length; i < len; ++i) {\n        tooltipItems.push(createTooltipItem(this.chart, active[i]));\n      }\n      if (options.filter) {\n        tooltipItems = tooltipItems.filter((element, index, array) => options.filter(element, index, array, data));\n      }\n      if (options.itemSort) {\n        tooltipItems = tooltipItems.sort((a, b) => options.itemSort(a, b, data));\n      }\n      each(tooltipItems, context => {\n        const scoped = overrideCallbacks(options.callbacks, context);\n        labelColors.push(scoped.labelColor.call(this, context));\n        labelPointStyles.push(scoped.labelPointStyle.call(this, context));\n        labelTextColors.push(scoped.labelTextColor.call(this, context));\n      });\n      this.labelColors = labelColors;\n      this.labelPointStyles = labelPointStyles;\n      this.labelTextColors = labelTextColors;\n      this.dataPoints = tooltipItems;\n      return tooltipItems;\n    }\n    update(changed, replay) {\n      const options = this.options.setContext(this.getContext());\n      const active = this._active;\n      let properties;\n      let tooltipItems = [];\n      if (!active.length) {\n        if (this.opacity !== 0) {\n          properties = {\n            opacity: 0\n          };\n        }\n      } else {\n        const position = positioners[options.position].call(this, active, this._eventPosition);\n        tooltipItems = this._createItems(options);\n        this.title = this.getTitle(tooltipItems, options);\n        this.beforeBody = this.getBeforeBody(tooltipItems, options);\n        this.body = this.getBody(tooltipItems, options);\n        this.afterBody = this.getAfterBody(tooltipItems, options);\n        this.footer = this.getFooter(tooltipItems, options);\n        const size = this._size = getTooltipSize(this, options);\n        const positionAndSize = Object.assign({}, position, size);\n        const alignment = determineAlignment(this.chart, options, positionAndSize);\n        const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, this.chart);\n        this.xAlign = alignment.xAlign;\n        this.yAlign = alignment.yAlign;\n        properties = {\n          opacity: 1,\n          x: backgroundPoint.x,\n          y: backgroundPoint.y,\n          width: size.width,\n          height: size.height,\n          caretX: position.x,\n          caretY: position.y\n        };\n      }\n      this._tooltipItems = tooltipItems;\n      this.$context = undefined;\n      if (properties) {\n        this._resolveAnimations().update(this, properties);\n      }\n      if (changed && options.external) {\n        options.external.call(this, {\n          chart: this.chart,\n          tooltip: this,\n          replay\n        });\n      }\n    }\n    drawCaret(tooltipPoint, ctx, size, options) {\n      const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n      ctx.lineTo(caretPosition.x1, caretPosition.y1);\n      ctx.lineTo(caretPosition.x2, caretPosition.y2);\n      ctx.lineTo(caretPosition.x3, caretPosition.y3);\n    }\n    getCaretPosition(tooltipPoint, size, options) {\n      const {\n        xAlign,\n        yAlign\n      } = this;\n      const {\n        caretSize,\n        cornerRadius\n      } = options;\n      const {\n        topLeft,\n        topRight,\n        bottomLeft,\n        bottomRight\n      } = toTRBLCorners(cornerRadius);\n      const {\n        x: ptX,\n        y: ptY\n      } = tooltipPoint;\n      const {\n        width,\n        height\n      } = size;\n      let x1, x2, x3, y1, y2, y3;\n      if (yAlign === 'center') {\n        y2 = ptY + height / 2;\n        if (xAlign === 'left') {\n          x1 = ptX;\n          x2 = x1 - caretSize;\n          y1 = y2 + caretSize;\n          y3 = y2 - caretSize;\n        } else {\n          x1 = ptX + width;\n          x2 = x1 + caretSize;\n          y1 = y2 - caretSize;\n          y3 = y2 + caretSize;\n        }\n        x3 = x1;\n      } else {\n        if (xAlign === 'left') {\n          x2 = ptX + Math.max(topLeft, bottomLeft) + caretSize;\n        } else if (xAlign === 'right') {\n          x2 = ptX + width - Math.max(topRight, bottomRight) - caretSize;\n        } else {\n          x2 = this.caretX;\n        }\n        if (yAlign === 'top') {\n          y1 = ptY;\n          y2 = y1 - caretSize;\n          x1 = x2 - caretSize;\n          x3 = x2 + caretSize;\n        } else {\n          y1 = ptY + height;\n          y2 = y1 + caretSize;\n          x1 = x2 + caretSize;\n          x3 = x2 - caretSize;\n        }\n        y3 = y1;\n      }\n      return {\n        x1,\n        x2,\n        x3,\n        y1,\n        y2,\n        y3\n      };\n    }\n    drawTitle(pt, ctx, options) {\n      const title = this.title;\n      const length = title.length;\n      let titleFont, titleSpacing, i;\n      if (length) {\n        const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n        pt.x = getAlignedX(this, options.titleAlign, options);\n        ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n        ctx.textBaseline = 'middle';\n        titleFont = toFont(options.titleFont);\n        titleSpacing = options.titleSpacing;\n        ctx.fillStyle = options.titleColor;\n        ctx.font = titleFont.string;\n        for (i = 0; i < length; ++i) {\n          ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n          pt.y += titleFont.lineHeight + titleSpacing;\n          if (i + 1 === length) {\n            pt.y += options.titleMarginBottom - titleSpacing;\n          }\n        }\n      }\n    }\n    _drawColorBox(ctx, pt, i, rtlHelper, options) {\n      const labelColors = this.labelColors[i];\n      const labelPointStyle = this.labelPointStyles[i];\n      const {\n        boxHeight,\n        boxWidth,\n        boxPadding\n      } = options;\n      const bodyFont = toFont(options.bodyFont);\n      const colorX = getAlignedX(this, 'left', options);\n      const rtlColorX = rtlHelper.x(colorX);\n      const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n      const colorY = pt.y + yOffSet;\n      if (options.usePointStyle) {\n        const drawOptions = {\n          radius: Math.min(boxWidth, boxHeight) / 2,\n          pointStyle: labelPointStyle.pointStyle,\n          rotation: labelPointStyle.rotation,\n          borderWidth: 1\n        };\n        const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n        const centerY = colorY + boxHeight / 2;\n        ctx.strokeStyle = options.multiKeyBackground;\n        ctx.fillStyle = options.multiKeyBackground;\n        drawPoint(ctx, drawOptions, centerX, centerY);\n        ctx.strokeStyle = labelColors.borderColor;\n        ctx.fillStyle = labelColors.backgroundColor;\n        drawPoint(ctx, drawOptions, centerX, centerY);\n      } else {\n        ctx.lineWidth = labelColors.borderWidth || 1;\n        ctx.strokeStyle = labelColors.borderColor;\n        ctx.setLineDash(labelColors.borderDash || []);\n        ctx.lineDashOffset = labelColors.borderDashOffset || 0;\n        const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth - boxPadding);\n        const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - boxPadding - 2);\n        const borderRadius = toTRBLCorners(labelColors.borderRadius);\n        if (Object.values(borderRadius).some(v => v !== 0)) {\n          ctx.beginPath();\n          ctx.fillStyle = options.multiKeyBackground;\n          addRoundedRectPath(ctx, {\n            x: outerX,\n            y: colorY,\n            w: boxWidth,\n            h: boxHeight,\n            radius: borderRadius\n          });\n          ctx.fill();\n          ctx.stroke();\n          ctx.fillStyle = labelColors.backgroundColor;\n          ctx.beginPath();\n          addRoundedRectPath(ctx, {\n            x: innerX,\n            y: colorY + 1,\n            w: boxWidth - 2,\n            h: boxHeight - 2,\n            radius: borderRadius\n          });\n          ctx.fill();\n        } else {\n          ctx.fillStyle = options.multiKeyBackground;\n          ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n          ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n          ctx.fillStyle = labelColors.backgroundColor;\n          ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n        }\n      }\n      ctx.fillStyle = this.labelTextColors[i];\n    }\n    drawBody(pt, ctx, options) {\n      const {\n        body\n      } = this;\n      const {\n        bodySpacing,\n        bodyAlign,\n        displayColors,\n        boxHeight,\n        boxWidth,\n        boxPadding\n      } = options;\n      const bodyFont = toFont(options.bodyFont);\n      let bodyLineHeight = bodyFont.lineHeight;\n      let xLinePadding = 0;\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n      const fillLineOfText = function (line) {\n        ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n        pt.y += bodyLineHeight + bodySpacing;\n      };\n      const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n      let bodyItem, textColor, lines, i, j, ilen, jlen;\n      ctx.textAlign = bodyAlign;\n      ctx.textBaseline = 'middle';\n      ctx.font = bodyFont.string;\n      pt.x = getAlignedX(this, bodyAlignForCalculation, options);\n      ctx.fillStyle = options.bodyColor;\n      each(this.beforeBody, fillLineOfText);\n      xLinePadding = displayColors && bodyAlignForCalculation !== 'right' ? bodyAlign === 'center' ? boxWidth / 2 + boxPadding : boxWidth + 2 + boxPadding : 0;\n      for (i = 0, ilen = body.length; i < ilen; ++i) {\n        bodyItem = body[i];\n        textColor = this.labelTextColors[i];\n        ctx.fillStyle = textColor;\n        each(bodyItem.before, fillLineOfText);\n        lines = bodyItem.lines;\n        if (displayColors && lines.length) {\n          this._drawColorBox(ctx, pt, i, rtlHelper, options);\n          bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n        }\n        for (j = 0, jlen = lines.length; j < jlen; ++j) {\n          fillLineOfText(lines[j]);\n          bodyLineHeight = bodyFont.lineHeight;\n        }\n        each(bodyItem.after, fillLineOfText);\n      }\n      xLinePadding = 0;\n      bodyLineHeight = bodyFont.lineHeight;\n      each(this.afterBody, fillLineOfText);\n      pt.y -= bodySpacing;\n    }\n    drawFooter(pt, ctx, options) {\n      const footer = this.footer;\n      const length = footer.length;\n      let footerFont, i;\n      if (length) {\n        const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n        pt.x = getAlignedX(this, options.footerAlign, options);\n        pt.y += options.footerMarginTop;\n        ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n        ctx.textBaseline = 'middle';\n        footerFont = toFont(options.footerFont);\n        ctx.fillStyle = options.footerColor;\n        ctx.font = footerFont.string;\n        for (i = 0; i < length; ++i) {\n          ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n          pt.y += footerFont.lineHeight + options.footerSpacing;\n        }\n      }\n    }\n    drawBackground(pt, ctx, tooltipSize, options) {\n      const {\n        xAlign,\n        yAlign\n      } = this;\n      const {\n        x,\n        y\n      } = pt;\n      const {\n        width,\n        height\n      } = tooltipSize;\n      const {\n        topLeft,\n        topRight,\n        bottomLeft,\n        bottomRight\n      } = toTRBLCorners(options.cornerRadius);\n      ctx.fillStyle = options.backgroundColor;\n      ctx.strokeStyle = options.borderColor;\n      ctx.lineWidth = options.borderWidth;\n      ctx.beginPath();\n      ctx.moveTo(x + topLeft, y);\n      if (yAlign === 'top') {\n        this.drawCaret(pt, ctx, tooltipSize, options);\n      }\n      ctx.lineTo(x + width - topRight, y);\n      ctx.quadraticCurveTo(x + width, y, x + width, y + topRight);\n      if (yAlign === 'center' && xAlign === 'right') {\n        this.drawCaret(pt, ctx, tooltipSize, options);\n      }\n      ctx.lineTo(x + width, y + height - bottomRight);\n      ctx.quadraticCurveTo(x + width, y + height, x + width - bottomRight, y + height);\n      if (yAlign === 'bottom') {\n        this.drawCaret(pt, ctx, tooltipSize, options);\n      }\n      ctx.lineTo(x + bottomLeft, y + height);\n      ctx.quadraticCurveTo(x, y + height, x, y + height - bottomLeft);\n      if (yAlign === 'center' && xAlign === 'left') {\n        this.drawCaret(pt, ctx, tooltipSize, options);\n      }\n      ctx.lineTo(x, y + topLeft);\n      ctx.quadraticCurveTo(x, y, x + topLeft, y);\n      ctx.closePath();\n      ctx.fill();\n      if (options.borderWidth > 0) {\n        ctx.stroke();\n      }\n    }\n    _updateAnimationTarget(options) {\n      const chart = this.chart;\n      const anims = this.$animations;\n      const animX = anims && anims.x;\n      const animY = anims && anims.y;\n      if (animX || animY) {\n        const position = positioners[options.position].call(this, this._active, this._eventPosition);\n        if (!position) {\n          return;\n        }\n        const size = this._size = getTooltipSize(this, options);\n        const positionAndSize = Object.assign({}, position, this._size);\n        const alignment = determineAlignment(chart, options, positionAndSize);\n        const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n        if (animX._to !== point.x || animY._to !== point.y) {\n          this.xAlign = alignment.xAlign;\n          this.yAlign = alignment.yAlign;\n          this.width = size.width;\n          this.height = size.height;\n          this.caretX = position.x;\n          this.caretY = position.y;\n          this._resolveAnimations().update(this, point);\n        }\n      }\n    }\n    draw(ctx) {\n      const options = this.options.setContext(this.getContext());\n      let opacity = this.opacity;\n      if (!opacity) {\n        return;\n      }\n      this._updateAnimationTarget(options);\n      const tooltipSize = {\n        width: this.width,\n        height: this.height\n      };\n      const pt = {\n        x: this.x,\n        y: this.y\n      };\n      opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n      const padding = toPadding(options.padding);\n      const hasTooltipContent = this.title.length || this.beforeBody.length || this.body.length || this.afterBody.length || this.footer.length;\n      if (options.enabled && hasTooltipContent) {\n        ctx.save();\n        ctx.globalAlpha = opacity;\n        this.drawBackground(pt, ctx, tooltipSize, options);\n        overrideTextDirection(ctx, options.textDirection);\n        pt.y += padding.top;\n        this.drawTitle(pt, ctx, options);\n        this.drawBody(pt, ctx, options);\n        this.drawFooter(pt, ctx, options);\n        restoreTextDirection(ctx, options.textDirection);\n        ctx.restore();\n      }\n    }\n    getActiveElements() {\n      return this._active || [];\n    }\n    setActiveElements(activeElements, eventPosition) {\n      const lastActive = this._active;\n      const active = activeElements.map(({\n        datasetIndex,\n        index\n      }) => {\n        const meta = this.chart.getDatasetMeta(datasetIndex);\n        if (!meta) {\n          throw new Error('Cannot find a dataset at index ' + datasetIndex);\n        }\n        return {\n          datasetIndex,\n          element: meta.data[index],\n          index\n        };\n      });\n      const changed = !_elementsEqual(lastActive, active);\n      const positionChanged = this._positionChanged(active, eventPosition);\n      if (changed || positionChanged) {\n        this._active = active;\n        this._eventPosition = eventPosition;\n        this._ignoreReplayEvents = true;\n        this.update(true);\n      }\n    }\n    handleEvent(e, replay, inChartArea = true) {\n      if (replay && this._ignoreReplayEvents) {\n        return false;\n      }\n      this._ignoreReplayEvents = false;\n      const options = this.options;\n      const lastActive = this._active || [];\n      const active = this._getActiveElements(e, lastActive, replay, inChartArea);\n      const positionChanged = this._positionChanged(active, e);\n      const changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n      if (changed) {\n        this._active = active;\n        if (options.enabled || options.external) {\n          this._eventPosition = {\n            x: e.x,\n            y: e.y\n          };\n          this.update(true, replay);\n        }\n      }\n      return changed;\n    }\n    _getActiveElements(e, lastActive, replay, inChartArea) {\n      const options = this.options;\n      if (e.type === 'mouseout') {\n        return [];\n      }\n      if (!inChartArea) {\n        return lastActive;\n      }\n      const active = this.chart.getElementsAtEventForMode(e, options.mode, options, replay);\n      if (options.reverse) {\n        active.reverse();\n      }\n      return active;\n    }\n    _positionChanged(active, e) {\n      const {\n        caretX,\n        caretY,\n        options\n      } = this;\n      const position = positioners[options.position].call(this, active, e);\n      return position !== false && (caretX !== position.x || caretY !== position.y);\n    }\n  }\n  Tooltip.positioners = positioners;\n  var plugin_tooltip = {\n    id: 'tooltip',\n    _element: Tooltip,\n    positioners,\n    afterInit(chart, _args, options) {\n      if (options) {\n        chart.tooltip = new Tooltip({\n          chart,\n          options\n        });\n      }\n    },\n    beforeUpdate(chart, _args, options) {\n      if (chart.tooltip) {\n        chart.tooltip.initialize(options);\n      }\n    },\n    reset(chart, _args, options) {\n      if (chart.tooltip) {\n        chart.tooltip.initialize(options);\n      }\n    },\n    afterDraw(chart) {\n      const tooltip = chart.tooltip;\n      const args = {\n        tooltip\n      };\n      if (chart.notifyPlugins('beforeTooltipDraw', args) === false) {\n        return;\n      }\n      if (tooltip) {\n        tooltip.draw(chart.ctx);\n      }\n      chart.notifyPlugins('afterTooltipDraw', args);\n    },\n    afterEvent(chart, args) {\n      if (chart.tooltip) {\n        const useFinalPosition = args.replay;\n        if (chart.tooltip.handleEvent(args.event, useFinalPosition, args.inChartArea)) {\n          args.changed = true;\n        }\n      }\n    },\n    defaults: {\n      enabled: true,\n      external: null,\n      position: 'average',\n      backgroundColor: 'rgba(0,0,0,0.8)',\n      titleColor: '#fff',\n      titleFont: {\n        weight: 'bold'\n      },\n      titleSpacing: 2,\n      titleMarginBottom: 6,\n      titleAlign: 'left',\n      bodyColor: '#fff',\n      bodySpacing: 2,\n      bodyFont: {},\n      bodyAlign: 'left',\n      footerColor: '#fff',\n      footerSpacing: 2,\n      footerMarginTop: 6,\n      footerFont: {\n        weight: 'bold'\n      },\n      footerAlign: 'left',\n      padding: 6,\n      caretPadding: 2,\n      caretSize: 5,\n      cornerRadius: 6,\n      boxHeight: (ctx, opts) => opts.bodyFont.size,\n      boxWidth: (ctx, opts) => opts.bodyFont.size,\n      multiKeyBackground: '#fff',\n      displayColors: true,\n      boxPadding: 0,\n      borderColor: 'rgba(0,0,0,0)',\n      borderWidth: 0,\n      animation: {\n        duration: 400,\n        easing: 'easeOutQuart'\n      },\n      animations: {\n        numbers: {\n          type: 'number',\n          properties: ['x', 'y', 'width', 'height', 'caretX', 'caretY']\n        },\n        opacity: {\n          easing: 'linear',\n          duration: 200\n        }\n      },\n      callbacks: {\n        beforeTitle: noop,\n        title(tooltipItems) {\n          if (tooltipItems.length > 0) {\n            const item = tooltipItems[0];\n            const labels = item.chart.data.labels;\n            const labelCount = labels ? labels.length : 0;\n            if (this && this.options && this.options.mode === 'dataset') {\n              return item.dataset.label || '';\n            } else if (item.label) {\n              return item.label;\n            } else if (labelCount > 0 && item.dataIndex < labelCount) {\n              return labels[item.dataIndex];\n            }\n          }\n          return '';\n        },\n        afterTitle: noop,\n        beforeBody: noop,\n        beforeLabel: noop,\n        label(tooltipItem) {\n          if (this && this.options && this.options.mode === 'dataset') {\n            return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n          }\n          let label = tooltipItem.dataset.label || '';\n          if (label) {\n            label += ': ';\n          }\n          const value = tooltipItem.formattedValue;\n          if (!isNullOrUndef(value)) {\n            label += value;\n          }\n          return label;\n        },\n        labelColor(tooltipItem) {\n          const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n          const options = meta.controller.getStyle(tooltipItem.dataIndex);\n          return {\n            borderColor: options.borderColor,\n            backgroundColor: options.backgroundColor,\n            borderWidth: options.borderWidth,\n            borderDash: options.borderDash,\n            borderDashOffset: options.borderDashOffset,\n            borderRadius: 0\n          };\n        },\n        labelTextColor() {\n          return this.options.bodyColor;\n        },\n        labelPointStyle(tooltipItem) {\n          const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n          const options = meta.controller.getStyle(tooltipItem.dataIndex);\n          return {\n            pointStyle: options.pointStyle,\n            rotation: options.rotation\n          };\n        },\n        afterLabel: noop,\n        afterBody: noop,\n        beforeFooter: noop,\n        footer: noop,\n        afterFooter: noop\n      }\n    },\n    defaultRoutes: {\n      bodyFont: 'font',\n      footerFont: 'font',\n      titleFont: 'font'\n    },\n    descriptors: {\n      _scriptable: name => name !== 'filter' && name !== 'itemSort' && name !== 'external',\n      _indexable: false,\n      callbacks: {\n        _scriptable: false,\n        _indexable: false\n      },\n      animation: {\n        _fallback: false\n      },\n      animations: {\n        _fallback: 'animation'\n      }\n    },\n    additionalOptionScopes: ['interaction']\n  };\n  var plugins = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    Decimation: plugin_decimation,\n    Filler: plugin_filler,\n    Legend: plugin_legend,\n    SubTitle: plugin_subtitle,\n    Title: plugin_title,\n    Tooltip: plugin_tooltip\n  });\n  const addIfString = (labels, raw, index, addedLabels) => {\n    if (typeof raw === 'string') {\n      index = labels.push(raw) - 1;\n      addedLabels.unshift({\n        index,\n        label: raw\n      });\n    } else if (isNaN(raw)) {\n      index = null;\n    }\n    return index;\n  };\n  function findOrAddLabel(labels, raw, index, addedLabels) {\n    const first = labels.indexOf(raw);\n    if (first === -1) {\n      return addIfString(labels, raw, index, addedLabels);\n    }\n    const last = labels.lastIndexOf(raw);\n    return first !== last ? index : first;\n  }\n  const validIndex = (index, max) => index === null ? null : _limitValue(Math.round(index), 0, max);\n  class CategoryScale extends Scale {\n    constructor(cfg) {\n      super(cfg);\n      this._startValue = undefined;\n      this._valueRange = 0;\n      this._addedLabels = [];\n    }\n    init(scaleOptions) {\n      const added = this._addedLabels;\n      if (added.length) {\n        const labels = this.getLabels();\n        for (const {\n          index,\n          label\n        } of added) {\n          if (labels[index] === label) {\n            labels.splice(index, 1);\n          }\n        }\n        this._addedLabels = [];\n      }\n      super.init(scaleOptions);\n    }\n    parse(raw, index) {\n      if (isNullOrUndef(raw)) {\n        return null;\n      }\n      const labels = this.getLabels();\n      index = isFinite(index) && labels[index] === raw ? index : findOrAddLabel(labels, raw, valueOrDefault(index, raw), this._addedLabels);\n      return validIndex(index, labels.length - 1);\n    }\n    determineDataLimits() {\n      const {\n        minDefined,\n        maxDefined\n      } = this.getUserBounds();\n      let {\n        min,\n        max\n      } = this.getMinMax(true);\n      if (this.options.bounds === 'ticks') {\n        if (!minDefined) {\n          min = 0;\n        }\n        if (!maxDefined) {\n          max = this.getLabels().length - 1;\n        }\n      }\n      this.min = min;\n      this.max = max;\n    }\n    buildTicks() {\n      const min = this.min;\n      const max = this.max;\n      const offset = this.options.offset;\n      const ticks = [];\n      let labels = this.getLabels();\n      labels = min === 0 && max === labels.length - 1 ? labels : labels.slice(min, max + 1);\n      this._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n      this._startValue = this.min - (offset ? 0.5 : 0);\n      for (let value = min; value <= max; value++) {\n        ticks.push({\n          value\n        });\n      }\n      return ticks;\n    }\n    getLabelForValue(value) {\n      const labels = this.getLabels();\n      if (value >= 0 && value < labels.length) {\n        return labels[value];\n      }\n      return value;\n    }\n    configure() {\n      super.configure();\n      if (!this.isHorizontal()) {\n        this._reversePixels = !this._reversePixels;\n      }\n    }\n    getPixelForValue(value) {\n      if (typeof value !== 'number') {\n        value = this.parse(value);\n      }\n      return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n    }\n    getPixelForTick(index) {\n      const ticks = this.ticks;\n      if (index < 0 || index > ticks.length - 1) {\n        return null;\n      }\n      return this.getPixelForValue(ticks[index].value);\n    }\n    getValueForPixel(pixel) {\n      return Math.round(this._startValue + this.getDecimalForPixel(pixel) * this._valueRange);\n    }\n    getBasePixel() {\n      return this.bottom;\n    }\n  }\n  CategoryScale.id = 'category';\n  CategoryScale.defaults = {\n    ticks: {\n      callback: CategoryScale.prototype.getLabelForValue\n    }\n  };\n  function generateTicks$1(generationOptions, dataRange) {\n    const ticks = [];\n    const MIN_SPACING = 1e-14;\n    const {\n      bounds,\n      step,\n      min,\n      max,\n      precision,\n      count,\n      maxTicks,\n      maxDigits,\n      includeBounds\n    } = generationOptions;\n    const unit = step || 1;\n    const maxSpaces = maxTicks - 1;\n    const {\n      min: rmin,\n      max: rmax\n    } = dataRange;\n    const minDefined = !isNullOrUndef(min);\n    const maxDefined = !isNullOrUndef(max);\n    const countDefined = !isNullOrUndef(count);\n    const minSpacing = (rmax - rmin) / (maxDigits + 1);\n    let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n    let factor, niceMin, niceMax, numSpaces;\n    if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n      return [{\n        value: rmin\n      }, {\n        value: rmax\n      }];\n    }\n    numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n    if (numSpaces > maxSpaces) {\n      spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n    }\n    if (!isNullOrUndef(precision)) {\n      factor = Math.pow(10, precision);\n      spacing = Math.ceil(spacing * factor) / factor;\n    }\n    if (bounds === 'ticks') {\n      niceMin = Math.floor(rmin / spacing) * spacing;\n      niceMax = Math.ceil(rmax / spacing) * spacing;\n    } else {\n      niceMin = rmin;\n      niceMax = rmax;\n    }\n    if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n      numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n      spacing = (max - min) / numSpaces;\n      niceMin = min;\n      niceMax = max;\n    } else if (countDefined) {\n      niceMin = minDefined ? min : niceMin;\n      niceMax = maxDefined ? max : niceMax;\n      numSpaces = count - 1;\n      spacing = (niceMax - niceMin) / numSpaces;\n    } else {\n      numSpaces = (niceMax - niceMin) / spacing;\n      if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n        numSpaces = Math.round(numSpaces);\n      } else {\n        numSpaces = Math.ceil(numSpaces);\n      }\n    }\n    const decimalPlaces = Math.max(_decimalPlaces(spacing), _decimalPlaces(niceMin));\n    factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n    niceMin = Math.round(niceMin * factor) / factor;\n    niceMax = Math.round(niceMax * factor) / factor;\n    let j = 0;\n    if (minDefined) {\n      if (includeBounds && niceMin !== min) {\n        ticks.push({\n          value: min\n        });\n        if (niceMin < min) {\n          j++;\n        }\n        if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n          j++;\n        }\n      } else if (niceMin < min) {\n        j++;\n      }\n    }\n    for (; j < numSpaces; ++j) {\n      ticks.push({\n        value: Math.round((niceMin + j * spacing) * factor) / factor\n      });\n    }\n    if (maxDefined && includeBounds && niceMax !== max) {\n      if (ticks.length && almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n        ticks[ticks.length - 1].value = max;\n      } else {\n        ticks.push({\n          value: max\n        });\n      }\n    } else if (!maxDefined || niceMax === max) {\n      ticks.push({\n        value: niceMax\n      });\n    }\n    return ticks;\n  }\n  function relativeLabelSize(value, minSpacing, {\n    horizontal,\n    minRotation\n  }) {\n    const rad = toRadians(minRotation);\n    const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n    const length = 0.75 * minSpacing * ('' + value).length;\n    return Math.min(minSpacing / ratio, length);\n  }\n  class LinearScaleBase extends Scale {\n    constructor(cfg) {\n      super(cfg);\n      this.start = undefined;\n      this.end = undefined;\n      this._startValue = undefined;\n      this._endValue = undefined;\n      this._valueRange = 0;\n    }\n    parse(raw, index) {\n      if (isNullOrUndef(raw)) {\n        return null;\n      }\n      if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n        return null;\n      }\n      return +raw;\n    }\n    handleTickRangeOptions() {\n      const {\n        beginAtZero\n      } = this.options;\n      const {\n        minDefined,\n        maxDefined\n      } = this.getUserBounds();\n      let {\n        min,\n        max\n      } = this;\n      const setMin = v => min = minDefined ? min : v;\n      const setMax = v => max = maxDefined ? max : v;\n      if (beginAtZero) {\n        const minSign = sign(min);\n        const maxSign = sign(max);\n        if (minSign < 0 && maxSign < 0) {\n          setMax(0);\n        } else if (minSign > 0 && maxSign > 0) {\n          setMin(0);\n        }\n      }\n      if (min === max) {\n        let offset = 1;\n        if (max >= Number.MAX_SAFE_INTEGER || min <= Number.MIN_SAFE_INTEGER) {\n          offset = Math.abs(max * 0.05);\n        }\n        setMax(max + offset);\n        if (!beginAtZero) {\n          setMin(min - offset);\n        }\n      }\n      this.min = min;\n      this.max = max;\n    }\n    getTickLimit() {\n      const tickOpts = this.options.ticks;\n      let {\n        maxTicksLimit,\n        stepSize\n      } = tickOpts;\n      let maxTicks;\n      if (stepSize) {\n        maxTicks = Math.ceil(this.max / stepSize) - Math.floor(this.min / stepSize) + 1;\n        if (maxTicks > 1000) {\n          console.warn(`scales.${this.id}.ticks.stepSize: ${stepSize} would result generating up to ${maxTicks} ticks. Limiting to 1000.`);\n          maxTicks = 1000;\n        }\n      } else {\n        maxTicks = this.computeTickLimit();\n        maxTicksLimit = maxTicksLimit || 11;\n      }\n      if (maxTicksLimit) {\n        maxTicks = Math.min(maxTicksLimit, maxTicks);\n      }\n      return maxTicks;\n    }\n    computeTickLimit() {\n      return Number.POSITIVE_INFINITY;\n    }\n    buildTicks() {\n      const opts = this.options;\n      const tickOpts = opts.ticks;\n      let maxTicks = this.getTickLimit();\n      maxTicks = Math.max(2, maxTicks);\n      const numericGeneratorOptions = {\n        maxTicks,\n        bounds: opts.bounds,\n        min: opts.min,\n        max: opts.max,\n        precision: tickOpts.precision,\n        step: tickOpts.stepSize,\n        count: tickOpts.count,\n        maxDigits: this._maxDigits(),\n        horizontal: this.isHorizontal(),\n        minRotation: tickOpts.minRotation || 0,\n        includeBounds: tickOpts.includeBounds !== false\n      };\n      const dataRange = this._range || this;\n      const ticks = generateTicks$1(numericGeneratorOptions, dataRange);\n      if (opts.bounds === 'ticks') {\n        _setMinAndMaxByKey(ticks, this, 'value');\n      }\n      if (opts.reverse) {\n        ticks.reverse();\n        this.start = this.max;\n        this.end = this.min;\n      } else {\n        this.start = this.min;\n        this.end = this.max;\n      }\n      return ticks;\n    }\n    configure() {\n      const ticks = this.ticks;\n      let start = this.min;\n      let end = this.max;\n      super.configure();\n      if (this.options.offset && ticks.length) {\n        const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n        start -= offset;\n        end += offset;\n      }\n      this._startValue = start;\n      this._endValue = end;\n      this._valueRange = end - start;\n    }\n    getLabelForValue(value) {\n      return formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n    }\n  }\n  class LinearScale extends LinearScaleBase {\n    determineDataLimits() {\n      const {\n        min,\n        max\n      } = this.getMinMax(true);\n      this.min = isNumberFinite(min) ? min : 0;\n      this.max = isNumberFinite(max) ? max : 1;\n      this.handleTickRangeOptions();\n    }\n    computeTickLimit() {\n      const horizontal = this.isHorizontal();\n      const length = horizontal ? this.width : this.height;\n      const minRotation = toRadians(this.options.ticks.minRotation);\n      const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n      const tickFont = this._resolveTickFontOptions(0);\n      return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n    }\n    getPixelForValue(value) {\n      return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n    }\n    getValueForPixel(pixel) {\n      return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n    }\n  }\n  LinearScale.id = 'linear';\n  LinearScale.defaults = {\n    ticks: {\n      callback: Ticks.formatters.numeric\n    }\n  };\n  function isMajor(tickVal) {\n    const remain = tickVal / Math.pow(10, Math.floor(log10(tickVal)));\n    return remain === 1;\n  }\n  function generateTicks(generationOptions, dataRange) {\n    const endExp = Math.floor(log10(dataRange.max));\n    const endSignificand = Math.ceil(dataRange.max / Math.pow(10, endExp));\n    const ticks = [];\n    let tickVal = finiteOrDefault(generationOptions.min, Math.pow(10, Math.floor(log10(dataRange.min))));\n    let exp = Math.floor(log10(tickVal));\n    let significand = Math.floor(tickVal / Math.pow(10, exp));\n    let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n    do {\n      ticks.push({\n        value: tickVal,\n        major: isMajor(tickVal)\n      });\n      ++significand;\n      if (significand === 10) {\n        significand = 1;\n        ++exp;\n        precision = exp >= 0 ? 1 : precision;\n      }\n      tickVal = Math.round(significand * Math.pow(10, exp) * precision) / precision;\n    } while (exp < endExp || exp === endExp && significand < endSignificand);\n    const lastTick = finiteOrDefault(generationOptions.max, tickVal);\n    ticks.push({\n      value: lastTick,\n      major: isMajor(tickVal)\n    });\n    return ticks;\n  }\n  class LogarithmicScale extends Scale {\n    constructor(cfg) {\n      super(cfg);\n      this.start = undefined;\n      this.end = undefined;\n      this._startValue = undefined;\n      this._valueRange = 0;\n    }\n    parse(raw, index) {\n      const value = LinearScaleBase.prototype.parse.apply(this, [raw, index]);\n      if (value === 0) {\n        this._zero = true;\n        return undefined;\n      }\n      return isNumberFinite(value) && value > 0 ? value : null;\n    }\n    determineDataLimits() {\n      const {\n        min,\n        max\n      } = this.getMinMax(true);\n      this.min = isNumberFinite(min) ? Math.max(0, min) : null;\n      this.max = isNumberFinite(max) ? Math.max(0, max) : null;\n      if (this.options.beginAtZero) {\n        this._zero = true;\n      }\n      this.handleTickRangeOptions();\n    }\n    handleTickRangeOptions() {\n      const {\n        minDefined,\n        maxDefined\n      } = this.getUserBounds();\n      let min = this.min;\n      let max = this.max;\n      const setMin = v => min = minDefined ? min : v;\n      const setMax = v => max = maxDefined ? max : v;\n      const exp = (v, m) => Math.pow(10, Math.floor(log10(v)) + m);\n      if (min === max) {\n        if (min <= 0) {\n          setMin(1);\n          setMax(10);\n        } else {\n          setMin(exp(min, -1));\n          setMax(exp(max, +1));\n        }\n      }\n      if (min <= 0) {\n        setMin(exp(max, -1));\n      }\n      if (max <= 0) {\n        setMax(exp(min, +1));\n      }\n      if (this._zero && this.min !== this._suggestedMin && min === exp(this.min, 0)) {\n        setMin(exp(min, -1));\n      }\n      this.min = min;\n      this.max = max;\n    }\n    buildTicks() {\n      const opts = this.options;\n      const generationOptions = {\n        min: this._userMin,\n        max: this._userMax\n      };\n      const ticks = generateTicks(generationOptions, this);\n      if (opts.bounds === 'ticks') {\n        _setMinAndMaxByKey(ticks, this, 'value');\n      }\n      if (opts.reverse) {\n        ticks.reverse();\n        this.start = this.max;\n        this.end = this.min;\n      } else {\n        this.start = this.min;\n        this.end = this.max;\n      }\n      return ticks;\n    }\n    getLabelForValue(value) {\n      return value === undefined ? '0' : formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n    }\n    configure() {\n      const start = this.min;\n      super.configure();\n      this._startValue = log10(start);\n      this._valueRange = log10(this.max) - log10(start);\n    }\n    getPixelForValue(value) {\n      if (value === undefined || value === 0) {\n        value = this.min;\n      }\n      if (value === null || isNaN(value)) {\n        return NaN;\n      }\n      return this.getPixelForDecimal(value === this.min ? 0 : (log10(value) - this._startValue) / this._valueRange);\n    }\n    getValueForPixel(pixel) {\n      const decimal = this.getDecimalForPixel(pixel);\n      return Math.pow(10, this._startValue + decimal * this._valueRange);\n    }\n  }\n  LogarithmicScale.id = 'logarithmic';\n  LogarithmicScale.defaults = {\n    ticks: {\n      callback: Ticks.formatters.logarithmic,\n      major: {\n        enabled: true\n      }\n    }\n  };\n  function getTickBackdropHeight(opts) {\n    const tickOpts = opts.ticks;\n    if (tickOpts.display && opts.display) {\n      const padding = toPadding(tickOpts.backdropPadding);\n      return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n    }\n    return 0;\n  }\n  function measureLabelSize(ctx, font, label) {\n    label = isArray(label) ? label : [label];\n    return {\n      w: _longestText(ctx, font.string, label),\n      h: label.length * font.lineHeight\n    };\n  }\n  function determineLimits(angle, pos, size, min, max) {\n    if (angle === min || angle === max) {\n      return {\n        start: pos - size / 2,\n        end: pos + size / 2\n      };\n    } else if (angle < min || angle > max) {\n      return {\n        start: pos - size,\n        end: pos\n      };\n    }\n    return {\n      start: pos,\n      end: pos + size\n    };\n  }\n  function fitWithPointLabels(scale) {\n    const orig = {\n      l: scale.left + scale._padding.left,\n      r: scale.right - scale._padding.right,\n      t: scale.top + scale._padding.top,\n      b: scale.bottom - scale._padding.bottom\n    };\n    const limits = Object.assign({}, orig);\n    const labelSizes = [];\n    const padding = [];\n    const valueCount = scale._pointLabels.length;\n    const pointLabelOpts = scale.options.pointLabels;\n    const additionalAngle = pointLabelOpts.centerPointLabels ? PI / valueCount : 0;\n    for (let i = 0; i < valueCount; i++) {\n      const opts = pointLabelOpts.setContext(scale.getPointLabelContext(i));\n      padding[i] = opts.padding;\n      const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i], additionalAngle);\n      const plFont = toFont(opts.font);\n      const textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n      labelSizes[i] = textSize;\n      const angleRadians = _normalizeAngle(scale.getIndexAngle(i) + additionalAngle);\n      const angle = Math.round(toDegrees(angleRadians));\n      const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n      const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n      updateLimits(limits, orig, angleRadians, hLimits, vLimits);\n    }\n    scale.setCenterPoint(orig.l - limits.l, limits.r - orig.r, orig.t - limits.t, limits.b - orig.b);\n    scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n  }\n  function updateLimits(limits, orig, angle, hLimits, vLimits) {\n    const sin = Math.abs(Math.sin(angle));\n    const cos = Math.abs(Math.cos(angle));\n    let x = 0;\n    let y = 0;\n    if (hLimits.start < orig.l) {\n      x = (orig.l - hLimits.start) / sin;\n      limits.l = Math.min(limits.l, orig.l - x);\n    } else if (hLimits.end > orig.r) {\n      x = (hLimits.end - orig.r) / sin;\n      limits.r = Math.max(limits.r, orig.r + x);\n    }\n    if (vLimits.start < orig.t) {\n      y = (orig.t - vLimits.start) / cos;\n      limits.t = Math.min(limits.t, orig.t - y);\n    } else if (vLimits.end > orig.b) {\n      y = (vLimits.end - orig.b) / cos;\n      limits.b = Math.max(limits.b, orig.b + y);\n    }\n  }\n  function buildPointLabelItems(scale, labelSizes, padding) {\n    const items = [];\n    const valueCount = scale._pointLabels.length;\n    const opts = scale.options;\n    const extra = getTickBackdropHeight(opts) / 2;\n    const outerDistance = scale.drawingArea;\n    const additionalAngle = opts.pointLabels.centerPointLabels ? PI / valueCount : 0;\n    for (let i = 0; i < valueCount; i++) {\n      const pointLabelPosition = scale.getPointPosition(i, outerDistance + extra + padding[i], additionalAngle);\n      const angle = Math.round(toDegrees(_normalizeAngle(pointLabelPosition.angle + HALF_PI)));\n      const size = labelSizes[i];\n      const y = yForAngle(pointLabelPosition.y, size.h, angle);\n      const textAlign = getTextAlignForAngle(angle);\n      const left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n      items.push({\n        x: pointLabelPosition.x,\n        y,\n        textAlign,\n        left,\n        top: y,\n        right: left + size.w,\n        bottom: y + size.h\n      });\n    }\n    return items;\n  }\n  function getTextAlignForAngle(angle) {\n    if (angle === 0 || angle === 180) {\n      return 'center';\n    } else if (angle < 180) {\n      return 'left';\n    }\n    return 'right';\n  }\n  function leftForTextAlign(x, w, align) {\n    if (align === 'right') {\n      x -= w;\n    } else if (align === 'center') {\n      x -= w / 2;\n    }\n    return x;\n  }\n  function yForAngle(y, h, angle) {\n    if (angle === 90 || angle === 270) {\n      y -= h / 2;\n    } else if (angle > 270 || angle < 90) {\n      y -= h;\n    }\n    return y;\n  }\n  function drawPointLabels(scale, labelCount) {\n    const {\n      ctx,\n      options: {\n        pointLabels\n      }\n    } = scale;\n    for (let i = labelCount - 1; i >= 0; i--) {\n      const optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\n      const plFont = toFont(optsAtIndex.font);\n      const {\n        x,\n        y,\n        textAlign,\n        left,\n        top,\n        right,\n        bottom\n      } = scale._pointLabelItems[i];\n      const {\n        backdropColor\n      } = optsAtIndex;\n      if (!isNullOrUndef(backdropColor)) {\n        const padding = toPadding(optsAtIndex.backdropPadding);\n        ctx.fillStyle = backdropColor;\n        ctx.fillRect(left - padding.left, top - padding.top, right - left + padding.width, bottom - top + padding.height);\n      }\n      renderText(ctx, scale._pointLabels[i], x, y + plFont.lineHeight / 2, plFont, {\n        color: optsAtIndex.color,\n        textAlign: textAlign,\n        textBaseline: 'middle'\n      });\n    }\n  }\n  function pathRadiusLine(scale, radius, circular, labelCount) {\n    const {\n      ctx\n    } = scale;\n    if (circular) {\n      ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n    } else {\n      let pointPosition = scale.getPointPosition(0, radius);\n      ctx.moveTo(pointPosition.x, pointPosition.y);\n      for (let i = 1; i < labelCount; i++) {\n        pointPosition = scale.getPointPosition(i, radius);\n        ctx.lineTo(pointPosition.x, pointPosition.y);\n      }\n    }\n  }\n  function drawRadiusLine(scale, gridLineOpts, radius, labelCount) {\n    const ctx = scale.ctx;\n    const circular = gridLineOpts.circular;\n    const {\n      color,\n      lineWidth\n    } = gridLineOpts;\n    if (!circular && !labelCount || !color || !lineWidth || radius < 0) {\n      return;\n    }\n    ctx.save();\n    ctx.strokeStyle = color;\n    ctx.lineWidth = lineWidth;\n    ctx.setLineDash(gridLineOpts.borderDash);\n    ctx.lineDashOffset = gridLineOpts.borderDashOffset;\n    ctx.beginPath();\n    pathRadiusLine(scale, radius, circular, labelCount);\n    ctx.closePath();\n    ctx.stroke();\n    ctx.restore();\n  }\n  function createPointLabelContext(parent, index, label) {\n    return createContext(parent, {\n      label,\n      index,\n      type: 'pointLabel'\n    });\n  }\n  class RadialLinearScale extends LinearScaleBase {\n    constructor(cfg) {\n      super(cfg);\n      this.xCenter = undefined;\n      this.yCenter = undefined;\n      this.drawingArea = undefined;\n      this._pointLabels = [];\n      this._pointLabelItems = [];\n    }\n    setDimensions() {\n      const padding = this._padding = toPadding(getTickBackdropHeight(this.options) / 2);\n      const w = this.width = this.maxWidth - padding.width;\n      const h = this.height = this.maxHeight - padding.height;\n      this.xCenter = Math.floor(this.left + w / 2 + padding.left);\n      this.yCenter = Math.floor(this.top + h / 2 + padding.top);\n      this.drawingArea = Math.floor(Math.min(w, h) / 2);\n    }\n    determineDataLimits() {\n      const {\n        min,\n        max\n      } = this.getMinMax(false);\n      this.min = isNumberFinite(min) && !isNaN(min) ? min : 0;\n      this.max = isNumberFinite(max) && !isNaN(max) ? max : 0;\n      this.handleTickRangeOptions();\n    }\n    computeTickLimit() {\n      return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n    }\n    generateTickLabels(ticks) {\n      LinearScaleBase.prototype.generateTickLabels.call(this, ticks);\n      this._pointLabels = this.getLabels().map((value, index) => {\n        const label = callback(this.options.pointLabels.callback, [value, index], this);\n        return label || label === 0 ? label : '';\n      }).filter((v, i) => this.chart.getDataVisibility(i));\n    }\n    fit() {\n      const opts = this.options;\n      if (opts.display && opts.pointLabels.display) {\n        fitWithPointLabels(this);\n      } else {\n        this.setCenterPoint(0, 0, 0, 0);\n      }\n    }\n    setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n      this.xCenter += Math.floor((leftMovement - rightMovement) / 2);\n      this.yCenter += Math.floor((topMovement - bottomMovement) / 2);\n      this.drawingArea -= Math.min(this.drawingArea / 2, Math.max(leftMovement, rightMovement, topMovement, bottomMovement));\n    }\n    getIndexAngle(index) {\n      const angleMultiplier = TAU / (this._pointLabels.length || 1);\n      const startAngle = this.options.startAngle || 0;\n      return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n    }\n    getDistanceFromCenterForValue(value) {\n      if (isNullOrUndef(value)) {\n        return NaN;\n      }\n      const scalingFactor = this.drawingArea / (this.max - this.min);\n      if (this.options.reverse) {\n        return (this.max - value) * scalingFactor;\n      }\n      return (value - this.min) * scalingFactor;\n    }\n    getValueForDistanceFromCenter(distance) {\n      if (isNullOrUndef(distance)) {\n        return NaN;\n      }\n      const scaledDistance = distance / (this.drawingArea / (this.max - this.min));\n      return this.options.reverse ? this.max - scaledDistance : this.min + scaledDistance;\n    }\n    getPointLabelContext(index) {\n      const pointLabels = this._pointLabels || [];\n      if (index >= 0 && index < pointLabels.length) {\n        const pointLabel = pointLabels[index];\n        return createPointLabelContext(this.getContext(), index, pointLabel);\n      }\n    }\n    getPointPosition(index, distanceFromCenter, additionalAngle = 0) {\n      const angle = this.getIndexAngle(index) - HALF_PI + additionalAngle;\n      return {\n        x: Math.cos(angle) * distanceFromCenter + this.xCenter,\n        y: Math.sin(angle) * distanceFromCenter + this.yCenter,\n        angle\n      };\n    }\n    getPointPositionForValue(index, value) {\n      return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n    }\n    getBasePosition(index) {\n      return this.getPointPositionForValue(index || 0, this.getBaseValue());\n    }\n    getPointLabelPosition(index) {\n      const {\n        left,\n        top,\n        right,\n        bottom\n      } = this._pointLabelItems[index];\n      return {\n        left,\n        top,\n        right,\n        bottom\n      };\n    }\n    drawBackground() {\n      const {\n        backgroundColor,\n        grid: {\n          circular\n        }\n      } = this.options;\n      if (backgroundColor) {\n        const ctx = this.ctx;\n        ctx.save();\n        ctx.beginPath();\n        pathRadiusLine(this, this.getDistanceFromCenterForValue(this._endValue), circular, this._pointLabels.length);\n        ctx.closePath();\n        ctx.fillStyle = backgroundColor;\n        ctx.fill();\n        ctx.restore();\n      }\n    }\n    drawGrid() {\n      const ctx = this.ctx;\n      const opts = this.options;\n      const {\n        angleLines,\n        grid\n      } = opts;\n      const labelCount = this._pointLabels.length;\n      let i, offset, position;\n      if (opts.pointLabels.display) {\n        drawPointLabels(this, labelCount);\n      }\n      if (grid.display) {\n        this.ticks.forEach((tick, index) => {\n          if (index !== 0) {\n            offset = this.getDistanceFromCenterForValue(tick.value);\n            const optsAtIndex = grid.setContext(this.getContext(index - 1));\n            drawRadiusLine(this, optsAtIndex, offset, labelCount);\n          }\n        });\n      }\n      if (angleLines.display) {\n        ctx.save();\n        for (i = labelCount - 1; i >= 0; i--) {\n          const optsAtIndex = angleLines.setContext(this.getPointLabelContext(i));\n          const {\n            color,\n            lineWidth\n          } = optsAtIndex;\n          if (!lineWidth || !color) {\n            continue;\n          }\n          ctx.lineWidth = lineWidth;\n          ctx.strokeStyle = color;\n          ctx.setLineDash(optsAtIndex.borderDash);\n          ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n          offset = this.getDistanceFromCenterForValue(opts.ticks.reverse ? this.min : this.max);\n          position = this.getPointPosition(i, offset);\n          ctx.beginPath();\n          ctx.moveTo(this.xCenter, this.yCenter);\n          ctx.lineTo(position.x, position.y);\n          ctx.stroke();\n        }\n        ctx.restore();\n      }\n    }\n    drawBorder() {}\n    drawLabels() {\n      const ctx = this.ctx;\n      const opts = this.options;\n      const tickOpts = opts.ticks;\n      if (!tickOpts.display) {\n        return;\n      }\n      const startAngle = this.getIndexAngle(0);\n      let offset, width;\n      ctx.save();\n      ctx.translate(this.xCenter, this.yCenter);\n      ctx.rotate(startAngle);\n      ctx.textAlign = 'center';\n      ctx.textBaseline = 'middle';\n      this.ticks.forEach((tick, index) => {\n        if (index === 0 && !opts.reverse) {\n          return;\n        }\n        const optsAtIndex = tickOpts.setContext(this.getContext(index));\n        const tickFont = toFont(optsAtIndex.font);\n        offset = this.getDistanceFromCenterForValue(this.ticks[index].value);\n        if (optsAtIndex.showLabelBackdrop) {\n          ctx.font = tickFont.string;\n          width = ctx.measureText(tick.label).width;\n          ctx.fillStyle = optsAtIndex.backdropColor;\n          const padding = toPadding(optsAtIndex.backdropPadding);\n          ctx.fillRect(-width / 2 - padding.left, -offset - tickFont.size / 2 - padding.top, width + padding.width, tickFont.size + padding.height);\n        }\n        renderText(ctx, tick.label, 0, -offset, tickFont, {\n          color: optsAtIndex.color\n        });\n      });\n      ctx.restore();\n    }\n    drawTitle() {}\n  }\n  RadialLinearScale.id = 'radialLinear';\n  RadialLinearScale.defaults = {\n    display: true,\n    animate: true,\n    position: 'chartArea',\n    angleLines: {\n      display: true,\n      lineWidth: 1,\n      borderDash: [],\n      borderDashOffset: 0.0\n    },\n    grid: {\n      circular: false\n    },\n    startAngle: 0,\n    ticks: {\n      showLabelBackdrop: true,\n      callback: Ticks.formatters.numeric\n    },\n    pointLabels: {\n      backdropColor: undefined,\n      backdropPadding: 2,\n      display: true,\n      font: {\n        size: 10\n      },\n      callback(label) {\n        return label;\n      },\n      padding: 5,\n      centerPointLabels: false\n    }\n  };\n  RadialLinearScale.defaultRoutes = {\n    'angleLines.color': 'borderColor',\n    'pointLabels.color': 'color',\n    'ticks.color': 'color'\n  };\n  RadialLinearScale.descriptors = {\n    angleLines: {\n      _fallback: 'grid'\n    }\n  };\n  const INTERVALS = {\n    millisecond: {\n      common: true,\n      size: 1,\n      steps: 1000\n    },\n    second: {\n      common: true,\n      size: 1000,\n      steps: 60\n    },\n    minute: {\n      common: true,\n      size: 60000,\n      steps: 60\n    },\n    hour: {\n      common: true,\n      size: 3600000,\n      steps: 24\n    },\n    day: {\n      common: true,\n      size: 86400000,\n      steps: 30\n    },\n    week: {\n      common: false,\n      size: 604800000,\n      steps: 4\n    },\n    month: {\n      common: true,\n      size: 2.628e9,\n      steps: 12\n    },\n    quarter: {\n      common: false,\n      size: 7.884e9,\n      steps: 4\n    },\n    year: {\n      common: true,\n      size: 3.154e10\n    }\n  };\n  const UNITS = Object.keys(INTERVALS);\n  function sorter(a, b) {\n    return a - b;\n  }\n  function parse(scale, input) {\n    if (isNullOrUndef(input)) {\n      return null;\n    }\n    const adapter = scale._adapter;\n    const {\n      parser,\n      round,\n      isoWeekday\n    } = scale._parseOpts;\n    let value = input;\n    if (typeof parser === 'function') {\n      value = parser(value);\n    }\n    if (!isNumberFinite(value)) {\n      value = typeof parser === 'string' ? adapter.parse(value, parser) : adapter.parse(value);\n    }\n    if (value === null) {\n      return null;\n    }\n    if (round) {\n      value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true) ? adapter.startOf(value, 'isoWeek', isoWeekday) : adapter.startOf(value, round);\n    }\n    return +value;\n  }\n  function determineUnitForAutoTicks(minUnit, min, max, capacity) {\n    const ilen = UNITS.length;\n    for (let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n      const interval = INTERVALS[UNITS[i]];\n      const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n      if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n        return UNITS[i];\n      }\n    }\n    return UNITS[ilen - 1];\n  }\n  function determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n    for (let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--) {\n      const unit = UNITS[i];\n      if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n        return unit;\n      }\n    }\n    return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n  }\n  function determineMajorUnit(unit) {\n    for (let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n      if (INTERVALS[UNITS[i]].common) {\n        return UNITS[i];\n      }\n    }\n  }\n  function addTick(ticks, time, timestamps) {\n    if (!timestamps) {\n      ticks[time] = true;\n    } else if (timestamps.length) {\n      const {\n        lo,\n        hi\n      } = _lookup(timestamps, time);\n      const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n      ticks[timestamp] = true;\n    }\n  }\n  function setMajorTicks(scale, ticks, map, majorUnit) {\n    const adapter = scale._adapter;\n    const first = +adapter.startOf(ticks[0].value, majorUnit);\n    const last = ticks[ticks.length - 1].value;\n    let major, index;\n    for (major = first; major <= last; major = +adapter.add(major, 1, majorUnit)) {\n      index = map[major];\n      if (index >= 0) {\n        ticks[index].major = true;\n      }\n    }\n    return ticks;\n  }\n  function ticksFromTimestamps(scale, values, majorUnit) {\n    const ticks = [];\n    const map = {};\n    const ilen = values.length;\n    let i, value;\n    for (i = 0; i < ilen; ++i) {\n      value = values[i];\n      map[value] = i;\n      ticks.push({\n        value,\n        major: false\n      });\n    }\n    return ilen === 0 || !majorUnit ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n  }\n  class TimeScale extends Scale {\n    constructor(props) {\n      super(props);\n      this._cache = {\n        data: [],\n        labels: [],\n        all: []\n      };\n      this._unit = 'day';\n      this._majorUnit = undefined;\n      this._offsets = {};\n      this._normalized = false;\n      this._parseOpts = undefined;\n    }\n    init(scaleOpts, opts) {\n      const time = scaleOpts.time || (scaleOpts.time = {});\n      const adapter = this._adapter = new _adapters._date(scaleOpts.adapters.date);\n      mergeIf(time.displayFormats, adapter.formats());\n      this._parseOpts = {\n        parser: time.parser,\n        round: time.round,\n        isoWeekday: time.isoWeekday\n      };\n      super.init(scaleOpts);\n      this._normalized = opts.normalized;\n    }\n    parse(raw, index) {\n      if (raw === undefined) {\n        return null;\n      }\n      return parse(this, raw);\n    }\n    beforeLayout() {\n      super.beforeLayout();\n      this._cache = {\n        data: [],\n        labels: [],\n        all: []\n      };\n    }\n    determineDataLimits() {\n      const options = this.options;\n      const adapter = this._adapter;\n      const unit = options.time.unit || 'day';\n      let {\n        min,\n        max,\n        minDefined,\n        maxDefined\n      } = this.getUserBounds();\n      function _applyBounds(bounds) {\n        if (!minDefined && !isNaN(bounds.min)) {\n          min = Math.min(min, bounds.min);\n        }\n        if (!maxDefined && !isNaN(bounds.max)) {\n          max = Math.max(max, bounds.max);\n        }\n      }\n      if (!minDefined || !maxDefined) {\n        _applyBounds(this._getLabelBounds());\n        if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n          _applyBounds(this.getMinMax(false));\n        }\n      }\n      min = isNumberFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n      max = isNumberFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n      this.min = Math.min(min, max - 1);\n      this.max = Math.max(min + 1, max);\n    }\n    _getLabelBounds() {\n      const arr = this.getLabelTimestamps();\n      let min = Number.POSITIVE_INFINITY;\n      let max = Number.NEGATIVE_INFINITY;\n      if (arr.length) {\n        min = arr[0];\n        max = arr[arr.length - 1];\n      }\n      return {\n        min,\n        max\n      };\n    }\n    buildTicks() {\n      const options = this.options;\n      const timeOpts = options.time;\n      const tickOpts = options.ticks;\n      const timestamps = tickOpts.source === 'labels' ? this.getLabelTimestamps() : this._generate();\n      if (options.bounds === 'ticks' && timestamps.length) {\n        this.min = this._userMin || timestamps[0];\n        this.max = this._userMax || timestamps[timestamps.length - 1];\n      }\n      const min = this.min;\n      const max = this.max;\n      const ticks = _filterBetween(timestamps, min, max);\n      this._unit = timeOpts.unit || (tickOpts.autoSkip ? determineUnitForAutoTicks(timeOpts.minUnit, this.min, this.max, this._getLabelCapacity(min)) : determineUnitForFormatting(this, ticks.length, timeOpts.minUnit, this.min, this.max));\n      this._majorUnit = !tickOpts.major.enabled || this._unit === 'year' ? undefined : determineMajorUnit(this._unit);\n      this.initOffsets(timestamps);\n      if (options.reverse) {\n        ticks.reverse();\n      }\n      return ticksFromTimestamps(this, ticks, this._majorUnit);\n    }\n    initOffsets(timestamps) {\n      let start = 0;\n      let end = 0;\n      let first, last;\n      if (this.options.offset && timestamps.length) {\n        first = this.getDecimalForValue(timestamps[0]);\n        if (timestamps.length === 1) {\n          start = 1 - first;\n        } else {\n          start = (this.getDecimalForValue(timestamps[1]) - first) / 2;\n        }\n        last = this.getDecimalForValue(timestamps[timestamps.length - 1]);\n        if (timestamps.length === 1) {\n          end = last;\n        } else {\n          end = (last - this.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n        }\n      }\n      const limit = timestamps.length < 3 ? 0.5 : 0.25;\n      start = _limitValue(start, 0, limit);\n      end = _limitValue(end, 0, limit);\n      this._offsets = {\n        start,\n        end,\n        factor: 1 / (start + 1 + end)\n      };\n    }\n    _generate() {\n      const adapter = this._adapter;\n      const min = this.min;\n      const max = this.max;\n      const options = this.options;\n      const timeOpts = options.time;\n      const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, this._getLabelCapacity(min));\n      const stepSize = valueOrDefault(timeOpts.stepSize, 1);\n      const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n      const hasWeekday = isNumber(weekday) || weekday === true;\n      const ticks = {};\n      let first = min;\n      let time, count;\n      if (hasWeekday) {\n        first = +adapter.startOf(first, 'isoWeek', weekday);\n      }\n      first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n      if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n        throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n      }\n      const timestamps = options.ticks.source === 'data' && this.getDataTimestamps();\n      for (time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++) {\n        addTick(ticks, time, timestamps);\n      }\n      if (time === max || options.bounds === 'ticks' || count === 1) {\n        addTick(ticks, time, timestamps);\n      }\n      return Object.keys(ticks).sort((a, b) => a - b).map(x => +x);\n    }\n    getLabelForValue(value) {\n      const adapter = this._adapter;\n      const timeOpts = this.options.time;\n      if (timeOpts.tooltipFormat) {\n        return adapter.format(value, timeOpts.tooltipFormat);\n      }\n      return adapter.format(value, timeOpts.displayFormats.datetime);\n    }\n    _tickFormatFunction(time, index, ticks, format) {\n      const options = this.options;\n      const formats = options.time.displayFormats;\n      const unit = this._unit;\n      const majorUnit = this._majorUnit;\n      const minorFormat = unit && formats[unit];\n      const majorFormat = majorUnit && formats[majorUnit];\n      const tick = ticks[index];\n      const major = majorUnit && majorFormat && tick && tick.major;\n      const label = this._adapter.format(time, format || (major ? majorFormat : minorFormat));\n      const formatter = options.ticks.callback;\n      return formatter ? callback(formatter, [label, index, ticks], this) : label;\n    }\n    generateTickLabels(ticks) {\n      let i, ilen, tick;\n      for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n        tick = ticks[i];\n        tick.label = this._tickFormatFunction(tick.value, i, ticks);\n      }\n    }\n    getDecimalForValue(value) {\n      return value === null ? NaN : (value - this.min) / (this.max - this.min);\n    }\n    getPixelForValue(value) {\n      const offsets = this._offsets;\n      const pos = this.getDecimalForValue(value);\n      return this.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n    }\n    getValueForPixel(pixel) {\n      const offsets = this._offsets;\n      const pos = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n      return this.min + pos * (this.max - this.min);\n    }\n    _getLabelSize(label) {\n      const ticksOpts = this.options.ticks;\n      const tickLabelWidth = this.ctx.measureText(label).width;\n      const angle = toRadians(this.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n      const cosRotation = Math.cos(angle);\n      const sinRotation = Math.sin(angle);\n      const tickFontSize = this._resolveTickFontOptions(0).size;\n      return {\n        w: tickLabelWidth * cosRotation + tickFontSize * sinRotation,\n        h: tickLabelWidth * sinRotation + tickFontSize * cosRotation\n      };\n    }\n    _getLabelCapacity(exampleTime) {\n      const timeOpts = this.options.time;\n      const displayFormats = timeOpts.displayFormats;\n      const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n      const exampleLabel = this._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(this, [exampleTime], this._majorUnit), format);\n      const size = this._getLabelSize(exampleLabel);\n      const capacity = Math.floor(this.isHorizontal() ? this.width / size.w : this.height / size.h) - 1;\n      return capacity > 0 ? capacity : 1;\n    }\n    getDataTimestamps() {\n      let timestamps = this._cache.data || [];\n      let i, ilen;\n      if (timestamps.length) {\n        return timestamps;\n      }\n      const metas = this.getMatchingVisibleMetas();\n      if (this._normalized && metas.length) {\n        return this._cache.data = metas[0].controller.getAllParsedValues(this);\n      }\n      for (i = 0, ilen = metas.length; i < ilen; ++i) {\n        timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(this));\n      }\n      return this._cache.data = this.normalize(timestamps);\n    }\n    getLabelTimestamps() {\n      const timestamps = this._cache.labels || [];\n      let i, ilen;\n      if (timestamps.length) {\n        return timestamps;\n      }\n      const labels = this.getLabels();\n      for (i = 0, ilen = labels.length; i < ilen; ++i) {\n        timestamps.push(parse(this, labels[i]));\n      }\n      return this._cache.labels = this._normalized ? timestamps : this.normalize(timestamps);\n    }\n    normalize(values) {\n      return _arrayUnique(values.sort(sorter));\n    }\n  }\n  TimeScale.id = 'time';\n  TimeScale.defaults = {\n    bounds: 'data',\n    adapters: {},\n    time: {\n      parser: false,\n      unit: false,\n      round: false,\n      isoWeekday: false,\n      minUnit: 'millisecond',\n      displayFormats: {}\n    },\n    ticks: {\n      source: 'auto',\n      major: {\n        enabled: false\n      }\n    }\n  };\n  function interpolate(table, val, reverse) {\n    let lo = 0;\n    let hi = table.length - 1;\n    let prevSource, nextSource, prevTarget, nextTarget;\n    if (reverse) {\n      if (val >= table[lo].pos && val <= table[hi].pos) {\n        ({\n          lo,\n          hi\n        } = _lookupByKey(table, 'pos', val));\n      }\n      ({\n        pos: prevSource,\n        time: prevTarget\n      } = table[lo]);\n      ({\n        pos: nextSource,\n        time: nextTarget\n      } = table[hi]);\n    } else {\n      if (val >= table[lo].time && val <= table[hi].time) {\n        ({\n          lo,\n          hi\n        } = _lookupByKey(table, 'time', val));\n      }\n      ({\n        time: prevSource,\n        pos: prevTarget\n      } = table[lo]);\n      ({\n        time: nextSource,\n        pos: nextTarget\n      } = table[hi]);\n    }\n    const span = nextSource - prevSource;\n    return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n  }\n  class TimeSeriesScale extends TimeScale {\n    constructor(props) {\n      super(props);\n      this._table = [];\n      this._minPos = undefined;\n      this._tableRange = undefined;\n    }\n    initOffsets() {\n      const timestamps = this._getTimestampsForTable();\n      const table = this._table = this.buildLookupTable(timestamps);\n      this._minPos = interpolate(table, this.min);\n      this._tableRange = interpolate(table, this.max) - this._minPos;\n      super.initOffsets(timestamps);\n    }\n    buildLookupTable(timestamps) {\n      const {\n        min,\n        max\n      } = this;\n      const items = [];\n      const table = [];\n      let i, ilen, prev, curr, next;\n      for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n        curr = timestamps[i];\n        if (curr >= min && curr <= max) {\n          items.push(curr);\n        }\n      }\n      if (items.length < 2) {\n        return [{\n          time: min,\n          pos: 0\n        }, {\n          time: max,\n          pos: 1\n        }];\n      }\n      for (i = 0, ilen = items.length; i < ilen; ++i) {\n        next = items[i + 1];\n        prev = items[i - 1];\n        curr = items[i];\n        if (Math.round((next + prev) / 2) !== curr) {\n          table.push({\n            time: curr,\n            pos: i / (ilen - 1)\n          });\n        }\n      }\n      return table;\n    }\n    _getTimestampsForTable() {\n      let timestamps = this._cache.all || [];\n      if (timestamps.length) {\n        return timestamps;\n      }\n      const data = this.getDataTimestamps();\n      const label = this.getLabelTimestamps();\n      if (data.length && label.length) {\n        timestamps = this.normalize(data.concat(label));\n      } else {\n        timestamps = data.length ? data : label;\n      }\n      timestamps = this._cache.all = timestamps;\n      return timestamps;\n    }\n    getDecimalForValue(value) {\n      return (interpolate(this._table, value) - this._minPos) / this._tableRange;\n    }\n    getValueForPixel(pixel) {\n      const offsets = this._offsets;\n      const decimal = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n      return interpolate(this._table, decimal * this._tableRange + this._minPos, true);\n    }\n  }\n  TimeSeriesScale.id = 'timeseries';\n  TimeSeriesScale.defaults = TimeScale.defaults;\n  var scales = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    CategoryScale: CategoryScale,\n    LinearScale: LinearScale,\n    LogarithmicScale: LogarithmicScale,\n    RadialLinearScale: RadialLinearScale,\n    TimeScale: TimeScale,\n    TimeSeriesScale: TimeSeriesScale\n  });\n  Chart.register(controllers, scales, elements, plugins);\n  Chart.helpers = {\n    ...helpers\n  };\n  Chart._adapters = _adapters;\n  Chart.Animation = Animation;\n  Chart.Animations = Animations;\n  Chart.animator = animator;\n  Chart.controllers = registry.controllers.items;\n  Chart.DatasetController = DatasetController;\n  Chart.Element = Element;\n  Chart.elements = elements;\n  Chart.Interaction = Interaction;\n  Chart.layouts = layouts;\n  Chart.platforms = platforms;\n  Chart.Scale = Scale;\n  Chart.Ticks = Ticks;\n  Object.assign(Chart, controllers, scales, elements, plugins, platforms);\n  Chart.Chart = Chart;\n  if (typeof window !== 'undefined') {\n    window.Chart = Chart;\n  }\n  return Chart;\n});","map":{"version":3,"names":["global","factory","exports","module","define","amd","globalThis","self","Chart","fontString","pixelSize","fontStyle","fontFamily","requestAnimFrame","window","callback","requestAnimationFrame","throttled","fn","thisArg","updateFn","updateArgs","args","Array","prototype","slice","call","ticking","rest","apply","debounce","delay","timeout","clearTimeout","setTimeout","_toLeftRightCenter","align","_alignStartEnd","start","end","_textX","left","right","rtl","check","Animator","constructor","_request","_charts","Map","_running","_lastDate","undefined","_notify","chart","anims","date","type","callbacks","listeners","numSteps","duration","forEach","initial","currentStep","Math","min","_refresh","_update","Date","now","remaining","running","items","length","i","draw","item","_active","_total","tick","pop","_getAnims","charts","get","complete","progress","set","listen","event","cb","push","add","has","reduce","acc","cur","max","_duration","stop","cancel","remove","delete","animator","map$1","A","B","C","D","E","F","a","b","c","d","e","f","hex","h1","h2","eq","isShort","v","r","g","hexParse","str","len","ret","hexString","round","lim","l","h","p2b","n2b","b2n","n2p","RGB_RE","rgbParse","m","exec","rgbString","HUE_RE","hsl2rgbn","s","n","k","hsv2rgbn","hwb2rgbn","w","rgb","rgb2hsl","range","calln","isArray","map","hsl2rgb","hwb2rgb","hsv2rgb","hue","hueParse","p1","p2","rotate","deg","hslString","map$1$1","x","Z","Y","X","W","V","U","T","S","R","Q","P","O","N","M","L","K","G","H","I","J","names","OiceXe","antiquewEte","aqua","aquamarRe","azuY","beige","bisque","black","blanKedOmond","Xe","XeviTet","bPwn","burlywood","caMtXe","KartYuse","KocTate","cSO","cSnflowerXe","cSnsilk","crimson","cyan","xXe","xcyan","xgTMnPd","xWay","xgYF","xgYy","xkhaki","xmagFta","xTivegYF","xSange","xScEd","xYd","xsOmon","xsHgYF","xUXe","xUWay","xUgYy","xQe","xviTet","dAppRk","dApskyXe","dimWay","dimgYy","dodgerXe","fiYbrick","flSOwEte","foYstWAn","fuKsia","gaRsbSo","ghostwEte","gTd","gTMnPd","Way","gYF","gYFLw","gYy","honeyMw","hotpRk","RdianYd","Rdigo","ivSy","khaki","lavFMr","lavFMrXsh","lawngYF","NmoncEffon","ZXe","ZcSO","Zcyan","ZgTMnPdLw","ZWay","ZgYF","ZgYy","ZpRk","ZsOmon","ZsHgYF","ZskyXe","ZUWay","ZUgYy","ZstAlXe","ZLw","lime","limegYF","lRF","magFta","maPon","VaquamarRe","VXe","VScEd","VpurpN","VsHgYF","VUXe","VsprRggYF","VQe","VviTetYd","midnightXe","mRtcYam","mistyPse","moccasR","navajowEte","navy","Tdlace","Tive","TivedBb","Sange","SangeYd","ScEd","pOegTMnPd","pOegYF","pOeQe","pOeviTetYd","papayawEp","pHKpuff","peru","pRk","plum","powMrXe","purpN","YbeccapurpN","Yd","Psybrown","PyOXe","saddNbPwn","sOmon","sandybPwn","sHgYF","sHshell","siFna","silver","skyXe","UXe","UWay","UgYy","snow","sprRggYF","stAlXe","tan","teO","tEstN","tomato","Qe","viTet","JHt","wEte","wEtesmoke","Lw","LwgYF","unpack","unpacked","keys","Object","tkeys","j","ok","nk","replace","parseInt","names$1","nameParse","transparent","toLowerCase","modHSL","ratio","tmp","clone$1","proto","assign","fromObject","input","functionParse","charAt","Color","_rgb","_valid","valid","obj","mix","color","weight","me","c1","c2","w2","p","w1","clone","alpha","clearer","greyscale","val","opaquer","negate","lighten","darken","saturate","desaturate","index_esm","isPatternOrGradient","value","CanvasGradient","CanvasPattern","getHoverColor","noop","uid","id","isNullOrUndef","toString","substr","isObject","isNumberFinite","Number","isFinite","finiteOrDefault","defaultValue","valueOrDefault","toPercentage","dimension","endsWith","parseFloat","toDimension","each","loopable","reverse","_elementsEqual","a0","a1","ilen","v0","v1","datasetIndex","index","source","target","create","klen","isValidKey","key","indexOf","_merger","options","tval","sval","merge","sources","merger","mergeIf","_mergerIf","hasOwnProperty","_deprecated","scope","previous","current","console","warn","emptyString","dot","indexOfDotOrLength","idx","resolveObjectKey","pos","_capitalize","toUpperCase","defined","isFunction","setsEqual","size","_isClickEvent","overrides","descriptors","getScope$1","node","split","root","values","Defaults","_descriptors","animation","backgroundColor","borderColor","datasets","devicePixelRatio","context","platform","getDevicePixelRatio","elements","events","font","family","style","lineHeight","hover","hoverBackgroundColor","ctx","hoverBorderColor","hoverColor","indexAxis","interaction","mode","intersect","maintainAspectRatio","onHover","onClick","parsing","plugins","responsive","scale","scales","showLine","drawActiveElementsOnTop","describe","override","route","name","targetScope","targetName","scopeObject","targetScopeObject","privateName","defineProperties","writable","enumerable","local","defaults","_scriptable","startsWith","_indexable","_fallback","PI","TAU","PITAU","INFINITY","POSITIVE_INFINITY","RAD_PER_DEG","HALF_PI","QUARTER_PI","TWO_THIRDS_PI","log10","sign","niceNum","roundedRange","almostEquals","niceRange","pow","floor","fraction","niceFraction","_factorize","result","sqrt","sort","isNumber","isNaN","y","epsilon","abs","almostWhole","rounded","_setMinAndMaxByKey","array","property","toRadians","degrees","toDegrees","radians","_decimalPlaces","getAngleFromPoint","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","angle","atan2","distance","distanceBetweenPoints","pt1","pt2","_angleDiff","_normalizeAngle","_angleBetween","sameAngleIsFullCircle","angleToStart","angleToEnd","startToAngle","endToAngle","_limitValue","_int16Range","_isBetween","toFontString","_measureText","data","gc","longest","string","textWidth","measureText","width","_longestText","arrayOfThings","cache","garbageCollect","save","jlen","thing","nestedThing","restore","gcLen","splice","_alignPixel","pixel","currentDevicePixelRatio","halfWidth","clearCanvas","canvas","getContext","resetTransform","clearRect","height","drawPoint","xOffset","yOffset","cornerRadius","pointStyle","rotation","radius","rad","translate","drawImage","beginPath","arc","closePath","moveTo","sin","cos","lineTo","SQRT1_2","rect","fill","borderWidth","stroke","_isPointInArea","point","area","margin","top","bottom","clipArea","clip","unclipArea","_steppedLineTo","flip","midpoint","_bezierCurveTo","bezierCurveTo","cp1x","cp2x","cp1y","cp2y","renderText","text","opts","lines","strokeWidth","strokeColor","line","setRenderOpts","strokeStyle","lineWidth","strokeText","maxWidth","fillText","decorateText","translation","fillStyle","textAlign","textBaseline","strikethrough","underline","metrics","actualBoundingBoxLeft","actualBoundingBoxRight","actualBoundingBoxAscent","actualBoundingBoxDescent","yDecoration","decorationWidth","addRoundedRectPath","topLeft","bottomLeft","bottomRight","topRight","_lookup","table","cmp","hi","lo","mid","_lookupByKey","_rlookupByKey","_filterBetween","arrayEvents","listenArrayEvents","listener","_chartjs","defineProperty","configurable","method","base","res","object","unlistenArrayEvents","stub","_arrayUnique","Set","from","_isDomSupported","document","_getParentNode","domNode","parent","parentNode","host","parseMaxStyle","styleValue","parentProperty","valueInPixels","getComputedStyle","element","getStyle","el","getPropertyValue","positions","getPositionedStyle","styles","suffix","useOffsetPos","shadowRoot","getCanvasPosition","evt","native","touches","offsetX","offsetY","box","getBoundingClientRect","clientX","clientY","getRelativePosition$1","borderBox","boxSizing","paddings","borders","getContainerSize","maxHeight","container","clientWidth","clientHeight","containerStyle","containerBorder","containerPadding","round1","getMaximumSize","bbWidth","bbHeight","aspectRatio","margins","containerSize","retinaScale","forceRatio","forceStyle","pixelRatio","deviceHeight","deviceWidth","setTransform","supportsEventListenerOptions","passiveSupported","passive","addEventListener","removeEventListener","readUsedSize","matches","match","getRelativePosition","evaluateAllVisibleItems","handler","metasets","getSortedVisibleDatasetMetas","skip","binarySearch","metaset","axis","controller","_sorted","iScale","_cachedMeta","lookupMethod","_reversePixels","_sharedOptions","getRange","optimizedEvaluateItems","position","getDistanceMetricForAxis","useX","useY","deltaX","deltaY","getIntersectItems","useFinalPosition","chartArea","_minPadding","evaluationFunc","inRange","getNearestRadialItems","startAngle","endAngle","getProps","getNearestCartesianItems","distanceMetric","minDistance","center","getCenterPoint","pointInArea","getNearestItems","getAxisItems","rangeMethod","intersectsItem","Interaction","modes","meta","dataset","getDatasetMeta","nearest","LINE_HEIGHT","RegExp","FONT_STYLE","toLineHeight","numberOrZero","_readValueToProps","props","objProps","read","prop","toTRBL","toTRBLCorners","toPadding","toFont","fallback","resolve","inputs","info","cacheable","_addGrace","minmax","grace","beginAtZero","change","keepZero","createContext","parentContext","STATIC_POSITIONS","filterByPosition","filter","filterDynamicPositionByAxis","sortByWeight","wrapBoxes","boxes","layoutBoxes","stack","stackWeight","horizontal","isHorizontal","buildStacks","layouts","stacks","wrap","includes","_stack","count","placed","setLayoutDims","params","vBoxMaxWidth","hBoxMaxHeight","layout","fullSize","factor","availableWidth","availableHeight","buildLayoutBoxes","centerHorizontal","centerVertical","leftAndTop","concat","rightAndBottom","vertical","getCombinedMax","maxPadding","updateMaxPadding","boxPadding","updateDims","getPadding","newWidth","outerWidth","newHeight","outerHeight","widthChanged","heightChanged","same","other","handleMaxPadding","updatePos","getMargins","marginForPositions","fitBoxes","refitBoxes","refit","changed","update","setBoxDims","placeBoxes","userPadding","padding","autoPadding","addBox","_layers","z","removeBox","layoutItem","configure","minPadding","verticalBoxes","horizontalBoxes","beforeLayout","visibleVerticalBoxCount","total","display","freeze","_createResolver","scopes","prefixes","rootScopes","getTarget","_resolve","Symbol","toStringTag","_cacheable","_scopes","_rootScopes","_getTarget","Proxy","deleteProperty","_keys","_cached","_resolveWithPrefixes","getOwnPropertyDescriptor","Reflect","getPrototypeOf","getKeysFromAllScopes","ownKeys","storage","_storage","_attachContext","proxy","subProxy","descriptorDefaults","_proxy","_context","_subProxy","setContext","receiver","_resolveWithContext","allKeys","scriptable","indexable","_allKeys","isScriptable","isIndexable","readKey","prefix","needsSubResolver","_resolveScriptable","_resolveArray","Error","join","createSubResolver","arr","resolver","resolveFallback","getScope","addScopes","parentScopes","parentFallback","allScopes","addScopesFromKey","subGetTarget","resolveKeysFromAllScopes","EPSILON","getPoint","points","getValueAxis","splineCurve","firstPoint","middlePoint","afterPoint","t","next","d01","d12","s01","s12","fa","fb","monotoneAdjust","deltaK","mK","pointsLen","alphaK","betaK","tauK","squaredMagnitude","pointCurrent","pointAfter","monotoneCompute","valueAxis","delta","pointBefore","iPixel","vPixel","splineCurveMonotone","slopeDelta","capControlPoint","pt","capBezierPoints","inArea","inAreaPrev","inAreaNext","_updateBezierControlPoints","loop","controlPoints","spanGaps","cubicInterpolationMode","prev","tension","atEdge","elasticIn","elasticOut","effects","linear","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","easeInOutBounce","_pointInLine","_steppedInterpolation","_bezierInterpolation","cp1","cp2","intlCache","getNumberFormat","locale","cacheKey","JSON","stringify","formatter","Intl","NumberFormat","formatNumber","num","format","getRightToLeftAdapter","rectX","setWidth","xPlus","leftForLtr","itemWidth","getLeftToRightAdapter","_itemWidth","getRtlAdapter","overrideTextDirection","direction","original","getPropertyPriority","setProperty","prevTextDirection","restoreTextDirection","propertyFn","between","compare","normalize","normalizeSegment","getSegment","segment","bounds","startBound","endBound","_boundSegment","inside","subStart","prevValue","startIsBefore","endIsBefore","shouldStart","shouldStop","_boundSegments","segments","sub","findStartAndEnd","solidSegments","last","_computeSegments","segmentOptions","_loop","splitByStyles","completeLoop","_fullLoop","doSplitByStyles","chartContext","_chart","baseStyle","readStyle","_datasetIndex","prevStyle","addStyle","st","dir","p0","p0DataIndex","p1DataIndex","styleChanged","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","helpers","__proto__","easingEffects","BasePlatform","acquireContext","releaseContext","isAttached","updateConfig","config","BasicPlatform","EXPANDO_KEY","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","isNullOrEmpty","initCanvas","renderHeight","getAttribute","renderWidth","displayWidth","displayHeight","eventListenerOptions","addListener","removeListener","fromNativeEvent","nodeListContains","nodeList","contains","createAttachObserver","observer","MutationObserver","entries","trigger","entry","addedNodes","removedNodes","observe","childList","subtree","createDetachObserver","drpListeningCharts","oldDevicePixelRatio","onWindowResize","dpr","resize","listenDevicePixelRatioChanges","unlistenDevicePixelRatioChanges","createResizeObserver","ResizeObserver","contentRect","releaseObserver","disconnect","createProxyAndListen","DomPlatform","removeAttribute","setAttribute","proxies","$proxies","handlers","attach","detach","isConnected","_detectPlatform","OffscreenCanvas","platforms","interpolators","boolean","to","c0","number","Animation","cfg","currentValue","_fn","_easing","easing","_start","_target","_prop","_from","_to","_promises","active","elapsed","remain","wait","promises","Promise","rej","resolved","numbers","colors","animationOptions","properties","show","animations","visible","hide","Animations","_properties","animatedProps","getOwnPropertyNames","option","_animateOptions","newOptions","resolveTargetOptions","_createAnimations","$shared","awaitAll","$animations","then","anim","all","scaleClip","allowedOverflow","defaultClip","xScale","yScale","toClip","disabled","getSortedDatasetIndices","filterVisible","_getSortedDatasetMetas","applyStack","dsIndex","singleMode","otherValue","convertObjectDataToArray","adata","isStacked","stacked","getStackKey","indexScale","valueScale","getUserBounds","minDefined","maxDefined","NEGATIVE_INFINITY","getOrCreateStack","stackKey","indexValue","subStack","getLastIndexInStack","vScale","positive","getMatchingVisibleMetas","updateStacks","parsed","_stacks","iAxis","vAxis","itemStacks","_top","_bottom","getFirstScaleId","shift","createDatasetContext","createDataContext","dataIndex","raw","clearStacks","_parsed","isDirectUpdateMode","cloneIfNotShared","cached","shared","createStack","canStack","hidden","_stacked","DatasetController","_ctx","_cachedDataOpts","getMeta","_type","_parsing","_data","_objectData","_drawStart","_drawCount","enableOptionSharing","$context","_syncList","initialize","linkScales","addElements","updateIndex","getDataset","chooseId","xid","xAxisID","yid","yAxisID","rid","rAxisID","iid","iAxisID","vid","vAxisID","getScaleForId","rScale","scaleID","_getOtherScale","reset","_destroy","_dataCheck","isExtensible","datasetElementType","buildOrUpdateElements","resetNewElements","stackChanged","oldStacked","_resyncElements","scopeKeys","datasetScopeKeys","getOptionScopes","createResolver","parse","sorted","parseArrayData","parseObjectData","parsePrimitiveData","isNotInOrderComparedToPrev","labels","getLabels","singleScale","xAxisKey","yAxisKey","getParsed","getDataElement","updateRangeFromParsed","parsedValue","NaN","getMinMax","otherScale","otherMin","otherMax","_skip","getAllParsedValues","getMaxOverflow","getLabelAndValue","label","getLabelForValue","_clip","resolveDatasetElementOptions","resolveDataElementOptions","_resolveElementOptions","dataElementType","elementType","sharing","datasetElementScopeKeys","resolveNamedOptions","_resolveAnimations","transition","datasetAnimationScopeKeys","getSharedOptions","includeOptions","sharedOptions","_animationsDisabled","updateElement","updateSharedOptions","_setStyle","removeHoverStyle","setHoverStyle","_removeDatasetHoverStyle","_setDatasetHoverStyle","arg1","arg2","numMeta","numData","_insertElements","_removeElements","move","updateElements","removed","_sync","_dataChanges","_onDataPush","arguments","_onDataPop","_onDataShift","_onDataSplice","newCount","_onDataUnshift","Element","tooltipPosition","hasValue","final","defaultRoutes","formatters","numeric","tickValue","ticks","notation","maxTick","calculateDelta","logDelta","numDecimal","minimumFractionDigits","maximumFractionDigits","logarithmic","Ticks","offset","grid","drawBorder","drawOnChartArea","drawTicks","tickLength","tickWidth","tickColor","title","minRotation","maxRotation","mirror","textStrokeWidth","textStrokeColor","autoSkip","autoSkipPadding","labelOffset","minor","major","crossAlign","showLabelBackdrop","backdropColor","backdropPadding","tickOpts","ticksLimit","maxTicksLimit","determineMaxTicks","majorIndices","enabled","getMajorIndices","numMajorIndices","first","newTicks","skipMajors","spacing","calculateSpacing","avgMajorSpacing","_tickSize","maxScale","_length","maxChart","_maxLength","evenMajorSpacing","getEvenSpacing","factors","ceil","majorStart","majorEnd","diff","reverseAlign","offsetFromEdge","edge","sample","numItems","increment","getPixelForGridLine","offsetGridLines","validIndex","_startPixel","_endPixel","lineValue","getPixelForTick","caches","getTickMarkLength","getTitleHeight","createScaleContext","createTickContext","titleAlign","titleArgs","titleX","titleY","positionAxisID","getPixelForValue","Scale","_margins","paddingTop","paddingBottom","paddingLeft","paddingRight","labelRotation","_range","_gridLineItems","_labelItems","_labelSizes","_longestTextCache","_userMax","_userMin","_suggestedMax","_suggestedMin","_ticksLength","_borderValue","_cache","_dataLimitsCached","init","suggestedMin","suggestedMax","metas","getTicks","xLabels","yLabels","beforeUpdate","sampleSize","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","beforeBuildTicks","buildTicks","afterBuildTicks","samplingEnabled","_convertTicksToLabels","beforeCalculateLabelRotation","calculateLabelRotation","afterCalculateLabelRotation","beforeFit","fit","afterFit","afterUpdate","reversePixels","startPixel","endPixel","_alignToPixels","alignToPixels","_callHooks","notifyPlugins","beforeTickToLabelConversion","generateTickLabels","afterTickToLabelConversion","numTicks","maxLabelDiagonal","_isVisible","labelSizes","_getLabelSizes","maxLabelWidth","widest","maxLabelHeight","highest","asin","minSize","titleOpts","gridOpts","titleHeight","tickPadding","angleRadians","labelHeight","labelWidth","_calculatePadding","_handleMargins","isRotated","labelsBelowTicks","offsetLeft","offsetRight","isFullSize","_computeLabelSizes","widths","heights","widestLabelSize","highestLabelSize","tickFont","nestedLabel","_resolveTickFontOptions","valueAt","getValueForPixel","getPixelForDecimal","decimal","getDecimalForPixel","getBasePixel","getBaseValue","optionTicks","rot","_computeGridLineItems","ticksLength","tl","borderOpts","axisWidth","axisHalfWidth","alignBorderValue","borderValue","alignedLineValue","tx1","ty1","tx2","ty2","x1","y1","x2","y2","limit","step","optsAtIndex","lineColor","tickBorderDash","tickBorderDashOffset","_computeLabelItems","tickAndPadding","hTickAndPadding","lineCount","textOffset","_getXAxisLabelAlignment","_getYAxisLabelAlignment","halfCount","backdrop","labelPadding","_computeLabelArea","drawBackground","fillRect","getLineWidthForValue","findIndex","drawGrid","drawLine","setLineDash","lineDashOffset","lastLineWidth","drawLabels","drawTitle","tz","gz","axisID","_maxDigits","fontSize","TypedRegistry","isForType","isPrototypeOf","register","parentScope","isIChartComponent","registerDefaults","unregister","itemDefaults","routeDefaults","routes","propertyParts","sourceName","sourceScope","parts","Registry","controllers","_typedRegistries","_each","addControllers","addPlugins","addScales","getController","_get","getElement","getPlugin","getScale","removeControllers","removeElements","removePlugins","removeScales","typedRegistry","arg","reg","_getRegistryForType","_exec","itemReg","registry","component","camelMethod","PluginService","_init","notify","hook","_createDescriptors","descriptor","plugin","cancelable","invalidate","_oldCache","_notifyStateChanges","allPlugins","createDescriptors","previousDescriptors","some","getOpts","pluginOpts","pluginScopeKeys","getIndexAxis","datasetDefaults","datasetOptions","getAxisFromDefaultScaleID","getDefaultScaleIDFromAxis","axisFromPosition","determineAxis","scaleOptions","mergeScaleConfig","chartDefaults","configScales","chartIndexAxis","firstIDs","scaleConf","error","defaultId","defaultScaleOptions","defaultID","initOptions","initData","initConfig","keyCache","keysCached","cachedKeys","generate","addIfFound","Config","_config","_scopeCache","_resolverCache","clearCache","clear","datasetType","additionalOptionScopes","_cachedScopes","mainScope","resetCache","keyLists","chartOptionScopes","subPrefixes","getResolver","needContext","subResolver","resolverCache","hasFunction","version","KNOWN_POSITIONS","positionIsHorizontal","compare2Level","l1","l2","onAnimationsComplete","onComplete","onAnimationProgress","onProgress","getCanvas","getElementById","instances","getChart","moveNumericKeys","intKey","determineLastEvent","lastEvent","inChartArea","isClick","userConfig","initialCanvas","existingChart","_options","_aspectRatio","_metasets","_lastEvent","_listeners","_responsiveListeners","_sortedMetasets","_plugins","_hiddenIndices","attached","_doResize","resizeDelay","_initialize","bindEvents","_resize","_resizeBeforeDraw","newSize","newRatio","onResize","render","ensureScalesHaveIDs","scalesOptions","axisOptions","buildOrUpdateScales","scaleOpts","updated","isRadial","dposition","dtype","scaleType","scaleClass","hasUpdated","_updateMetasets","_destroyDatasetMeta","_removeUnreferencedMetasets","_dataset","buildOrUpdateControllers","newControllers","order","isDatasetVisible","ControllerClass","_resetElements","animsDisabled","_updateScales","_checkEventBindings","_updateHiddenIndices","_updateLayout","_updateDatasets","_eventHandler","_updateHoverStyles","existingEvents","newEvents","unbindEvents","changes","_getUniformDataChanges","datasetCount","makeSet","changeSet","noArea","_idx","_updateDataset","layers","_drawDatasets","_drawDataset","useClip","getElementsAtEventForMode","getVisibleDatasetCount","setDatasetVisibility","toggleDataVisibility","getDataVisibility","_updateVisibility","_stop","destroy","toBase64Image","toDataURL","bindUserEvents","bindResponsiveEvents","_add","_remove","detached","updateHoverStyle","getActiveElements","setActiveElements","activeElements","lastActive","replay","hoverOptions","deactivated","activated","eventFilter","_handleEvent","_getActiveElements","invalidatePlugins","abstract","DateAdapter","formats","timestamp","amount","unit","startOf","weekday","endOf","members","_adapters","_date","getAllScaleValues","$bar","visibleMetas","computeMinSampleSize","curr","updateMinAndPrev","computeFitCategoryTraits","ruler","stackCount","thickness","barThickness","categoryPercentage","barPercentage","chunk","pixels","computeFlexCategoryTraits","percent","parseFloatBar","startValue","endValue","barStart","barEnd","_custom","parseValue","parseArrayOrPrimitive","isFloatBar","custom","barSign","actualBase","borderProps","setBorderSkipped","borderSkipped","enableBorderRadius","parseEdge","swap","startEnd","orig","v2","setInflateAmount","inflateAmount","BarController","iAxisKey","vAxisKey","bars","_getRuler","firstOpts","vpixels","head","_calculateBarValuePixels","ipixels","_calculateBarIndexPixels","_getStacks","grouped","_getStackCount","_getStackIndex","baseValue","minBarLength","floating","halfGrid","skipNull","maxBarThickness","Infinity","stackIndex","rects","_index_","_value_","BubbleController","tooltip","getRatioAndOffset","circumference","cutout","ratioX","ratioY","startX","startY","endX","endY","calcMax","calcMin","maxX","maxY","minX","minY","DoughnutController","innerRadius","outerRadius","getter","_getRotation","_getCircumference","_getRotationExtents","arcs","getMaxBorderWidth","getMaxOffset","maxSize","chartWeight","_getRingWeight","maxRadius","radiusLength","_getVisibleDatasetWeightTotal","calculateTotal","_getRingWeightOffset","_circumference","animateRotate","calculateCircumference","animationOpts","centerX","centerY","animateScale","metaData","borderAlign","hoverBorderWidth","hoverOffset","ringWeightOffset","legend","generateLabels","legendItem","tooltipItem","dataLabel","formattedValue","LineController","animationsDisabled","getStartAndCountOfVisiblePoints","scaleRangesChanged","_decimated","animated","maxGapLength","directUpdate","prevParsed","nullData","border","lastPoint","updateControlPoints","pointCount","_scaleRanges","newRanges","xmin","xmax","ymin","ymax","PolarAreaController","_updateRadius","cutoutPercentage","xCenter","yCenter","datasetStartAngle","getIndexAngle","defaultAngle","countVisibleElements","_computeAngle","getDistanceFromCenterForValue","angleLines","circular","pointLabels","PieController","RadarController","pointPosition","getPointPositionForValue","ScatterController","clipArc","pixelMargin","angleMargin","toRadiusCorners","parseBorderRadius$1","angleDelta","o","borderRadius","halfThickness","innerLimit","computeOuterLimit","outerArcLimit","outerStart","outerEnd","innerStart","innerEnd","rThetaToXY","theta","pathArc","innerR","spacingOffset","noSpacingInnerRadius","noSpacingOuterRadius","avNogSpacingRadius","adjustedAngle","beta","angleOffset","outerStartAdjustedRadius","outerEndAdjustedRadius","outerStartAdjustedAngle","outerEndAdjustedAngle","innerStartAdjustedRadius","innerEndAdjustedRadius","innerStartAdjustedAngle","innerEndAdjustedAngle","pCenter","p4","p8","drawArc","fullCircles","drawFullCircleBorders","inner","lineJoin","ArcElement","chartX","chartY","rAdjust","betweenAngles","withinRadius","halfAngle","halfRadius","radiusOffset","setStyle","lineCap","getLineMethod","stepped","pathVars","paramsStart","paramsEnd","segmentStart","segmentEnd","outside","pathSegment","lineMethod","fastPathSegment","avgX","countX","prevX","lastY","pointIndex","drawX","truncX","_getSegmentMethod","useFastPath","_getInterpolationMethod","strokePathWithCache","path","_path","Path2D","strokePathDirect","segmentMethod","usePath2D","LineElement","_points","_segments","_pointsUpdated","interpolate","_interpolate","interpolated","inRange$1","hitRadius","PointElement","mouseX","mouseY","inXRange","inYRange","hoverRadius","getBarBounds","bar","half","skipOrLimit","parseBorderWidth","maxW","maxH","parseBorderRadius","maxR","enableBorder","boundingRects","outer","skipX","skipY","skipBoth","hasRadius","addNormalRectPath","inflateRect","refRect","BarElement","addRectPath","lttbDecimation","samples","decimated","bucketWidth","sampledIndex","endIndex","maxAreaPoint","maxArea","nextA","avgY","avgRangeStart","avgRangeEnd","avgRangeLength","rangeOffs","rangeTo","pointAx","pointAy","minMaxDecimation","minIndex","maxIndex","startIndex","xMin","xMax","dx","lastIndex","intermediateIndex1","intermediateIndex2","cleanDecimatedDataset","cleanDecimatedData","getStartAndCountOfVisiblePointsSimplified","plugin_decimation","algorithm","beforeElementsUpdate","xAxis","threshold","getLineByIndex","parseFillOption","fillOption","decodeFill","computeLinearBoundary","simpleArc","computeCircularBoundary","computeBoundary","findSegmentEnd","pointsFromSegments","boundary","linePoints","buildStackLine","sourcePoints","linesBelow","getLinesBelow","createBoundaryLine","addPointsBelow","below","unshift","sourcePoint","postponed","findPoint","pointValue","firstValue","lastValue","resolveTarget","propagate","visited","clipY","lineLoop","getBounds","_getEdge","tpoints","targetSegments","tgt","subBounds","fillSources","fillSource","clipBounds","interpolatedLineTo","interpolatedPoint","_fill","src","notShape","targetLoop","doFill","above","drawfill","lineOpts","plugin_filler","afterDatasetsUpdate","_args","$filler","beforeDraw","drawTime","beforeDatasetsDraw","beforeDatasetDraw","getBoxSize","labelOpts","boxHeight","boxWidth","usePointStyle","itemHeight","itemsEqual","Legend","_added","legendHitBoxes","_hoveredItem","doughnutMode","legendItems","columnSizes","lineWidths","buildLabels","labelFont","_computeTitleHeight","_fitRows","_fitCols","hitboxes","totalHeight","row","heightLimit","totalWidth","currentColWidth","currentColHeight","col","adjustHitBoxes","rtlHelper","hitbox","_draw","defaultColor","fontColor","halfFontSize","cursor","drawLegendBox","lineDash","drawOptions","SQRT2","yBoxTop","xBoxLeft","textDirection","realX","titleFont","titlePadding","topPaddingPlusHalfFontSize","_getLegendItemAt","hitBox","lh","handleEvent","isListened","hoveredItem","sameItem","onLeave","plugin_legend","_element","afterEvent","ci","Title","_padding","textSize","_drawArgs","fontOpts","createTitle","titleBlock","plugin_title","WeakMap","plugin_subtitle","positioners","average","eventPosition","nearestElement","tp","pushOrConcat","toPush","splitNewlines","String","createTooltipItem","getTooltipSize","body","footer","bodyFont","footerFont","titleLineCount","footerLineCount","bodyLineItemCount","combinedBodyLength","bodyItem","before","after","beforeBody","afterBody","titleSpacing","titleMarginBottom","bodyLineHeight","displayColors","bodySpacing","footerMarginTop","footerSpacing","widthPadding","maxLineWidth","determineYAlign","doesNotFitWithAlign","xAlign","caret","caretSize","caretPadding","determineXAlign","yAlign","chartWidth","determineAlignment","alignX","alignY","paddingAndSize","getBackgroundPoint","alignment","getAlignedX","getBeforeAfterBodyLines","createTooltipContext","tooltipItems","overrideCallbacks","Tooltip","opacity","_eventPosition","_size","_cachedAnimations","_tooltipItems","dataPoints","caretX","caretY","labelColors","labelPointStyles","labelTextColors","getTitle","beforeTitle","afterTitle","getBeforeBody","getBody","bodyItems","scoped","beforeLabel","afterLabel","getAfterBody","getFooter","beforeFooter","afterFooter","_createItems","itemSort","labelColor","labelPointStyle","labelTextColor","positionAndSize","backgroundPoint","external","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","titleColor","_drawColorBox","colorX","rtlColorX","yOffSet","colorY","multiKeyBackground","outerX","innerX","strokeRect","drawBody","bodyAlign","xLinePadding","fillLineOfText","bodyAlignForCalculation","textColor","bodyColor","drawFooter","footerAlign","footerColor","tooltipSize","quadraticCurveTo","_updateAnimationTarget","animX","animY","hasTooltipContent","globalAlpha","positionChanged","_positionChanged","_ignoreReplayEvents","plugin_tooltip","afterInit","afterDraw","labelCount","Decimation","Filler","SubTitle","addIfString","addedLabels","findOrAddLabel","lastIndexOf","CategoryScale","_startValue","_valueRange","_addedLabels","added","generateTicks$1","generationOptions","dataRange","MIN_SPACING","precision","maxTicks","maxDigits","includeBounds","maxSpaces","rmin","rmax","countDefined","minSpacing","niceMin","niceMax","numSpaces","decimalPlaces","relativeLabelSize","LinearScaleBase","_endValue","handleTickRangeOptions","setMin","setMax","minSign","maxSign","MAX_SAFE_INTEGER","MIN_SAFE_INTEGER","getTickLimit","stepSize","computeTickLimit","numericGeneratorOptions","LinearScale","isMajor","tickVal","generateTicks","endExp","endSignificand","exp","significand","lastTick","LogarithmicScale","_zero","getTickBackdropHeight","measureLabelSize","determineLimits","fitWithPointLabels","limits","valueCount","_pointLabels","pointLabelOpts","additionalAngle","centerPointLabels","getPointLabelContext","getPointPosition","drawingArea","plFont","hLimits","vLimits","updateLimits","setCenterPoint","_pointLabelItems","buildPointLabelItems","extra","outerDistance","pointLabelPosition","yForAngle","getTextAlignForAngle","leftForTextAlign","drawPointLabels","pathRadiusLine","drawRadiusLine","gridLineOpts","createPointLabelContext","RadialLinearScale","leftMovement","rightMovement","topMovement","bottomMovement","angleMultiplier","scalingFactor","getValueForDistanceFromCenter","scaledDistance","pointLabel","distanceFromCenter","getBasePosition","getPointLabelPosition","animate","INTERVALS","millisecond","common","steps","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","adapter","_adapter","parser","isoWeekday","_parseOpts","determineUnitForAutoTicks","minUnit","capacity","interval","determineUnitForFormatting","determineMajorUnit","addTick","time","timestamps","setMajorTicks","majorUnit","ticksFromTimestamps","TimeScale","_unit","_majorUnit","_offsets","_normalized","adapters","displayFormats","normalized","_applyBounds","_getLabelBounds","getLabelTimestamps","timeOpts","_generate","_getLabelCapacity","initOffsets","getDecimalForValue","hasWeekday","getDataTimestamps","tooltipFormat","datetime","_tickFormatFunction","minorFormat","majorFormat","offsets","_getLabelSize","ticksOpts","tickLabelWidth","cosRotation","sinRotation","tickFontSize","exampleTime","exampleLabel","prevSource","nextSource","prevTarget","nextTarget","span","TimeSeriesScale","_table","_minPos","_tableRange","_getTimestampsForTable","buildLookupTable"],"sources":["C:/Users/SETUP/Desktop/yap-t carbonsync ai/frontend/node_modules/chart.js/dist/chart.js"],"sourcesContent":["/*!\n * Chart.js v3.7.1\n * https://www.chartjs.org\n * (c) 2022 Chart.js Contributors\n * Released under the MIT License\n */\n(function (global, factory) {\ntypeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\ntypeof define === 'function' && define.amd ? define(factory) :\n(global = typeof globalThis !== 'undefined' ? globalThis : global || self, global.Chart = factory());\n})(this, (function () { 'use strict';\n\nfunction fontString(pixelSize, fontStyle, fontFamily) {\n  return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n}\nconst requestAnimFrame = (function() {\n  if (typeof window === 'undefined') {\n    return function(callback) {\n      return callback();\n    };\n  }\n  return window.requestAnimationFrame;\n}());\nfunction throttled(fn, thisArg, updateFn) {\n  const updateArgs = updateFn || ((args) => Array.prototype.slice.call(args));\n  let ticking = false;\n  let args = [];\n  return function(...rest) {\n    args = updateArgs(rest);\n    if (!ticking) {\n      ticking = true;\n      requestAnimFrame.call(window, () => {\n        ticking = false;\n        fn.apply(thisArg, args);\n      });\n    }\n  };\n}\nfunction debounce(fn, delay) {\n  let timeout;\n  return function(...args) {\n    if (delay) {\n      clearTimeout(timeout);\n      timeout = setTimeout(fn, delay, args);\n    } else {\n      fn.apply(this, args);\n    }\n    return delay;\n  };\n}\nconst _toLeftRightCenter = (align) => align === 'start' ? 'left' : align === 'end' ? 'right' : 'center';\nconst _alignStartEnd = (align, start, end) => align === 'start' ? start : align === 'end' ? end : (start + end) / 2;\nconst _textX = (align, left, right, rtl) => {\n  const check = rtl ? 'left' : 'right';\n  return align === check ? right : align === 'center' ? (left + right) / 2 : left;\n};\n\nclass Animator {\n  constructor() {\n    this._request = null;\n    this._charts = new Map();\n    this._running = false;\n    this._lastDate = undefined;\n  }\n  _notify(chart, anims, date, type) {\n    const callbacks = anims.listeners[type];\n    const numSteps = anims.duration;\n    callbacks.forEach(fn => fn({\n      chart,\n      initial: anims.initial,\n      numSteps,\n      currentStep: Math.min(date - anims.start, numSteps)\n    }));\n  }\n  _refresh() {\n    if (this._request) {\n      return;\n    }\n    this._running = true;\n    this._request = requestAnimFrame.call(window, () => {\n      this._update();\n      this._request = null;\n      if (this._running) {\n        this._refresh();\n      }\n    });\n  }\n  _update(date = Date.now()) {\n    let remaining = 0;\n    this._charts.forEach((anims, chart) => {\n      if (!anims.running || !anims.items.length) {\n        return;\n      }\n      const items = anims.items;\n      let i = items.length - 1;\n      let draw = false;\n      let item;\n      for (; i >= 0; --i) {\n        item = items[i];\n        if (item._active) {\n          if (item._total > anims.duration) {\n            anims.duration = item._total;\n          }\n          item.tick(date);\n          draw = true;\n        } else {\n          items[i] = items[items.length - 1];\n          items.pop();\n        }\n      }\n      if (draw) {\n        chart.draw();\n        this._notify(chart, anims, date, 'progress');\n      }\n      if (!items.length) {\n        anims.running = false;\n        this._notify(chart, anims, date, 'complete');\n        anims.initial = false;\n      }\n      remaining += items.length;\n    });\n    this._lastDate = date;\n    if (remaining === 0) {\n      this._running = false;\n    }\n  }\n  _getAnims(chart) {\n    const charts = this._charts;\n    let anims = charts.get(chart);\n    if (!anims) {\n      anims = {\n        running: false,\n        initial: true,\n        items: [],\n        listeners: {\n          complete: [],\n          progress: []\n        }\n      };\n      charts.set(chart, anims);\n    }\n    return anims;\n  }\n  listen(chart, event, cb) {\n    this._getAnims(chart).listeners[event].push(cb);\n  }\n  add(chart, items) {\n    if (!items || !items.length) {\n      return;\n    }\n    this._getAnims(chart).items.push(...items);\n  }\n  has(chart) {\n    return this._getAnims(chart).items.length > 0;\n  }\n  start(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims) {\n      return;\n    }\n    anims.running = true;\n    anims.start = Date.now();\n    anims.duration = anims.items.reduce((acc, cur) => Math.max(acc, cur._duration), 0);\n    this._refresh();\n  }\n  running(chart) {\n    if (!this._running) {\n      return false;\n    }\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.running || !anims.items.length) {\n      return false;\n    }\n    return true;\n  }\n  stop(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.items.length) {\n      return;\n    }\n    const items = anims.items;\n    let i = items.length - 1;\n    for (; i >= 0; --i) {\n      items[i].cancel();\n    }\n    anims.items = [];\n    this._notify(chart, anims, Date.now(), 'complete');\n  }\n  remove(chart) {\n    return this._charts.delete(chart);\n  }\n}\nvar animator = new Animator();\n\n/*!\n * @kurkle/color v0.1.9\n * https://github.com/kurkle/color#readme\n * (c) 2020 Jukka Kurkela\n * Released under the MIT License\n */\nconst map$1 = {0: 0, 1: 1, 2: 2, 3: 3, 4: 4, 5: 5, 6: 6, 7: 7, 8: 8, 9: 9, A: 10, B: 11, C: 12, D: 13, E: 14, F: 15, a: 10, b: 11, c: 12, d: 13, e: 14, f: 15};\nconst hex = '0123456789ABCDEF';\nconst h1 = (b) => hex[b & 0xF];\nconst h2 = (b) => hex[(b & 0xF0) >> 4] + hex[b & 0xF];\nconst eq = (b) => (((b & 0xF0) >> 4) === (b & 0xF));\nfunction isShort(v) {\n\treturn eq(v.r) && eq(v.g) && eq(v.b) && eq(v.a);\n}\nfunction hexParse(str) {\n\tvar len = str.length;\n\tvar ret;\n\tif (str[0] === '#') {\n\t\tif (len === 4 || len === 5) {\n\t\t\tret = {\n\t\t\t\tr: 255 & map$1[str[1]] * 17,\n\t\t\t\tg: 255 & map$1[str[2]] * 17,\n\t\t\t\tb: 255 & map$1[str[3]] * 17,\n\t\t\t\ta: len === 5 ? map$1[str[4]] * 17 : 255\n\t\t\t};\n\t\t} else if (len === 7 || len === 9) {\n\t\t\tret = {\n\t\t\t\tr: map$1[str[1]] << 4 | map$1[str[2]],\n\t\t\t\tg: map$1[str[3]] << 4 | map$1[str[4]],\n\t\t\t\tb: map$1[str[5]] << 4 | map$1[str[6]],\n\t\t\t\ta: len === 9 ? (map$1[str[7]] << 4 | map$1[str[8]]) : 255\n\t\t\t};\n\t\t}\n\t}\n\treturn ret;\n}\nfunction hexString(v) {\n\tvar f = isShort(v) ? h1 : h2;\n\treturn v\n\t\t? '#' + f(v.r) + f(v.g) + f(v.b) + (v.a < 255 ? f(v.a) : '')\n\t\t: v;\n}\nfunction round(v) {\n\treturn v + 0.5 | 0;\n}\nconst lim = (v, l, h) => Math.max(Math.min(v, h), l);\nfunction p2b(v) {\n\treturn lim(round(v * 2.55), 0, 255);\n}\nfunction n2b(v) {\n\treturn lim(round(v * 255), 0, 255);\n}\nfunction b2n(v) {\n\treturn lim(round(v / 2.55) / 100, 0, 1);\n}\nfunction n2p(v) {\n\treturn lim(round(v * 100), 0, 100);\n}\nconst RGB_RE = /^rgba?\\(\\s*([-+.\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?(?:[\\s,/]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction rgbParse(str) {\n\tconst m = RGB_RE.exec(str);\n\tlet a = 255;\n\tlet r, g, b;\n\tif (!m) {\n\t\treturn;\n\t}\n\tif (m[7] !== r) {\n\t\tconst v = +m[7];\n\t\ta = 255 & (m[8] ? p2b(v) : v * 255);\n\t}\n\tr = +m[1];\n\tg = +m[3];\n\tb = +m[5];\n\tr = 255 & (m[2] ? p2b(r) : r);\n\tg = 255 & (m[4] ? p2b(g) : g);\n\tb = 255 & (m[6] ? p2b(b) : b);\n\treturn {\n\t\tr: r,\n\t\tg: g,\n\t\tb: b,\n\t\ta: a\n\t};\n}\nfunction rgbString(v) {\n\treturn v && (\n\t\tv.a < 255\n\t\t\t? `rgba(${v.r}, ${v.g}, ${v.b}, ${b2n(v.a)})`\n\t\t\t: `rgb(${v.r}, ${v.g}, ${v.b})`\n\t);\n}\nconst HUE_RE = /^(hsla?|hwb|hsv)\\(\\s*([-+.e\\d]+)(?:deg)?[\\s,]+([-+.e\\d]+)%[\\s,]+([-+.e\\d]+)%(?:[\\s,]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction hsl2rgbn(h, s, l) {\n\tconst a = s * Math.min(l, 1 - l);\n\tconst f = (n, k = (n + h / 30) % 12) => l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n\treturn [f(0), f(8), f(4)];\n}\nfunction hsv2rgbn(h, s, v) {\n\tconst f = (n, k = (n + h / 60) % 6) => v - v * s * Math.max(Math.min(k, 4 - k, 1), 0);\n\treturn [f(5), f(3), f(1)];\n}\nfunction hwb2rgbn(h, w, b) {\n\tconst rgb = hsl2rgbn(h, 1, 0.5);\n\tlet i;\n\tif (w + b > 1) {\n\t\ti = 1 / (w + b);\n\t\tw *= i;\n\t\tb *= i;\n\t}\n\tfor (i = 0; i < 3; i++) {\n\t\trgb[i] *= 1 - w - b;\n\t\trgb[i] += w;\n\t}\n\treturn rgb;\n}\nfunction rgb2hsl(v) {\n\tconst range = 255;\n\tconst r = v.r / range;\n\tconst g = v.g / range;\n\tconst b = v.b / range;\n\tconst max = Math.max(r, g, b);\n\tconst min = Math.min(r, g, b);\n\tconst l = (max + min) / 2;\n\tlet h, s, d;\n\tif (max !== min) {\n\t\td = max - min;\n\t\ts = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n\t\th = max === r\n\t\t\t? ((g - b) / d) + (g < b ? 6 : 0)\n\t\t\t: max === g\n\t\t\t\t? (b - r) / d + 2\n\t\t\t\t: (r - g) / d + 4;\n\t\th = h * 60 + 0.5;\n\t}\n\treturn [h | 0, s || 0, l];\n}\nfunction calln(f, a, b, c) {\n\treturn (\n\t\tArray.isArray(a)\n\t\t\t? f(a[0], a[1], a[2])\n\t\t\t: f(a, b, c)\n\t).map(n2b);\n}\nfunction hsl2rgb(h, s, l) {\n\treturn calln(hsl2rgbn, h, s, l);\n}\nfunction hwb2rgb(h, w, b) {\n\treturn calln(hwb2rgbn, h, w, b);\n}\nfunction hsv2rgb(h, s, v) {\n\treturn calln(hsv2rgbn, h, s, v);\n}\nfunction hue(h) {\n\treturn (h % 360 + 360) % 360;\n}\nfunction hueParse(str) {\n\tconst m = HUE_RE.exec(str);\n\tlet a = 255;\n\tlet v;\n\tif (!m) {\n\t\treturn;\n\t}\n\tif (m[5] !== v) {\n\t\ta = m[6] ? p2b(+m[5]) : n2b(+m[5]);\n\t}\n\tconst h = hue(+m[2]);\n\tconst p1 = +m[3] / 100;\n\tconst p2 = +m[4] / 100;\n\tif (m[1] === 'hwb') {\n\t\tv = hwb2rgb(h, p1, p2);\n\t} else if (m[1] === 'hsv') {\n\t\tv = hsv2rgb(h, p1, p2);\n\t} else {\n\t\tv = hsl2rgb(h, p1, p2);\n\t}\n\treturn {\n\t\tr: v[0],\n\t\tg: v[1],\n\t\tb: v[2],\n\t\ta: a\n\t};\n}\nfunction rotate(v, deg) {\n\tvar h = rgb2hsl(v);\n\th[0] = hue(h[0] + deg);\n\th = hsl2rgb(h);\n\tv.r = h[0];\n\tv.g = h[1];\n\tv.b = h[2];\n}\nfunction hslString(v) {\n\tif (!v) {\n\t\treturn;\n\t}\n\tconst a = rgb2hsl(v);\n\tconst h = a[0];\n\tconst s = n2p(a[1]);\n\tconst l = n2p(a[2]);\n\treturn v.a < 255\n\t\t? `hsla(${h}, ${s}%, ${l}%, ${b2n(v.a)})`\n\t\t: `hsl(${h}, ${s}%, ${l}%)`;\n}\nconst map$1$1 = {\n\tx: 'dark',\n\tZ: 'light',\n\tY: 're',\n\tX: 'blu',\n\tW: 'gr',\n\tV: 'medium',\n\tU: 'slate',\n\tA: 'ee',\n\tT: 'ol',\n\tS: 'or',\n\tB: 'ra',\n\tC: 'lateg',\n\tD: 'ights',\n\tR: 'in',\n\tQ: 'turquois',\n\tE: 'hi',\n\tP: 'ro',\n\tO: 'al',\n\tN: 'le',\n\tM: 'de',\n\tL: 'yello',\n\tF: 'en',\n\tK: 'ch',\n\tG: 'arks',\n\tH: 'ea',\n\tI: 'ightg',\n\tJ: 'wh'\n};\nconst names = {\n\tOiceXe: 'f0f8ff',\n\tantiquewEte: 'faebd7',\n\taqua: 'ffff',\n\taquamarRe: '7fffd4',\n\tazuY: 'f0ffff',\n\tbeige: 'f5f5dc',\n\tbisque: 'ffe4c4',\n\tblack: '0',\n\tblanKedOmond: 'ffebcd',\n\tXe: 'ff',\n\tXeviTet: '8a2be2',\n\tbPwn: 'a52a2a',\n\tburlywood: 'deb887',\n\tcaMtXe: '5f9ea0',\n\tKartYuse: '7fff00',\n\tKocTate: 'd2691e',\n\tcSO: 'ff7f50',\n\tcSnflowerXe: '6495ed',\n\tcSnsilk: 'fff8dc',\n\tcrimson: 'dc143c',\n\tcyan: 'ffff',\n\txXe: '8b',\n\txcyan: '8b8b',\n\txgTMnPd: 'b8860b',\n\txWay: 'a9a9a9',\n\txgYF: '6400',\n\txgYy: 'a9a9a9',\n\txkhaki: 'bdb76b',\n\txmagFta: '8b008b',\n\txTivegYF: '556b2f',\n\txSange: 'ff8c00',\n\txScEd: '9932cc',\n\txYd: '8b0000',\n\txsOmon: 'e9967a',\n\txsHgYF: '8fbc8f',\n\txUXe: '483d8b',\n\txUWay: '2f4f4f',\n\txUgYy: '2f4f4f',\n\txQe: 'ced1',\n\txviTet: '9400d3',\n\tdAppRk: 'ff1493',\n\tdApskyXe: 'bfff',\n\tdimWay: '696969',\n\tdimgYy: '696969',\n\tdodgerXe: '1e90ff',\n\tfiYbrick: 'b22222',\n\tflSOwEte: 'fffaf0',\n\tfoYstWAn: '228b22',\n\tfuKsia: 'ff00ff',\n\tgaRsbSo: 'dcdcdc',\n\tghostwEte: 'f8f8ff',\n\tgTd: 'ffd700',\n\tgTMnPd: 'daa520',\n\tWay: '808080',\n\tgYF: '8000',\n\tgYFLw: 'adff2f',\n\tgYy: '808080',\n\thoneyMw: 'f0fff0',\n\thotpRk: 'ff69b4',\n\tRdianYd: 'cd5c5c',\n\tRdigo: '4b0082',\n\tivSy: 'fffff0',\n\tkhaki: 'f0e68c',\n\tlavFMr: 'e6e6fa',\n\tlavFMrXsh: 'fff0f5',\n\tlawngYF: '7cfc00',\n\tNmoncEffon: 'fffacd',\n\tZXe: 'add8e6',\n\tZcSO: 'f08080',\n\tZcyan: 'e0ffff',\n\tZgTMnPdLw: 'fafad2',\n\tZWay: 'd3d3d3',\n\tZgYF: '90ee90',\n\tZgYy: 'd3d3d3',\n\tZpRk: 'ffb6c1',\n\tZsOmon: 'ffa07a',\n\tZsHgYF: '20b2aa',\n\tZskyXe: '87cefa',\n\tZUWay: '778899',\n\tZUgYy: '778899',\n\tZstAlXe: 'b0c4de',\n\tZLw: 'ffffe0',\n\tlime: 'ff00',\n\tlimegYF: '32cd32',\n\tlRF: 'faf0e6',\n\tmagFta: 'ff00ff',\n\tmaPon: '800000',\n\tVaquamarRe: '66cdaa',\n\tVXe: 'cd',\n\tVScEd: 'ba55d3',\n\tVpurpN: '9370db',\n\tVsHgYF: '3cb371',\n\tVUXe: '7b68ee',\n\tVsprRggYF: 'fa9a',\n\tVQe: '48d1cc',\n\tVviTetYd: 'c71585',\n\tmidnightXe: '191970',\n\tmRtcYam: 'f5fffa',\n\tmistyPse: 'ffe4e1',\n\tmoccasR: 'ffe4b5',\n\tnavajowEte: 'ffdead',\n\tnavy: '80',\n\tTdlace: 'fdf5e6',\n\tTive: '808000',\n\tTivedBb: '6b8e23',\n\tSange: 'ffa500',\n\tSangeYd: 'ff4500',\n\tScEd: 'da70d6',\n\tpOegTMnPd: 'eee8aa',\n\tpOegYF: '98fb98',\n\tpOeQe: 'afeeee',\n\tpOeviTetYd: 'db7093',\n\tpapayawEp: 'ffefd5',\n\tpHKpuff: 'ffdab9',\n\tperu: 'cd853f',\n\tpRk: 'ffc0cb',\n\tplum: 'dda0dd',\n\tpowMrXe: 'b0e0e6',\n\tpurpN: '800080',\n\tYbeccapurpN: '663399',\n\tYd: 'ff0000',\n\tPsybrown: 'bc8f8f',\n\tPyOXe: '4169e1',\n\tsaddNbPwn: '8b4513',\n\tsOmon: 'fa8072',\n\tsandybPwn: 'f4a460',\n\tsHgYF: '2e8b57',\n\tsHshell: 'fff5ee',\n\tsiFna: 'a0522d',\n\tsilver: 'c0c0c0',\n\tskyXe: '87ceeb',\n\tUXe: '6a5acd',\n\tUWay: '708090',\n\tUgYy: '708090',\n\tsnow: 'fffafa',\n\tsprRggYF: 'ff7f',\n\tstAlXe: '4682b4',\n\ttan: 'd2b48c',\n\tteO: '8080',\n\ttEstN: 'd8bfd8',\n\ttomato: 'ff6347',\n\tQe: '40e0d0',\n\tviTet: 'ee82ee',\n\tJHt: 'f5deb3',\n\twEte: 'ffffff',\n\twEtesmoke: 'f5f5f5',\n\tLw: 'ffff00',\n\tLwgYF: '9acd32'\n};\nfunction unpack() {\n\tconst unpacked = {};\n\tconst keys = Object.keys(names);\n\tconst tkeys = Object.keys(map$1$1);\n\tlet i, j, k, ok, nk;\n\tfor (i = 0; i < keys.length; i++) {\n\t\tok = nk = keys[i];\n\t\tfor (j = 0; j < tkeys.length; j++) {\n\t\t\tk = tkeys[j];\n\t\t\tnk = nk.replace(k, map$1$1[k]);\n\t\t}\n\t\tk = parseInt(names[ok], 16);\n\t\tunpacked[nk] = [k >> 16 & 0xFF, k >> 8 & 0xFF, k & 0xFF];\n\t}\n\treturn unpacked;\n}\nlet names$1;\nfunction nameParse(str) {\n\tif (!names$1) {\n\t\tnames$1 = unpack();\n\t\tnames$1.transparent = [0, 0, 0, 0];\n\t}\n\tconst a = names$1[str.toLowerCase()];\n\treturn a && {\n\t\tr: a[0],\n\t\tg: a[1],\n\t\tb: a[2],\n\t\ta: a.length === 4 ? a[3] : 255\n\t};\n}\nfunction modHSL(v, i, ratio) {\n\tif (v) {\n\t\tlet tmp = rgb2hsl(v);\n\t\ttmp[i] = Math.max(0, Math.min(tmp[i] + tmp[i] * ratio, i === 0 ? 360 : 1));\n\t\ttmp = hsl2rgb(tmp);\n\t\tv.r = tmp[0];\n\t\tv.g = tmp[1];\n\t\tv.b = tmp[2];\n\t}\n}\nfunction clone$1(v, proto) {\n\treturn v ? Object.assign(proto || {}, v) : v;\n}\nfunction fromObject(input) {\n\tvar v = {r: 0, g: 0, b: 0, a: 255};\n\tif (Array.isArray(input)) {\n\t\tif (input.length >= 3) {\n\t\t\tv = {r: input[0], g: input[1], b: input[2], a: 255};\n\t\t\tif (input.length > 3) {\n\t\t\t\tv.a = n2b(input[3]);\n\t\t\t}\n\t\t}\n\t} else {\n\t\tv = clone$1(input, {r: 0, g: 0, b: 0, a: 1});\n\t\tv.a = n2b(v.a);\n\t}\n\treturn v;\n}\nfunction functionParse(str) {\n\tif (str.charAt(0) === 'r') {\n\t\treturn rgbParse(str);\n\t}\n\treturn hueParse(str);\n}\nclass Color {\n\tconstructor(input) {\n\t\tif (input instanceof Color) {\n\t\t\treturn input;\n\t\t}\n\t\tconst type = typeof input;\n\t\tlet v;\n\t\tif (type === 'object') {\n\t\t\tv = fromObject(input);\n\t\t} else if (type === 'string') {\n\t\t\tv = hexParse(input) || nameParse(input) || functionParse(input);\n\t\t}\n\t\tthis._rgb = v;\n\t\tthis._valid = !!v;\n\t}\n\tget valid() {\n\t\treturn this._valid;\n\t}\n\tget rgb() {\n\t\tvar v = clone$1(this._rgb);\n\t\tif (v) {\n\t\t\tv.a = b2n(v.a);\n\t\t}\n\t\treturn v;\n\t}\n\tset rgb(obj) {\n\t\tthis._rgb = fromObject(obj);\n\t}\n\trgbString() {\n\t\treturn this._valid ? rgbString(this._rgb) : this._rgb;\n\t}\n\thexString() {\n\t\treturn this._valid ? hexString(this._rgb) : this._rgb;\n\t}\n\thslString() {\n\t\treturn this._valid ? hslString(this._rgb) : this._rgb;\n\t}\n\tmix(color, weight) {\n\t\tconst me = this;\n\t\tif (color) {\n\t\t\tconst c1 = me.rgb;\n\t\t\tconst c2 = color.rgb;\n\t\t\tlet w2;\n\t\t\tconst p = weight === w2 ? 0.5 : weight;\n\t\t\tconst w = 2 * p - 1;\n\t\t\tconst a = c1.a - c2.a;\n\t\t\tconst w1 = ((w * a === -1 ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n\t\t\tw2 = 1 - w1;\n\t\t\tc1.r = 0xFF & w1 * c1.r + w2 * c2.r + 0.5;\n\t\t\tc1.g = 0xFF & w1 * c1.g + w2 * c2.g + 0.5;\n\t\t\tc1.b = 0xFF & w1 * c1.b + w2 * c2.b + 0.5;\n\t\t\tc1.a = p * c1.a + (1 - p) * c2.a;\n\t\t\tme.rgb = c1;\n\t\t}\n\t\treturn me;\n\t}\n\tclone() {\n\t\treturn new Color(this.rgb);\n\t}\n\talpha(a) {\n\t\tthis._rgb.a = n2b(a);\n\t\treturn this;\n\t}\n\tclearer(ratio) {\n\t\tconst rgb = this._rgb;\n\t\trgb.a *= 1 - ratio;\n\t\treturn this;\n\t}\n\tgreyscale() {\n\t\tconst rgb = this._rgb;\n\t\tconst val = round(rgb.r * 0.3 + rgb.g * 0.59 + rgb.b * 0.11);\n\t\trgb.r = rgb.g = rgb.b = val;\n\t\treturn this;\n\t}\n\topaquer(ratio) {\n\t\tconst rgb = this._rgb;\n\t\trgb.a *= 1 + ratio;\n\t\treturn this;\n\t}\n\tnegate() {\n\t\tconst v = this._rgb;\n\t\tv.r = 255 - v.r;\n\t\tv.g = 255 - v.g;\n\t\tv.b = 255 - v.b;\n\t\treturn this;\n\t}\n\tlighten(ratio) {\n\t\tmodHSL(this._rgb, 2, ratio);\n\t\treturn this;\n\t}\n\tdarken(ratio) {\n\t\tmodHSL(this._rgb, 2, -ratio);\n\t\treturn this;\n\t}\n\tsaturate(ratio) {\n\t\tmodHSL(this._rgb, 1, ratio);\n\t\treturn this;\n\t}\n\tdesaturate(ratio) {\n\t\tmodHSL(this._rgb, 1, -ratio);\n\t\treturn this;\n\t}\n\trotate(deg) {\n\t\trotate(this._rgb, deg);\n\t\treturn this;\n\t}\n}\nfunction index_esm(input) {\n\treturn new Color(input);\n}\n\nconst isPatternOrGradient = (value) => value instanceof CanvasGradient || value instanceof CanvasPattern;\nfunction color(value) {\n  return isPatternOrGradient(value) ? value : index_esm(value);\n}\nfunction getHoverColor(value) {\n  return isPatternOrGradient(value)\n    ? value\n    : index_esm(value).saturate(0.5).darken(0.1).hexString();\n}\n\nfunction noop() {}\nconst uid = (function() {\n  let id = 0;\n  return function() {\n    return id++;\n  };\n}());\nfunction isNullOrUndef(value) {\n  return value === null || typeof value === 'undefined';\n}\nfunction isArray(value) {\n  if (Array.isArray && Array.isArray(value)) {\n    return true;\n  }\n  const type = Object.prototype.toString.call(value);\n  if (type.substr(0, 7) === '[object' && type.substr(-6) === 'Array]') {\n    return true;\n  }\n  return false;\n}\nfunction isObject(value) {\n  return value !== null && Object.prototype.toString.call(value) === '[object Object]';\n}\nconst isNumberFinite = (value) => (typeof value === 'number' || value instanceof Number) && isFinite(+value);\nfunction finiteOrDefault(value, defaultValue) {\n  return isNumberFinite(value) ? value : defaultValue;\n}\nfunction valueOrDefault(value, defaultValue) {\n  return typeof value === 'undefined' ? defaultValue : value;\n}\nconst toPercentage = (value, dimension) =>\n  typeof value === 'string' && value.endsWith('%') ?\n    parseFloat(value) / 100\n    : value / dimension;\nconst toDimension = (value, dimension) =>\n  typeof value === 'string' && value.endsWith('%') ?\n    parseFloat(value) / 100 * dimension\n    : +value;\nfunction callback(fn, args, thisArg) {\n  if (fn && typeof fn.call === 'function') {\n    return fn.apply(thisArg, args);\n  }\n}\nfunction each(loopable, fn, thisArg, reverse) {\n  let i, len, keys;\n  if (isArray(loopable)) {\n    len = loopable.length;\n    if (reverse) {\n      for (i = len - 1; i >= 0; i--) {\n        fn.call(thisArg, loopable[i], i);\n      }\n    } else {\n      for (i = 0; i < len; i++) {\n        fn.call(thisArg, loopable[i], i);\n      }\n    }\n  } else if (isObject(loopable)) {\n    keys = Object.keys(loopable);\n    len = keys.length;\n    for (i = 0; i < len; i++) {\n      fn.call(thisArg, loopable[keys[i]], keys[i]);\n    }\n  }\n}\nfunction _elementsEqual(a0, a1) {\n  let i, ilen, v0, v1;\n  if (!a0 || !a1 || a0.length !== a1.length) {\n    return false;\n  }\n  for (i = 0, ilen = a0.length; i < ilen; ++i) {\n    v0 = a0[i];\n    v1 = a1[i];\n    if (v0.datasetIndex !== v1.datasetIndex || v0.index !== v1.index) {\n      return false;\n    }\n  }\n  return true;\n}\nfunction clone(source) {\n  if (isArray(source)) {\n    return source.map(clone);\n  }\n  if (isObject(source)) {\n    const target = Object.create(null);\n    const keys = Object.keys(source);\n    const klen = keys.length;\n    let k = 0;\n    for (; k < klen; ++k) {\n      target[keys[k]] = clone(source[keys[k]]);\n    }\n    return target;\n  }\n  return source;\n}\nfunction isValidKey(key) {\n  return ['__proto__', 'prototype', 'constructor'].indexOf(key) === -1;\n}\nfunction _merger(key, target, source, options) {\n  if (!isValidKey(key)) {\n    return;\n  }\n  const tval = target[key];\n  const sval = source[key];\n  if (isObject(tval) && isObject(sval)) {\n    merge(tval, sval, options);\n  } else {\n    target[key] = clone(sval);\n  }\n}\nfunction merge(target, source, options) {\n  const sources = isArray(source) ? source : [source];\n  const ilen = sources.length;\n  if (!isObject(target)) {\n    return target;\n  }\n  options = options || {};\n  const merger = options.merger || _merger;\n  for (let i = 0; i < ilen; ++i) {\n    source = sources[i];\n    if (!isObject(source)) {\n      continue;\n    }\n    const keys = Object.keys(source);\n    for (let k = 0, klen = keys.length; k < klen; ++k) {\n      merger(keys[k], target, source, options);\n    }\n  }\n  return target;\n}\nfunction mergeIf(target, source) {\n  return merge(target, source, {merger: _mergerIf});\n}\nfunction _mergerIf(key, target, source) {\n  if (!isValidKey(key)) {\n    return;\n  }\n  const tval = target[key];\n  const sval = source[key];\n  if (isObject(tval) && isObject(sval)) {\n    mergeIf(tval, sval);\n  } else if (!Object.prototype.hasOwnProperty.call(target, key)) {\n    target[key] = clone(sval);\n  }\n}\nfunction _deprecated(scope, value, previous, current) {\n  if (value !== undefined) {\n    console.warn(scope + ': \"' + previous +\n\t\t\t'\" is deprecated. Please use \"' + current + '\" instead');\n  }\n}\nconst emptyString = '';\nconst dot = '.';\nfunction indexOfDotOrLength(key, start) {\n  const idx = key.indexOf(dot, start);\n  return idx === -1 ? key.length : idx;\n}\nfunction resolveObjectKey(obj, key) {\n  if (key === emptyString) {\n    return obj;\n  }\n  let pos = 0;\n  let idx = indexOfDotOrLength(key, pos);\n  while (obj && idx > pos) {\n    obj = obj[key.substr(pos, idx - pos)];\n    pos = idx + 1;\n    idx = indexOfDotOrLength(key, pos);\n  }\n  return obj;\n}\nfunction _capitalize(str) {\n  return str.charAt(0).toUpperCase() + str.slice(1);\n}\nconst defined = (value) => typeof value !== 'undefined';\nconst isFunction = (value) => typeof value === 'function';\nconst setsEqual = (a, b) => {\n  if (a.size !== b.size) {\n    return false;\n  }\n  for (const item of a) {\n    if (!b.has(item)) {\n      return false;\n    }\n  }\n  return true;\n};\nfunction _isClickEvent(e) {\n  return e.type === 'mouseup' || e.type === 'click' || e.type === 'contextmenu';\n}\n\nconst overrides = Object.create(null);\nconst descriptors = Object.create(null);\nfunction getScope$1(node, key) {\n  if (!key) {\n    return node;\n  }\n  const keys = key.split('.');\n  for (let i = 0, n = keys.length; i < n; ++i) {\n    const k = keys[i];\n    node = node[k] || (node[k] = Object.create(null));\n  }\n  return node;\n}\nfunction set(root, scope, values) {\n  if (typeof scope === 'string') {\n    return merge(getScope$1(root, scope), values);\n  }\n  return merge(getScope$1(root, ''), scope);\n}\nclass Defaults {\n  constructor(_descriptors) {\n    this.animation = undefined;\n    this.backgroundColor = 'rgba(0,0,0,0.1)';\n    this.borderColor = 'rgba(0,0,0,0.1)';\n    this.color = '#666';\n    this.datasets = {};\n    this.devicePixelRatio = (context) => context.chart.platform.getDevicePixelRatio();\n    this.elements = {};\n    this.events = [\n      'mousemove',\n      'mouseout',\n      'click',\n      'touchstart',\n      'touchmove'\n    ];\n    this.font = {\n      family: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n      size: 12,\n      style: 'normal',\n      lineHeight: 1.2,\n      weight: null\n    };\n    this.hover = {};\n    this.hoverBackgroundColor = (ctx, options) => getHoverColor(options.backgroundColor);\n    this.hoverBorderColor = (ctx, options) => getHoverColor(options.borderColor);\n    this.hoverColor = (ctx, options) => getHoverColor(options.color);\n    this.indexAxis = 'x';\n    this.interaction = {\n      mode: 'nearest',\n      intersect: true\n    };\n    this.maintainAspectRatio = true;\n    this.onHover = null;\n    this.onClick = null;\n    this.parsing = true;\n    this.plugins = {};\n    this.responsive = true;\n    this.scale = undefined;\n    this.scales = {};\n    this.showLine = true;\n    this.drawActiveElementsOnTop = true;\n    this.describe(_descriptors);\n  }\n  set(scope, values) {\n    return set(this, scope, values);\n  }\n  get(scope) {\n    return getScope$1(this, scope);\n  }\n  describe(scope, values) {\n    return set(descriptors, scope, values);\n  }\n  override(scope, values) {\n    return set(overrides, scope, values);\n  }\n  route(scope, name, targetScope, targetName) {\n    const scopeObject = getScope$1(this, scope);\n    const targetScopeObject = getScope$1(this, targetScope);\n    const privateName = '_' + name;\n    Object.defineProperties(scopeObject, {\n      [privateName]: {\n        value: scopeObject[name],\n        writable: true\n      },\n      [name]: {\n        enumerable: true,\n        get() {\n          const local = this[privateName];\n          const target = targetScopeObject[targetName];\n          if (isObject(local)) {\n            return Object.assign({}, target, local);\n          }\n          return valueOrDefault(local, target);\n        },\n        set(value) {\n          this[privateName] = value;\n        }\n      }\n    });\n  }\n}\nvar defaults = new Defaults({\n  _scriptable: (name) => !name.startsWith('on'),\n  _indexable: (name) => name !== 'events',\n  hover: {\n    _fallback: 'interaction'\n  },\n  interaction: {\n    _scriptable: false,\n    _indexable: false,\n  }\n});\n\nconst PI = Math.PI;\nconst TAU = 2 * PI;\nconst PITAU = TAU + PI;\nconst INFINITY = Number.POSITIVE_INFINITY;\nconst RAD_PER_DEG = PI / 180;\nconst HALF_PI = PI / 2;\nconst QUARTER_PI = PI / 4;\nconst TWO_THIRDS_PI = PI * 2 / 3;\nconst log10 = Math.log10;\nconst sign = Math.sign;\nfunction niceNum(range) {\n  const roundedRange = Math.round(range);\n  range = almostEquals(range, roundedRange, range / 1000) ? roundedRange : range;\n  const niceRange = Math.pow(10, Math.floor(log10(range)));\n  const fraction = range / niceRange;\n  const niceFraction = fraction <= 1 ? 1 : fraction <= 2 ? 2 : fraction <= 5 ? 5 : 10;\n  return niceFraction * niceRange;\n}\nfunction _factorize(value) {\n  const result = [];\n  const sqrt = Math.sqrt(value);\n  let i;\n  for (i = 1; i < sqrt; i++) {\n    if (value % i === 0) {\n      result.push(i);\n      result.push(value / i);\n    }\n  }\n  if (sqrt === (sqrt | 0)) {\n    result.push(sqrt);\n  }\n  result.sort((a, b) => a - b).pop();\n  return result;\n}\nfunction isNumber(n) {\n  return !isNaN(parseFloat(n)) && isFinite(n);\n}\nfunction almostEquals(x, y, epsilon) {\n  return Math.abs(x - y) < epsilon;\n}\nfunction almostWhole(x, epsilon) {\n  const rounded = Math.round(x);\n  return ((rounded - epsilon) <= x) && ((rounded + epsilon) >= x);\n}\nfunction _setMinAndMaxByKey(array, target, property) {\n  let i, ilen, value;\n  for (i = 0, ilen = array.length; i < ilen; i++) {\n    value = array[i][property];\n    if (!isNaN(value)) {\n      target.min = Math.min(target.min, value);\n      target.max = Math.max(target.max, value);\n    }\n  }\n}\nfunction toRadians(degrees) {\n  return degrees * (PI / 180);\n}\nfunction toDegrees(radians) {\n  return radians * (180 / PI);\n}\nfunction _decimalPlaces(x) {\n  if (!isNumberFinite(x)) {\n    return;\n  }\n  let e = 1;\n  let p = 0;\n  while (Math.round(x * e) / e !== x) {\n    e *= 10;\n    p++;\n  }\n  return p;\n}\nfunction getAngleFromPoint(centrePoint, anglePoint) {\n  const distanceFromXCenter = anglePoint.x - centrePoint.x;\n  const distanceFromYCenter = anglePoint.y - centrePoint.y;\n  const radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n  let angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n  if (angle < (-0.5 * PI)) {\n    angle += TAU;\n  }\n  return {\n    angle,\n    distance: radialDistanceFromCenter\n  };\n}\nfunction distanceBetweenPoints(pt1, pt2) {\n  return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n}\nfunction _angleDiff(a, b) {\n  return (a - b + PITAU) % TAU - PI;\n}\nfunction _normalizeAngle(a) {\n  return (a % TAU + TAU) % TAU;\n}\nfunction _angleBetween(angle, start, end, sameAngleIsFullCircle) {\n  const a = _normalizeAngle(angle);\n  const s = _normalizeAngle(start);\n  const e = _normalizeAngle(end);\n  const angleToStart = _normalizeAngle(s - a);\n  const angleToEnd = _normalizeAngle(e - a);\n  const startToAngle = _normalizeAngle(a - s);\n  const endToAngle = _normalizeAngle(a - e);\n  return a === s || a === e || (sameAngleIsFullCircle && s === e)\n    || (angleToStart > angleToEnd && startToAngle < endToAngle);\n}\nfunction _limitValue(value, min, max) {\n  return Math.max(min, Math.min(max, value));\n}\nfunction _int16Range(value) {\n  return _limitValue(value, -32768, 32767);\n}\nfunction _isBetween(value, start, end, epsilon = 1e-6) {\n  return value >= Math.min(start, end) - epsilon && value <= Math.max(start, end) + epsilon;\n}\n\nfunction toFontString(font) {\n  if (!font || isNullOrUndef(font.size) || isNullOrUndef(font.family)) {\n    return null;\n  }\n  return (font.style ? font.style + ' ' : '')\n\t\t+ (font.weight ? font.weight + ' ' : '')\n\t\t+ font.size + 'px '\n\t\t+ font.family;\n}\nfunction _measureText(ctx, data, gc, longest, string) {\n  let textWidth = data[string];\n  if (!textWidth) {\n    textWidth = data[string] = ctx.measureText(string).width;\n    gc.push(string);\n  }\n  if (textWidth > longest) {\n    longest = textWidth;\n  }\n  return longest;\n}\nfunction _longestText(ctx, font, arrayOfThings, cache) {\n  cache = cache || {};\n  let data = cache.data = cache.data || {};\n  let gc = cache.garbageCollect = cache.garbageCollect || [];\n  if (cache.font !== font) {\n    data = cache.data = {};\n    gc = cache.garbageCollect = [];\n    cache.font = font;\n  }\n  ctx.save();\n  ctx.font = font;\n  let longest = 0;\n  const ilen = arrayOfThings.length;\n  let i, j, jlen, thing, nestedThing;\n  for (i = 0; i < ilen; i++) {\n    thing = arrayOfThings[i];\n    if (thing !== undefined && thing !== null && isArray(thing) !== true) {\n      longest = _measureText(ctx, data, gc, longest, thing);\n    } else if (isArray(thing)) {\n      for (j = 0, jlen = thing.length; j < jlen; j++) {\n        nestedThing = thing[j];\n        if (nestedThing !== undefined && nestedThing !== null && !isArray(nestedThing)) {\n          longest = _measureText(ctx, data, gc, longest, nestedThing);\n        }\n      }\n    }\n  }\n  ctx.restore();\n  const gcLen = gc.length / 2;\n  if (gcLen > arrayOfThings.length) {\n    for (i = 0; i < gcLen; i++) {\n      delete data[gc[i]];\n    }\n    gc.splice(0, gcLen);\n  }\n  return longest;\n}\nfunction _alignPixel(chart, pixel, width) {\n  const devicePixelRatio = chart.currentDevicePixelRatio;\n  const halfWidth = width !== 0 ? Math.max(width / 2, 0.5) : 0;\n  return Math.round((pixel - halfWidth) * devicePixelRatio) / devicePixelRatio + halfWidth;\n}\nfunction clearCanvas(canvas, ctx) {\n  ctx = ctx || canvas.getContext('2d');\n  ctx.save();\n  ctx.resetTransform();\n  ctx.clearRect(0, 0, canvas.width, canvas.height);\n  ctx.restore();\n}\nfunction drawPoint(ctx, options, x, y) {\n  let type, xOffset, yOffset, size, cornerRadius;\n  const style = options.pointStyle;\n  const rotation = options.rotation;\n  const radius = options.radius;\n  let rad = (rotation || 0) * RAD_PER_DEG;\n  if (style && typeof style === 'object') {\n    type = style.toString();\n    if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n      ctx.save();\n      ctx.translate(x, y);\n      ctx.rotate(rad);\n      ctx.drawImage(style, -style.width / 2, -style.height / 2, style.width, style.height);\n      ctx.restore();\n      return;\n    }\n  }\n  if (isNaN(radius) || radius <= 0) {\n    return;\n  }\n  ctx.beginPath();\n  switch (style) {\n  default:\n    ctx.arc(x, y, radius, 0, TAU);\n    ctx.closePath();\n    break;\n  case 'triangle':\n    ctx.moveTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n    rad += TWO_THIRDS_PI;\n    ctx.lineTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n    rad += TWO_THIRDS_PI;\n    ctx.lineTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n    ctx.closePath();\n    break;\n  case 'rectRounded':\n    cornerRadius = radius * 0.516;\n    size = radius - cornerRadius;\n    xOffset = Math.cos(rad + QUARTER_PI) * size;\n    yOffset = Math.sin(rad + QUARTER_PI) * size;\n    ctx.arc(x - xOffset, y - yOffset, cornerRadius, rad - PI, rad - HALF_PI);\n    ctx.arc(x + yOffset, y - xOffset, cornerRadius, rad - HALF_PI, rad);\n    ctx.arc(x + xOffset, y + yOffset, cornerRadius, rad, rad + HALF_PI);\n    ctx.arc(x - yOffset, y + xOffset, cornerRadius, rad + HALF_PI, rad + PI);\n    ctx.closePath();\n    break;\n  case 'rect':\n    if (!rotation) {\n      size = Math.SQRT1_2 * radius;\n      ctx.rect(x - size, y - size, 2 * size, 2 * size);\n      break;\n    }\n    rad += QUARTER_PI;\n  case 'rectRot':\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + yOffset, y - xOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    ctx.lineTo(x - yOffset, y + xOffset);\n    ctx.closePath();\n    break;\n  case 'crossRot':\n    rad += QUARTER_PI;\n  case 'cross':\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    ctx.moveTo(x + yOffset, y - xOffset);\n    ctx.lineTo(x - yOffset, y + xOffset);\n    break;\n  case 'star':\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    ctx.moveTo(x + yOffset, y - xOffset);\n    ctx.lineTo(x - yOffset, y + xOffset);\n    rad += QUARTER_PI;\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    ctx.moveTo(x + yOffset, y - xOffset);\n    ctx.lineTo(x - yOffset, y + xOffset);\n    break;\n  case 'line':\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    break;\n  case 'dash':\n    ctx.moveTo(x, y);\n    ctx.lineTo(x + Math.cos(rad) * radius, y + Math.sin(rad) * radius);\n    break;\n  }\n  ctx.fill();\n  if (options.borderWidth > 0) {\n    ctx.stroke();\n  }\n}\nfunction _isPointInArea(point, area, margin) {\n  margin = margin || 0.5;\n  return !area || (point && point.x > area.left - margin && point.x < area.right + margin &&\n\t\tpoint.y > area.top - margin && point.y < area.bottom + margin);\n}\nfunction clipArea(ctx, area) {\n  ctx.save();\n  ctx.beginPath();\n  ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n  ctx.clip();\n}\nfunction unclipArea(ctx) {\n  ctx.restore();\n}\nfunction _steppedLineTo(ctx, previous, target, flip, mode) {\n  if (!previous) {\n    return ctx.lineTo(target.x, target.y);\n  }\n  if (mode === 'middle') {\n    const midpoint = (previous.x + target.x) / 2.0;\n    ctx.lineTo(midpoint, previous.y);\n    ctx.lineTo(midpoint, target.y);\n  } else if (mode === 'after' !== !!flip) {\n    ctx.lineTo(previous.x, target.y);\n  } else {\n    ctx.lineTo(target.x, previous.y);\n  }\n  ctx.lineTo(target.x, target.y);\n}\nfunction _bezierCurveTo(ctx, previous, target, flip) {\n  if (!previous) {\n    return ctx.lineTo(target.x, target.y);\n  }\n  ctx.bezierCurveTo(\n    flip ? previous.cp1x : previous.cp2x,\n    flip ? previous.cp1y : previous.cp2y,\n    flip ? target.cp2x : target.cp1x,\n    flip ? target.cp2y : target.cp1y,\n    target.x,\n    target.y);\n}\nfunction renderText(ctx, text, x, y, font, opts = {}) {\n  const lines = isArray(text) ? text : [text];\n  const stroke = opts.strokeWidth > 0 && opts.strokeColor !== '';\n  let i, line;\n  ctx.save();\n  ctx.font = font.string;\n  setRenderOpts(ctx, opts);\n  for (i = 0; i < lines.length; ++i) {\n    line = lines[i];\n    if (stroke) {\n      if (opts.strokeColor) {\n        ctx.strokeStyle = opts.strokeColor;\n      }\n      if (!isNullOrUndef(opts.strokeWidth)) {\n        ctx.lineWidth = opts.strokeWidth;\n      }\n      ctx.strokeText(line, x, y, opts.maxWidth);\n    }\n    ctx.fillText(line, x, y, opts.maxWidth);\n    decorateText(ctx, x, y, line, opts);\n    y += font.lineHeight;\n  }\n  ctx.restore();\n}\nfunction setRenderOpts(ctx, opts) {\n  if (opts.translation) {\n    ctx.translate(opts.translation[0], opts.translation[1]);\n  }\n  if (!isNullOrUndef(opts.rotation)) {\n    ctx.rotate(opts.rotation);\n  }\n  if (opts.color) {\n    ctx.fillStyle = opts.color;\n  }\n  if (opts.textAlign) {\n    ctx.textAlign = opts.textAlign;\n  }\n  if (opts.textBaseline) {\n    ctx.textBaseline = opts.textBaseline;\n  }\n}\nfunction decorateText(ctx, x, y, line, opts) {\n  if (opts.strikethrough || opts.underline) {\n    const metrics = ctx.measureText(line);\n    const left = x - metrics.actualBoundingBoxLeft;\n    const right = x + metrics.actualBoundingBoxRight;\n    const top = y - metrics.actualBoundingBoxAscent;\n    const bottom = y + metrics.actualBoundingBoxDescent;\n    const yDecoration = opts.strikethrough ? (top + bottom) / 2 : bottom;\n    ctx.strokeStyle = ctx.fillStyle;\n    ctx.beginPath();\n    ctx.lineWidth = opts.decorationWidth || 2;\n    ctx.moveTo(left, yDecoration);\n    ctx.lineTo(right, yDecoration);\n    ctx.stroke();\n  }\n}\nfunction addRoundedRectPath(ctx, rect) {\n  const {x, y, w, h, radius} = rect;\n  ctx.arc(x + radius.topLeft, y + radius.topLeft, radius.topLeft, -HALF_PI, PI, true);\n  ctx.lineTo(x, y + h - radius.bottomLeft);\n  ctx.arc(x + radius.bottomLeft, y + h - radius.bottomLeft, radius.bottomLeft, PI, HALF_PI, true);\n  ctx.lineTo(x + w - radius.bottomRight, y + h);\n  ctx.arc(x + w - radius.bottomRight, y + h - radius.bottomRight, radius.bottomRight, HALF_PI, 0, true);\n  ctx.lineTo(x + w, y + radius.topRight);\n  ctx.arc(x + w - radius.topRight, y + radius.topRight, radius.topRight, 0, -HALF_PI, true);\n  ctx.lineTo(x + radius.topLeft, y);\n}\n\nfunction _lookup(table, value, cmp) {\n  cmp = cmp || ((index) => table[index] < value);\n  let hi = table.length - 1;\n  let lo = 0;\n  let mid;\n  while (hi - lo > 1) {\n    mid = (lo + hi) >> 1;\n    if (cmp(mid)) {\n      lo = mid;\n    } else {\n      hi = mid;\n    }\n  }\n  return {lo, hi};\n}\nconst _lookupByKey = (table, key, value) =>\n  _lookup(table, value, index => table[index][key] < value);\nconst _rlookupByKey = (table, key, value) =>\n  _lookup(table, value, index => table[index][key] >= value);\nfunction _filterBetween(values, min, max) {\n  let start = 0;\n  let end = values.length;\n  while (start < end && values[start] < min) {\n    start++;\n  }\n  while (end > start && values[end - 1] > max) {\n    end--;\n  }\n  return start > 0 || end < values.length\n    ? values.slice(start, end)\n    : values;\n}\nconst arrayEvents = ['push', 'pop', 'shift', 'splice', 'unshift'];\nfunction listenArrayEvents(array, listener) {\n  if (array._chartjs) {\n    array._chartjs.listeners.push(listener);\n    return;\n  }\n  Object.defineProperty(array, '_chartjs', {\n    configurable: true,\n    enumerable: false,\n    value: {\n      listeners: [listener]\n    }\n  });\n  arrayEvents.forEach((key) => {\n    const method = '_onData' + _capitalize(key);\n    const base = array[key];\n    Object.defineProperty(array, key, {\n      configurable: true,\n      enumerable: false,\n      value(...args) {\n        const res = base.apply(this, args);\n        array._chartjs.listeners.forEach((object) => {\n          if (typeof object[method] === 'function') {\n            object[method](...args);\n          }\n        });\n        return res;\n      }\n    });\n  });\n}\nfunction unlistenArrayEvents(array, listener) {\n  const stub = array._chartjs;\n  if (!stub) {\n    return;\n  }\n  const listeners = stub.listeners;\n  const index = listeners.indexOf(listener);\n  if (index !== -1) {\n    listeners.splice(index, 1);\n  }\n  if (listeners.length > 0) {\n    return;\n  }\n  arrayEvents.forEach((key) => {\n    delete array[key];\n  });\n  delete array._chartjs;\n}\nfunction _arrayUnique(items) {\n  const set = new Set();\n  let i, ilen;\n  for (i = 0, ilen = items.length; i < ilen; ++i) {\n    set.add(items[i]);\n  }\n  if (set.size === ilen) {\n    return items;\n  }\n  return Array.from(set);\n}\n\nfunction _isDomSupported() {\n  return typeof window !== 'undefined' && typeof document !== 'undefined';\n}\nfunction _getParentNode(domNode) {\n  let parent = domNode.parentNode;\n  if (parent && parent.toString() === '[object ShadowRoot]') {\n    parent = parent.host;\n  }\n  return parent;\n}\nfunction parseMaxStyle(styleValue, node, parentProperty) {\n  let valueInPixels;\n  if (typeof styleValue === 'string') {\n    valueInPixels = parseInt(styleValue, 10);\n    if (styleValue.indexOf('%') !== -1) {\n      valueInPixels = valueInPixels / 100 * node.parentNode[parentProperty];\n    }\n  } else {\n    valueInPixels = styleValue;\n  }\n  return valueInPixels;\n}\nconst getComputedStyle = (element) => window.getComputedStyle(element, null);\nfunction getStyle(el, property) {\n  return getComputedStyle(el).getPropertyValue(property);\n}\nconst positions = ['top', 'right', 'bottom', 'left'];\nfunction getPositionedStyle(styles, style, suffix) {\n  const result = {};\n  suffix = suffix ? '-' + suffix : '';\n  for (let i = 0; i < 4; i++) {\n    const pos = positions[i];\n    result[pos] = parseFloat(styles[style + '-' + pos + suffix]) || 0;\n  }\n  result.width = result.left + result.right;\n  result.height = result.top + result.bottom;\n  return result;\n}\nconst useOffsetPos = (x, y, target) => (x > 0 || y > 0) && (!target || !target.shadowRoot);\nfunction getCanvasPosition(evt, canvas) {\n  const e = evt.native || evt;\n  const touches = e.touches;\n  const source = touches && touches.length ? touches[0] : e;\n  const {offsetX, offsetY} = source;\n  let box = false;\n  let x, y;\n  if (useOffsetPos(offsetX, offsetY, e.target)) {\n    x = offsetX;\n    y = offsetY;\n  } else {\n    const rect = canvas.getBoundingClientRect();\n    x = source.clientX - rect.left;\n    y = source.clientY - rect.top;\n    box = true;\n  }\n  return {x, y, box};\n}\nfunction getRelativePosition$1(evt, chart) {\n  const {canvas, currentDevicePixelRatio} = chart;\n  const style = getComputedStyle(canvas);\n  const borderBox = style.boxSizing === 'border-box';\n  const paddings = getPositionedStyle(style, 'padding');\n  const borders = getPositionedStyle(style, 'border', 'width');\n  const {x, y, box} = getCanvasPosition(evt, canvas);\n  const xOffset = paddings.left + (box && borders.left);\n  const yOffset = paddings.top + (box && borders.top);\n  let {width, height} = chart;\n  if (borderBox) {\n    width -= paddings.width + borders.width;\n    height -= paddings.height + borders.height;\n  }\n  return {\n    x: Math.round((x - xOffset) / width * canvas.width / currentDevicePixelRatio),\n    y: Math.round((y - yOffset) / height * canvas.height / currentDevicePixelRatio)\n  };\n}\nfunction getContainerSize(canvas, width, height) {\n  let maxWidth, maxHeight;\n  if (width === undefined || height === undefined) {\n    const container = _getParentNode(canvas);\n    if (!container) {\n      width = canvas.clientWidth;\n      height = canvas.clientHeight;\n    } else {\n      const rect = container.getBoundingClientRect();\n      const containerStyle = getComputedStyle(container);\n      const containerBorder = getPositionedStyle(containerStyle, 'border', 'width');\n      const containerPadding = getPositionedStyle(containerStyle, 'padding');\n      width = rect.width - containerPadding.width - containerBorder.width;\n      height = rect.height - containerPadding.height - containerBorder.height;\n      maxWidth = parseMaxStyle(containerStyle.maxWidth, container, 'clientWidth');\n      maxHeight = parseMaxStyle(containerStyle.maxHeight, container, 'clientHeight');\n    }\n  }\n  return {\n    width,\n    height,\n    maxWidth: maxWidth || INFINITY,\n    maxHeight: maxHeight || INFINITY\n  };\n}\nconst round1 = v => Math.round(v * 10) / 10;\nfunction getMaximumSize(canvas, bbWidth, bbHeight, aspectRatio) {\n  const style = getComputedStyle(canvas);\n  const margins = getPositionedStyle(style, 'margin');\n  const maxWidth = parseMaxStyle(style.maxWidth, canvas, 'clientWidth') || INFINITY;\n  const maxHeight = parseMaxStyle(style.maxHeight, canvas, 'clientHeight') || INFINITY;\n  const containerSize = getContainerSize(canvas, bbWidth, bbHeight);\n  let {width, height} = containerSize;\n  if (style.boxSizing === 'content-box') {\n    const borders = getPositionedStyle(style, 'border', 'width');\n    const paddings = getPositionedStyle(style, 'padding');\n    width -= paddings.width + borders.width;\n    height -= paddings.height + borders.height;\n  }\n  width = Math.max(0, width - margins.width);\n  height = Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height - margins.height);\n  width = round1(Math.min(width, maxWidth, containerSize.maxWidth));\n  height = round1(Math.min(height, maxHeight, containerSize.maxHeight));\n  if (width && !height) {\n    height = round1(width / 2);\n  }\n  return {\n    width,\n    height\n  };\n}\nfunction retinaScale(chart, forceRatio, forceStyle) {\n  const pixelRatio = forceRatio || 1;\n  const deviceHeight = Math.floor(chart.height * pixelRatio);\n  const deviceWidth = Math.floor(chart.width * pixelRatio);\n  chart.height = deviceHeight / pixelRatio;\n  chart.width = deviceWidth / pixelRatio;\n  const canvas = chart.canvas;\n  if (canvas.style && (forceStyle || (!canvas.style.height && !canvas.style.width))) {\n    canvas.style.height = `${chart.height}px`;\n    canvas.style.width = `${chart.width}px`;\n  }\n  if (chart.currentDevicePixelRatio !== pixelRatio\n      || canvas.height !== deviceHeight\n      || canvas.width !== deviceWidth) {\n    chart.currentDevicePixelRatio = pixelRatio;\n    canvas.height = deviceHeight;\n    canvas.width = deviceWidth;\n    chart.ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n    return true;\n  }\n  return false;\n}\nconst supportsEventListenerOptions = (function() {\n  let passiveSupported = false;\n  try {\n    const options = {\n      get passive() {\n        passiveSupported = true;\n        return false;\n      }\n    };\n    window.addEventListener('test', null, options);\n    window.removeEventListener('test', null, options);\n  } catch (e) {\n  }\n  return passiveSupported;\n}());\nfunction readUsedSize(element, property) {\n  const value = getStyle(element, property);\n  const matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n  return matches ? +matches[1] : undefined;\n}\n\nfunction getRelativePosition(e, chart) {\n  if ('native' in e) {\n    return {\n      x: e.x,\n      y: e.y\n    };\n  }\n  return getRelativePosition$1(e, chart);\n}\nfunction evaluateAllVisibleItems(chart, handler) {\n  const metasets = chart.getSortedVisibleDatasetMetas();\n  let index, data, element;\n  for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\n    ({index, data} = metasets[i]);\n    for (let j = 0, jlen = data.length; j < jlen; ++j) {\n      element = data[j];\n      if (!element.skip) {\n        handler(element, index, j);\n      }\n    }\n  }\n}\nfunction binarySearch(metaset, axis, value, intersect) {\n  const {controller, data, _sorted} = metaset;\n  const iScale = controller._cachedMeta.iScale;\n  if (iScale && axis === iScale.axis && axis !== 'r' && _sorted && data.length) {\n    const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n    if (!intersect) {\n      return lookupMethod(data, axis, value);\n    } else if (controller._sharedOptions) {\n      const el = data[0];\n      const range = typeof el.getRange === 'function' && el.getRange(axis);\n      if (range) {\n        const start = lookupMethod(data, axis, value - range);\n        const end = lookupMethod(data, axis, value + range);\n        return {lo: start.lo, hi: end.hi};\n      }\n    }\n  }\n  return {lo: 0, hi: data.length - 1};\n}\nfunction optimizedEvaluateItems(chart, axis, position, handler, intersect) {\n  const metasets = chart.getSortedVisibleDatasetMetas();\n  const value = position[axis];\n  for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\n    const {index, data} = metasets[i];\n    const {lo, hi} = binarySearch(metasets[i], axis, value, intersect);\n    for (let j = lo; j <= hi; ++j) {\n      const element = data[j];\n      if (!element.skip) {\n        handler(element, index, j);\n      }\n    }\n  }\n}\nfunction getDistanceMetricForAxis(axis) {\n  const useX = axis.indexOf('x') !== -1;\n  const useY = axis.indexOf('y') !== -1;\n  return function(pt1, pt2) {\n    const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n    const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n    return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n  };\n}\nfunction getIntersectItems(chart, position, axis, useFinalPosition) {\n  const items = [];\n  if (!_isPointInArea(position, chart.chartArea, chart._minPadding)) {\n    return items;\n  }\n  const evaluationFunc = function(element, datasetIndex, index) {\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n    }\n  };\n  optimizedEvaluateItems(chart, axis, position, evaluationFunc, true);\n  return items;\n}\nfunction getNearestRadialItems(chart, position, axis, useFinalPosition) {\n  let items = [];\n  function evaluationFunc(element, datasetIndex, index) {\n    const {startAngle, endAngle} = element.getProps(['startAngle', 'endAngle'], useFinalPosition);\n    const {angle} = getAngleFromPoint(element, {x: position.x, y: position.y});\n    if (_angleBetween(angle, startAngle, endAngle)) {\n      items.push({element, datasetIndex, index});\n    }\n  }\n  optimizedEvaluateItems(chart, axis, position, evaluationFunc);\n  return items;\n}\nfunction getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition) {\n  let items = [];\n  const distanceMetric = getDistanceMetricForAxis(axis);\n  let minDistance = Number.POSITIVE_INFINITY;\n  function evaluationFunc(element, datasetIndex, index) {\n    const inRange = element.inRange(position.x, position.y, useFinalPosition);\n    if (intersect && !inRange) {\n      return;\n    }\n    const center = element.getCenterPoint(useFinalPosition);\n    const pointInArea = _isPointInArea(center, chart.chartArea, chart._minPadding);\n    if (!pointInArea && !inRange) {\n      return;\n    }\n    const distance = distanceMetric(position, center);\n    if (distance < minDistance) {\n      items = [{element, datasetIndex, index}];\n      minDistance = distance;\n    } else if (distance === minDistance) {\n      items.push({element, datasetIndex, index});\n    }\n  }\n  optimizedEvaluateItems(chart, axis, position, evaluationFunc);\n  return items;\n}\nfunction getNearestItems(chart, position, axis, intersect, useFinalPosition) {\n  if (!_isPointInArea(position, chart.chartArea, chart._minPadding)) {\n    return [];\n  }\n  return axis === 'r' && !intersect\n    ? getNearestRadialItems(chart, position, axis, useFinalPosition)\n    : getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition);\n}\nfunction getAxisItems(chart, e, options, useFinalPosition) {\n  const position = getRelativePosition(e, chart);\n  const items = [];\n  const axis = options.axis;\n  const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n  let intersectsItem = false;\n  evaluateAllVisibleItems(chart, (element, datasetIndex, index) => {\n    if (element[rangeMethod](position[axis], useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n    }\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      intersectsItem = true;\n    }\n  });\n  if (options.intersect && !intersectsItem) {\n    return [];\n  }\n  return items;\n}\nvar Interaction = {\n  modes: {\n    index(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'x';\n      const items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition)\n        : getNearestItems(chart, position, axis, false, useFinalPosition);\n      const elements = [];\n      if (!items.length) {\n        return [];\n      }\n      chart.getSortedVisibleDatasetMetas().forEach((meta) => {\n        const index = items[0].index;\n        const element = meta.data[index];\n        if (element && !element.skip) {\n          elements.push({element, datasetIndex: meta.index, index});\n        }\n      });\n      return elements;\n    },\n    dataset(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      let items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition) :\n        getNearestItems(chart, position, axis, false, useFinalPosition);\n      if (items.length > 0) {\n        const datasetIndex = items[0].datasetIndex;\n        const data = chart.getDatasetMeta(datasetIndex).data;\n        items = [];\n        for (let i = 0; i < data.length; ++i) {\n          items.push({element: data[i], datasetIndex, index: i});\n        }\n      }\n      return items;\n    },\n    point(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      return getIntersectItems(chart, position, axis, useFinalPosition);\n    },\n    nearest(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      return getNearestItems(chart, position, axis, options.intersect, useFinalPosition);\n    },\n    x(chart, e, options, useFinalPosition) {\n      return getAxisItems(chart, e, {axis: 'x', intersect: options.intersect}, useFinalPosition);\n    },\n    y(chart, e, options, useFinalPosition) {\n      return getAxisItems(chart, e, {axis: 'y', intersect: options.intersect}, useFinalPosition);\n    }\n  }\n};\n\nconst LINE_HEIGHT = new RegExp(/^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/);\nconst FONT_STYLE = new RegExp(/^(normal|italic|initial|inherit|unset|(oblique( -?[0-9]?[0-9]deg)?))$/);\nfunction toLineHeight(value, size) {\n  const matches = ('' + value).match(LINE_HEIGHT);\n  if (!matches || matches[1] === 'normal') {\n    return size * 1.2;\n  }\n  value = +matches[2];\n  switch (matches[3]) {\n  case 'px':\n    return value;\n  case '%':\n    value /= 100;\n    break;\n  }\n  return size * value;\n}\nconst numberOrZero = v => +v || 0;\nfunction _readValueToProps(value, props) {\n  const ret = {};\n  const objProps = isObject(props);\n  const keys = objProps ? Object.keys(props) : props;\n  const read = isObject(value)\n    ? objProps\n      ? prop => valueOrDefault(value[prop], value[props[prop]])\n      : prop => value[prop]\n    : () => value;\n  for (const prop of keys) {\n    ret[prop] = numberOrZero(read(prop));\n  }\n  return ret;\n}\nfunction toTRBL(value) {\n  return _readValueToProps(value, {top: 'y', right: 'x', bottom: 'y', left: 'x'});\n}\nfunction toTRBLCorners(value) {\n  return _readValueToProps(value, ['topLeft', 'topRight', 'bottomLeft', 'bottomRight']);\n}\nfunction toPadding(value) {\n  const obj = toTRBL(value);\n  obj.width = obj.left + obj.right;\n  obj.height = obj.top + obj.bottom;\n  return obj;\n}\nfunction toFont(options, fallback) {\n  options = options || {};\n  fallback = fallback || defaults.font;\n  let size = valueOrDefault(options.size, fallback.size);\n  if (typeof size === 'string') {\n    size = parseInt(size, 10);\n  }\n  let style = valueOrDefault(options.style, fallback.style);\n  if (style && !('' + style).match(FONT_STYLE)) {\n    console.warn('Invalid font style specified: \"' + style + '\"');\n    style = '';\n  }\n  const font = {\n    family: valueOrDefault(options.family, fallback.family),\n    lineHeight: toLineHeight(valueOrDefault(options.lineHeight, fallback.lineHeight), size),\n    size,\n    style,\n    weight: valueOrDefault(options.weight, fallback.weight),\n    string: ''\n  };\n  font.string = toFontString(font);\n  return font;\n}\nfunction resolve(inputs, context, index, info) {\n  let cacheable = true;\n  let i, ilen, value;\n  for (i = 0, ilen = inputs.length; i < ilen; ++i) {\n    value = inputs[i];\n    if (value === undefined) {\n      continue;\n    }\n    if (context !== undefined && typeof value === 'function') {\n      value = value(context);\n      cacheable = false;\n    }\n    if (index !== undefined && isArray(value)) {\n      value = value[index % value.length];\n      cacheable = false;\n    }\n    if (value !== undefined) {\n      if (info && !cacheable) {\n        info.cacheable = false;\n      }\n      return value;\n    }\n  }\n}\nfunction _addGrace(minmax, grace, beginAtZero) {\n  const {min, max} = minmax;\n  const change = toDimension(grace, (max - min) / 2);\n  const keepZero = (value, add) => beginAtZero && value === 0 ? 0 : value + add;\n  return {\n    min: keepZero(min, -Math.abs(change)),\n    max: keepZero(max, change)\n  };\n}\nfunction createContext(parentContext, context) {\n  return Object.assign(Object.create(parentContext), context);\n}\n\nconst STATIC_POSITIONS = ['left', 'top', 'right', 'bottom'];\nfunction filterByPosition(array, position) {\n  return array.filter(v => v.pos === position);\n}\nfunction filterDynamicPositionByAxis(array, axis) {\n  return array.filter(v => STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\nfunction sortByWeight(array, reverse) {\n  return array.sort((a, b) => {\n    const v0 = reverse ? b : a;\n    const v1 = reverse ? a : b;\n    return v0.weight === v1.weight ?\n      v0.index - v1.index :\n      v0.weight - v1.weight;\n  });\n}\nfunction wrapBoxes(boxes) {\n  const layoutBoxes = [];\n  let i, ilen, box, pos, stack, stackWeight;\n  for (i = 0, ilen = (boxes || []).length; i < ilen; ++i) {\n    box = boxes[i];\n    ({position: pos, options: {stack, stackWeight = 1}} = box);\n    layoutBoxes.push({\n      index: i,\n      box,\n      pos,\n      horizontal: box.isHorizontal(),\n      weight: box.weight,\n      stack: stack && (pos + stack),\n      stackWeight\n    });\n  }\n  return layoutBoxes;\n}\nfunction buildStacks(layouts) {\n  const stacks = {};\n  for (const wrap of layouts) {\n    const {stack, pos, stackWeight} = wrap;\n    if (!stack || !STATIC_POSITIONS.includes(pos)) {\n      continue;\n    }\n    const _stack = stacks[stack] || (stacks[stack] = {count: 0, placed: 0, weight: 0, size: 0});\n    _stack.count++;\n    _stack.weight += stackWeight;\n  }\n  return stacks;\n}\nfunction setLayoutDims(layouts, params) {\n  const stacks = buildStacks(layouts);\n  const {vBoxMaxWidth, hBoxMaxHeight} = params;\n  let i, ilen, layout;\n  for (i = 0, ilen = layouts.length; i < ilen; ++i) {\n    layout = layouts[i];\n    const {fullSize} = layout.box;\n    const stack = stacks[layout.stack];\n    const factor = stack && layout.stackWeight / stack.weight;\n    if (layout.horizontal) {\n      layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\n      layout.height = hBoxMaxHeight;\n    } else {\n      layout.width = vBoxMaxWidth;\n      layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\n    }\n  }\n  return stacks;\n}\nfunction buildLayoutBoxes(boxes) {\n  const layoutBoxes = wrapBoxes(boxes);\n  const fullSize = sortByWeight(layoutBoxes.filter(wrap => wrap.box.fullSize), true);\n  const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n  const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n  const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n  const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n  const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n  const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n  return {\n    fullSize,\n    leftAndTop: left.concat(top),\n    rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n    chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n    vertical: left.concat(right).concat(centerVertical),\n    horizontal: top.concat(bottom).concat(centerHorizontal)\n  };\n}\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n  return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\nfunction updateMaxPadding(maxPadding, boxPadding) {\n  maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n  maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n  maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n  maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\nfunction updateDims(chartArea, params, layout, stacks) {\n  const {pos, box} = layout;\n  const maxPadding = chartArea.maxPadding;\n  if (!isObject(pos)) {\n    if (layout.size) {\n      chartArea[pos] -= layout.size;\n    }\n    const stack = stacks[layout.stack] || {size: 0, count: 1};\n    stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\n    layout.size = stack.size / stack.count;\n    chartArea[pos] += layout.size;\n  }\n  if (box.getPadding) {\n    updateMaxPadding(maxPadding, box.getPadding());\n  }\n  const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n  const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n  const widthChanged = newWidth !== chartArea.w;\n  const heightChanged = newHeight !== chartArea.h;\n  chartArea.w = newWidth;\n  chartArea.h = newHeight;\n  return layout.horizontal\n    ? {same: widthChanged, other: heightChanged}\n    : {same: heightChanged, other: widthChanged};\n}\nfunction handleMaxPadding(chartArea) {\n  const maxPadding = chartArea.maxPadding;\n  function updatePos(pos) {\n    const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n    chartArea[pos] += change;\n    return change;\n  }\n  chartArea.y += updatePos('top');\n  chartArea.x += updatePos('left');\n  updatePos('right');\n  updatePos('bottom');\n}\nfunction getMargins(horizontal, chartArea) {\n  const maxPadding = chartArea.maxPadding;\n  function marginForPositions(positions) {\n    const margin = {left: 0, top: 0, right: 0, bottom: 0};\n    positions.forEach((pos) => {\n      margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n    });\n    return margin;\n  }\n  return horizontal\n    ? marginForPositions(['left', 'right'])\n    : marginForPositions(['top', 'bottom']);\n}\nfunction fitBoxes(boxes, chartArea, params, stacks) {\n  const refitBoxes = [];\n  let i, ilen, layout, box, refit, changed;\n  for (i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i) {\n    layout = boxes[i];\n    box = layout.box;\n    box.update(\n      layout.width || chartArea.w,\n      layout.height || chartArea.h,\n      getMargins(layout.horizontal, chartArea)\n    );\n    const {same, other} = updateDims(chartArea, params, layout, stacks);\n    refit |= same && refitBoxes.length;\n    changed = changed || other;\n    if (!box.fullSize) {\n      refitBoxes.push(layout);\n    }\n  }\n  return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\n}\nfunction setBoxDims(box, left, top, width, height) {\n  box.top = top;\n  box.left = left;\n  box.right = left + width;\n  box.bottom = top + height;\n  box.width = width;\n  box.height = height;\n}\nfunction placeBoxes(boxes, chartArea, params, stacks) {\n  const userPadding = params.padding;\n  let {x, y} = chartArea;\n  for (const layout of boxes) {\n    const box = layout.box;\n    const stack = stacks[layout.stack] || {count: 1, placed: 0, weight: 1};\n    const weight = (layout.stackWeight / stack.weight) || 1;\n    if (layout.horizontal) {\n      const width = chartArea.w * weight;\n      const height = stack.size || box.height;\n      if (defined(stack.start)) {\n        y = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\n      } else {\n        setBoxDims(box, chartArea.left + stack.placed, y, width, height);\n      }\n      stack.start = y;\n      stack.placed += width;\n      y = box.bottom;\n    } else {\n      const height = chartArea.h * weight;\n      const width = stack.size || box.width;\n      if (defined(stack.start)) {\n        x = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, x, userPadding.top, width, params.outerHeight - userPadding.bottom - userPadding.top);\n      } else {\n        setBoxDims(box, x, chartArea.top + stack.placed, width, height);\n      }\n      stack.start = x;\n      stack.placed += height;\n      x = box.right;\n    }\n  }\n  chartArea.x = x;\n  chartArea.y = y;\n}\ndefaults.set('layout', {\n  autoPadding: true,\n  padding: {\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0\n  }\n});\nvar layouts = {\n  addBox(chart, item) {\n    if (!chart.boxes) {\n      chart.boxes = [];\n    }\n    item.fullSize = item.fullSize || false;\n    item.position = item.position || 'top';\n    item.weight = item.weight || 0;\n    item._layers = item._layers || function() {\n      return [{\n        z: 0,\n        draw(chartArea) {\n          item.draw(chartArea);\n        }\n      }];\n    };\n    chart.boxes.push(item);\n  },\n  removeBox(chart, layoutItem) {\n    const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n    if (index !== -1) {\n      chart.boxes.splice(index, 1);\n    }\n  },\n  configure(chart, item, options) {\n    item.fullSize = options.fullSize;\n    item.position = options.position;\n    item.weight = options.weight;\n  },\n  update(chart, width, height, minPadding) {\n    if (!chart) {\n      return;\n    }\n    const padding = toPadding(chart.options.layout.padding);\n    const availableWidth = Math.max(width - padding.width, 0);\n    const availableHeight = Math.max(height - padding.height, 0);\n    const boxes = buildLayoutBoxes(chart.boxes);\n    const verticalBoxes = boxes.vertical;\n    const horizontalBoxes = boxes.horizontal;\n    each(chart.boxes, box => {\n      if (typeof box.beforeLayout === 'function') {\n        box.beforeLayout();\n      }\n    });\n    const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap) =>\n      wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n    const params = Object.freeze({\n      outerWidth: width,\n      outerHeight: height,\n      padding,\n      availableWidth,\n      availableHeight,\n      vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n      hBoxMaxHeight: availableHeight / 2\n    });\n    const maxPadding = Object.assign({}, padding);\n    updateMaxPadding(maxPadding, toPadding(minPadding));\n    const chartArea = Object.assign({\n      maxPadding,\n      w: availableWidth,\n      h: availableHeight,\n      x: padding.left,\n      y: padding.top\n    }, padding);\n    const stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n    fitBoxes(boxes.fullSize, chartArea, params, stacks);\n    fitBoxes(verticalBoxes, chartArea, params, stacks);\n    if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\n      fitBoxes(verticalBoxes, chartArea, params, stacks);\n    }\n    handleMaxPadding(chartArea);\n    placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\n    chartArea.x += chartArea.w;\n    chartArea.y += chartArea.h;\n    placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\n    chart.chartArea = {\n      left: chartArea.left,\n      top: chartArea.top,\n      right: chartArea.left + chartArea.w,\n      bottom: chartArea.top + chartArea.h,\n      height: chartArea.h,\n      width: chartArea.w,\n    };\n    each(boxes.chartArea, (layout) => {\n      const box = layout.box;\n      Object.assign(box, chart.chartArea);\n      box.update(chartArea.w, chartArea.h, {left: 0, top: 0, right: 0, bottom: 0});\n    });\n  }\n};\n\nfunction _createResolver(scopes, prefixes = [''], rootScopes = scopes, fallback, getTarget = () => scopes[0]) {\n  if (!defined(fallback)) {\n    fallback = _resolve('_fallback', scopes);\n  }\n  const cache = {\n    [Symbol.toStringTag]: 'Object',\n    _cacheable: true,\n    _scopes: scopes,\n    _rootScopes: rootScopes,\n    _fallback: fallback,\n    _getTarget: getTarget,\n    override: (scope) => _createResolver([scope, ...scopes], prefixes, rootScopes, fallback),\n  };\n  return new Proxy(cache, {\n    deleteProperty(target, prop) {\n      delete target[prop];\n      delete target._keys;\n      delete scopes[0][prop];\n      return true;\n    },\n    get(target, prop) {\n      return _cached(target, prop,\n        () => _resolveWithPrefixes(prop, prefixes, scopes, target));\n    },\n    getOwnPropertyDescriptor(target, prop) {\n      return Reflect.getOwnPropertyDescriptor(target._scopes[0], prop);\n    },\n    getPrototypeOf() {\n      return Reflect.getPrototypeOf(scopes[0]);\n    },\n    has(target, prop) {\n      return getKeysFromAllScopes(target).includes(prop);\n    },\n    ownKeys(target) {\n      return getKeysFromAllScopes(target);\n    },\n    set(target, prop, value) {\n      const storage = target._storage || (target._storage = getTarget());\n      target[prop] = storage[prop] = value;\n      delete target._keys;\n      return true;\n    }\n  });\n}\nfunction _attachContext(proxy, context, subProxy, descriptorDefaults) {\n  const cache = {\n    _cacheable: false,\n    _proxy: proxy,\n    _context: context,\n    _subProxy: subProxy,\n    _stack: new Set(),\n    _descriptors: _descriptors(proxy, descriptorDefaults),\n    setContext: (ctx) => _attachContext(proxy, ctx, subProxy, descriptorDefaults),\n    override: (scope) => _attachContext(proxy.override(scope), context, subProxy, descriptorDefaults)\n  };\n  return new Proxy(cache, {\n    deleteProperty(target, prop) {\n      delete target[prop];\n      delete proxy[prop];\n      return true;\n    },\n    get(target, prop, receiver) {\n      return _cached(target, prop,\n        () => _resolveWithContext(target, prop, receiver));\n    },\n    getOwnPropertyDescriptor(target, prop) {\n      return target._descriptors.allKeys\n        ? Reflect.has(proxy, prop) ? {enumerable: true, configurable: true} : undefined\n        : Reflect.getOwnPropertyDescriptor(proxy, prop);\n    },\n    getPrototypeOf() {\n      return Reflect.getPrototypeOf(proxy);\n    },\n    has(target, prop) {\n      return Reflect.has(proxy, prop);\n    },\n    ownKeys() {\n      return Reflect.ownKeys(proxy);\n    },\n    set(target, prop, value) {\n      proxy[prop] = value;\n      delete target[prop];\n      return true;\n    }\n  });\n}\nfunction _descriptors(proxy, defaults = {scriptable: true, indexable: true}) {\n  const {_scriptable = defaults.scriptable, _indexable = defaults.indexable, _allKeys = defaults.allKeys} = proxy;\n  return {\n    allKeys: _allKeys,\n    scriptable: _scriptable,\n    indexable: _indexable,\n    isScriptable: isFunction(_scriptable) ? _scriptable : () => _scriptable,\n    isIndexable: isFunction(_indexable) ? _indexable : () => _indexable\n  };\n}\nconst readKey = (prefix, name) => prefix ? prefix + _capitalize(name) : name;\nconst needsSubResolver = (prop, value) => isObject(value) && prop !== 'adapters' &&\n  (Object.getPrototypeOf(value) === null || value.constructor === Object);\nfunction _cached(target, prop, resolve) {\n  if (Object.prototype.hasOwnProperty.call(target, prop)) {\n    return target[prop];\n  }\n  const value = resolve();\n  target[prop] = value;\n  return value;\n}\nfunction _resolveWithContext(target, prop, receiver) {\n  const {_proxy, _context, _subProxy, _descriptors: descriptors} = target;\n  let value = _proxy[prop];\n  if (isFunction(value) && descriptors.isScriptable(prop)) {\n    value = _resolveScriptable(prop, value, target, receiver);\n  }\n  if (isArray(value) && value.length) {\n    value = _resolveArray(prop, value, target, descriptors.isIndexable);\n  }\n  if (needsSubResolver(prop, value)) {\n    value = _attachContext(value, _context, _subProxy && _subProxy[prop], descriptors);\n  }\n  return value;\n}\nfunction _resolveScriptable(prop, value, target, receiver) {\n  const {_proxy, _context, _subProxy, _stack} = target;\n  if (_stack.has(prop)) {\n    throw new Error('Recursion detected: ' + Array.from(_stack).join('->') + '->' + prop);\n  }\n  _stack.add(prop);\n  value = value(_context, _subProxy || receiver);\n  _stack.delete(prop);\n  if (needsSubResolver(prop, value)) {\n    value = createSubResolver(_proxy._scopes, _proxy, prop, value);\n  }\n  return value;\n}\nfunction _resolveArray(prop, value, target, isIndexable) {\n  const {_proxy, _context, _subProxy, _descriptors: descriptors} = target;\n  if (defined(_context.index) && isIndexable(prop)) {\n    value = value[_context.index % value.length];\n  } else if (isObject(value[0])) {\n    const arr = value;\n    const scopes = _proxy._scopes.filter(s => s !== arr);\n    value = [];\n    for (const item of arr) {\n      const resolver = createSubResolver(scopes, _proxy, prop, item);\n      value.push(_attachContext(resolver, _context, _subProxy && _subProxy[prop], descriptors));\n    }\n  }\n  return value;\n}\nfunction resolveFallback(fallback, prop, value) {\n  return isFunction(fallback) ? fallback(prop, value) : fallback;\n}\nconst getScope = (key, parent) => key === true ? parent\n  : typeof key === 'string' ? resolveObjectKey(parent, key) : undefined;\nfunction addScopes(set, parentScopes, key, parentFallback, value) {\n  for (const parent of parentScopes) {\n    const scope = getScope(key, parent);\n    if (scope) {\n      set.add(scope);\n      const fallback = resolveFallback(scope._fallback, key, value);\n      if (defined(fallback) && fallback !== key && fallback !== parentFallback) {\n        return fallback;\n      }\n    } else if (scope === false && defined(parentFallback) && key !== parentFallback) {\n      return null;\n    }\n  }\n  return false;\n}\nfunction createSubResolver(parentScopes, resolver, prop, value) {\n  const rootScopes = resolver._rootScopes;\n  const fallback = resolveFallback(resolver._fallback, prop, value);\n  const allScopes = [...parentScopes, ...rootScopes];\n  const set = new Set();\n  set.add(value);\n  let key = addScopesFromKey(set, allScopes, prop, fallback || prop, value);\n  if (key === null) {\n    return false;\n  }\n  if (defined(fallback) && fallback !== prop) {\n    key = addScopesFromKey(set, allScopes, fallback, key, value);\n    if (key === null) {\n      return false;\n    }\n  }\n  return _createResolver(Array.from(set), [''], rootScopes, fallback,\n    () => subGetTarget(resolver, prop, value));\n}\nfunction addScopesFromKey(set, allScopes, key, fallback, item) {\n  while (key) {\n    key = addScopes(set, allScopes, key, fallback, item);\n  }\n  return key;\n}\nfunction subGetTarget(resolver, prop, value) {\n  const parent = resolver._getTarget();\n  if (!(prop in parent)) {\n    parent[prop] = {};\n  }\n  const target = parent[prop];\n  if (isArray(target) && isObject(value)) {\n    return value;\n  }\n  return target;\n}\nfunction _resolveWithPrefixes(prop, prefixes, scopes, proxy) {\n  let value;\n  for (const prefix of prefixes) {\n    value = _resolve(readKey(prefix, prop), scopes);\n    if (defined(value)) {\n      return needsSubResolver(prop, value)\n        ? createSubResolver(scopes, proxy, prop, value)\n        : value;\n    }\n  }\n}\nfunction _resolve(key, scopes) {\n  for (const scope of scopes) {\n    if (!scope) {\n      continue;\n    }\n    const value = scope[key];\n    if (defined(value)) {\n      return value;\n    }\n  }\n}\nfunction getKeysFromAllScopes(target) {\n  let keys = target._keys;\n  if (!keys) {\n    keys = target._keys = resolveKeysFromAllScopes(target._scopes);\n  }\n  return keys;\n}\nfunction resolveKeysFromAllScopes(scopes) {\n  const set = new Set();\n  for (const scope of scopes) {\n    for (const key of Object.keys(scope).filter(k => !k.startsWith('_'))) {\n      set.add(key);\n    }\n  }\n  return Array.from(set);\n}\n\nconst EPSILON = Number.EPSILON || 1e-14;\nconst getPoint = (points, i) => i < points.length && !points[i].skip && points[i];\nconst getValueAxis = (indexAxis) => indexAxis === 'x' ? 'y' : 'x';\nfunction splineCurve(firstPoint, middlePoint, afterPoint, t) {\n  const previous = firstPoint.skip ? middlePoint : firstPoint;\n  const current = middlePoint;\n  const next = afterPoint.skip ? middlePoint : afterPoint;\n  const d01 = distanceBetweenPoints(current, previous);\n  const d12 = distanceBetweenPoints(next, current);\n  let s01 = d01 / (d01 + d12);\n  let s12 = d12 / (d01 + d12);\n  s01 = isNaN(s01) ? 0 : s01;\n  s12 = isNaN(s12) ? 0 : s12;\n  const fa = t * s01;\n  const fb = t * s12;\n  return {\n    previous: {\n      x: current.x - fa * (next.x - previous.x),\n      y: current.y - fa * (next.y - previous.y)\n    },\n    next: {\n      x: current.x + fb * (next.x - previous.x),\n      y: current.y + fb * (next.y - previous.y)\n    }\n  };\n}\nfunction monotoneAdjust(points, deltaK, mK) {\n  const pointsLen = points.length;\n  let alphaK, betaK, tauK, squaredMagnitude, pointCurrent;\n  let pointAfter = getPoint(points, 0);\n  for (let i = 0; i < pointsLen - 1; ++i) {\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent || !pointAfter) {\n      continue;\n    }\n    if (almostEquals(deltaK[i], 0, EPSILON)) {\n      mK[i] = mK[i + 1] = 0;\n      continue;\n    }\n    alphaK = mK[i] / deltaK[i];\n    betaK = mK[i + 1] / deltaK[i];\n    squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n    if (squaredMagnitude <= 9) {\n      continue;\n    }\n    tauK = 3 / Math.sqrt(squaredMagnitude);\n    mK[i] = alphaK * tauK * deltaK[i];\n    mK[i + 1] = betaK * tauK * deltaK[i];\n  }\n}\nfunction monotoneCompute(points, mK, indexAxis = 'x') {\n  const valueAxis = getValueAxis(indexAxis);\n  const pointsLen = points.length;\n  let delta, pointBefore, pointCurrent;\n  let pointAfter = getPoint(points, 0);\n  for (let i = 0; i < pointsLen; ++i) {\n    pointBefore = pointCurrent;\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent) {\n      continue;\n    }\n    const iPixel = pointCurrent[indexAxis];\n    const vPixel = pointCurrent[valueAxis];\n    if (pointBefore) {\n      delta = (iPixel - pointBefore[indexAxis]) / 3;\n      pointCurrent[`cp1${indexAxis}`] = iPixel - delta;\n      pointCurrent[`cp1${valueAxis}`] = vPixel - delta * mK[i];\n    }\n    if (pointAfter) {\n      delta = (pointAfter[indexAxis] - iPixel) / 3;\n      pointCurrent[`cp2${indexAxis}`] = iPixel + delta;\n      pointCurrent[`cp2${valueAxis}`] = vPixel + delta * mK[i];\n    }\n  }\n}\nfunction splineCurveMonotone(points, indexAxis = 'x') {\n  const valueAxis = getValueAxis(indexAxis);\n  const pointsLen = points.length;\n  const deltaK = Array(pointsLen).fill(0);\n  const mK = Array(pointsLen);\n  let i, pointBefore, pointCurrent;\n  let pointAfter = getPoint(points, 0);\n  for (i = 0; i < pointsLen; ++i) {\n    pointBefore = pointCurrent;\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent) {\n      continue;\n    }\n    if (pointAfter) {\n      const slopeDelta = pointAfter[indexAxis] - pointCurrent[indexAxis];\n      deltaK[i] = slopeDelta !== 0 ? (pointAfter[valueAxis] - pointCurrent[valueAxis]) / slopeDelta : 0;\n    }\n    mK[i] = !pointBefore ? deltaK[i]\n      : !pointAfter ? deltaK[i - 1]\n      : (sign(deltaK[i - 1]) !== sign(deltaK[i])) ? 0\n      : (deltaK[i - 1] + deltaK[i]) / 2;\n  }\n  monotoneAdjust(points, deltaK, mK);\n  monotoneCompute(points, mK, indexAxis);\n}\nfunction capControlPoint(pt, min, max) {\n  return Math.max(Math.min(pt, max), min);\n}\nfunction capBezierPoints(points, area) {\n  let i, ilen, point, inArea, inAreaPrev;\n  let inAreaNext = _isPointInArea(points[0], area);\n  for (i = 0, ilen = points.length; i < ilen; ++i) {\n    inAreaPrev = inArea;\n    inArea = inAreaNext;\n    inAreaNext = i < ilen - 1 && _isPointInArea(points[i + 1], area);\n    if (!inArea) {\n      continue;\n    }\n    point = points[i];\n    if (inAreaPrev) {\n      point.cp1x = capControlPoint(point.cp1x, area.left, area.right);\n      point.cp1y = capControlPoint(point.cp1y, area.top, area.bottom);\n    }\n    if (inAreaNext) {\n      point.cp2x = capControlPoint(point.cp2x, area.left, area.right);\n      point.cp2y = capControlPoint(point.cp2y, area.top, area.bottom);\n    }\n  }\n}\nfunction _updateBezierControlPoints(points, options, area, loop, indexAxis) {\n  let i, ilen, point, controlPoints;\n  if (options.spanGaps) {\n    points = points.filter((pt) => !pt.skip);\n  }\n  if (options.cubicInterpolationMode === 'monotone') {\n    splineCurveMonotone(points, indexAxis);\n  } else {\n    let prev = loop ? points[points.length - 1] : points[0];\n    for (i = 0, ilen = points.length; i < ilen; ++i) {\n      point = points[i];\n      controlPoints = splineCurve(\n        prev,\n        point,\n        points[Math.min(i + 1, ilen - (loop ? 0 : 1)) % ilen],\n        options.tension\n      );\n      point.cp1x = controlPoints.previous.x;\n      point.cp1y = controlPoints.previous.y;\n      point.cp2x = controlPoints.next.x;\n      point.cp2y = controlPoints.next.y;\n      prev = point;\n    }\n  }\n  if (options.capBezierPoints) {\n    capBezierPoints(points, area);\n  }\n}\n\nconst atEdge = (t) => t === 0 || t === 1;\nconst elasticIn = (t, s, p) => -(Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * TAU / p));\nconst elasticOut = (t, s, p) => Math.pow(2, -10 * t) * Math.sin((t - s) * TAU / p) + 1;\nconst effects = {\n  linear: t => t,\n  easeInQuad: t => t * t,\n  easeOutQuad: t => -t * (t - 2),\n  easeInOutQuad: t => ((t /= 0.5) < 1)\n    ? 0.5 * t * t\n    : -0.5 * ((--t) * (t - 2) - 1),\n  easeInCubic: t => t * t * t,\n  easeOutCubic: t => (t -= 1) * t * t + 1,\n  easeInOutCubic: t => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t\n    : 0.5 * ((t -= 2) * t * t + 2),\n  easeInQuart: t => t * t * t * t,\n  easeOutQuart: t => -((t -= 1) * t * t * t - 1),\n  easeInOutQuart: t => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t * t\n    : -0.5 * ((t -= 2) * t * t * t - 2),\n  easeInQuint: t => t * t * t * t * t,\n  easeOutQuint: t => (t -= 1) * t * t * t * t + 1,\n  easeInOutQuint: t => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t * t * t\n    : 0.5 * ((t -= 2) * t * t * t * t + 2),\n  easeInSine: t => -Math.cos(t * HALF_PI) + 1,\n  easeOutSine: t => Math.sin(t * HALF_PI),\n  easeInOutSine: t => -0.5 * (Math.cos(PI * t) - 1),\n  easeInExpo: t => (t === 0) ? 0 : Math.pow(2, 10 * (t - 1)),\n  easeOutExpo: t => (t === 1) ? 1 : -Math.pow(2, -10 * t) + 1,\n  easeInOutExpo: t => atEdge(t) ? t : t < 0.5\n    ? 0.5 * Math.pow(2, 10 * (t * 2 - 1))\n    : 0.5 * (-Math.pow(2, -10 * (t * 2 - 1)) + 2),\n  easeInCirc: t => (t >= 1) ? t : -(Math.sqrt(1 - t * t) - 1),\n  easeOutCirc: t => Math.sqrt(1 - (t -= 1) * t),\n  easeInOutCirc: t => ((t /= 0.5) < 1)\n    ? -0.5 * (Math.sqrt(1 - t * t) - 1)\n    : 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1),\n  easeInElastic: t => atEdge(t) ? t : elasticIn(t, 0.075, 0.3),\n  easeOutElastic: t => atEdge(t) ? t : elasticOut(t, 0.075, 0.3),\n  easeInOutElastic(t) {\n    const s = 0.1125;\n    const p = 0.45;\n    return atEdge(t) ? t :\n      t < 0.5\n        ? 0.5 * elasticIn(t * 2, s, p)\n        : 0.5 + 0.5 * elasticOut(t * 2 - 1, s, p);\n  },\n  easeInBack(t) {\n    const s = 1.70158;\n    return t * t * ((s + 1) * t - s);\n  },\n  easeOutBack(t) {\n    const s = 1.70158;\n    return (t -= 1) * t * ((s + 1) * t + s) + 1;\n  },\n  easeInOutBack(t) {\n    let s = 1.70158;\n    if ((t /= 0.5) < 1) {\n      return 0.5 * (t * t * (((s *= (1.525)) + 1) * t - s));\n    }\n    return 0.5 * ((t -= 2) * t * (((s *= (1.525)) + 1) * t + s) + 2);\n  },\n  easeInBounce: t => 1 - effects.easeOutBounce(1 - t),\n  easeOutBounce(t) {\n    const m = 7.5625;\n    const d = 2.75;\n    if (t < (1 / d)) {\n      return m * t * t;\n    }\n    if (t < (2 / d)) {\n      return m * (t -= (1.5 / d)) * t + 0.75;\n    }\n    if (t < (2.5 / d)) {\n      return m * (t -= (2.25 / d)) * t + 0.9375;\n    }\n    return m * (t -= (2.625 / d)) * t + 0.984375;\n  },\n  easeInOutBounce: t => (t < 0.5)\n    ? effects.easeInBounce(t * 2) * 0.5\n    : effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5,\n};\n\nfunction _pointInLine(p1, p2, t, mode) {\n  return {\n    x: p1.x + t * (p2.x - p1.x),\n    y: p1.y + t * (p2.y - p1.y)\n  };\n}\nfunction _steppedInterpolation(p1, p2, t, mode) {\n  return {\n    x: p1.x + t * (p2.x - p1.x),\n    y: mode === 'middle' ? t < 0.5 ? p1.y : p2.y\n    : mode === 'after' ? t < 1 ? p1.y : p2.y\n    : t > 0 ? p2.y : p1.y\n  };\n}\nfunction _bezierInterpolation(p1, p2, t, mode) {\n  const cp1 = {x: p1.cp2x, y: p1.cp2y};\n  const cp2 = {x: p2.cp1x, y: p2.cp1y};\n  const a = _pointInLine(p1, cp1, t);\n  const b = _pointInLine(cp1, cp2, t);\n  const c = _pointInLine(cp2, p2, t);\n  const d = _pointInLine(a, b, t);\n  const e = _pointInLine(b, c, t);\n  return _pointInLine(d, e, t);\n}\n\nconst intlCache = new Map();\nfunction getNumberFormat(locale, options) {\n  options = options || {};\n  const cacheKey = locale + JSON.stringify(options);\n  let formatter = intlCache.get(cacheKey);\n  if (!formatter) {\n    formatter = new Intl.NumberFormat(locale, options);\n    intlCache.set(cacheKey, formatter);\n  }\n  return formatter;\n}\nfunction formatNumber(num, locale, options) {\n  return getNumberFormat(locale, options).format(num);\n}\n\nconst getRightToLeftAdapter = function(rectX, width) {\n  return {\n    x(x) {\n      return rectX + rectX + width - x;\n    },\n    setWidth(w) {\n      width = w;\n    },\n    textAlign(align) {\n      if (align === 'center') {\n        return align;\n      }\n      return align === 'right' ? 'left' : 'right';\n    },\n    xPlus(x, value) {\n      return x - value;\n    },\n    leftForLtr(x, itemWidth) {\n      return x - itemWidth;\n    },\n  };\n};\nconst getLeftToRightAdapter = function() {\n  return {\n    x(x) {\n      return x;\n    },\n    setWidth(w) {\n    },\n    textAlign(align) {\n      return align;\n    },\n    xPlus(x, value) {\n      return x + value;\n    },\n    leftForLtr(x, _itemWidth) {\n      return x;\n    },\n  };\n};\nfunction getRtlAdapter(rtl, rectX, width) {\n  return rtl ? getRightToLeftAdapter(rectX, width) : getLeftToRightAdapter();\n}\nfunction overrideTextDirection(ctx, direction) {\n  let style, original;\n  if (direction === 'ltr' || direction === 'rtl') {\n    style = ctx.canvas.style;\n    original = [\n      style.getPropertyValue('direction'),\n      style.getPropertyPriority('direction'),\n    ];\n    style.setProperty('direction', direction, 'important');\n    ctx.prevTextDirection = original;\n  }\n}\nfunction restoreTextDirection(ctx, original) {\n  if (original !== undefined) {\n    delete ctx.prevTextDirection;\n    ctx.canvas.style.setProperty('direction', original[0], original[1]);\n  }\n}\n\nfunction propertyFn(property) {\n  if (property === 'angle') {\n    return {\n      between: _angleBetween,\n      compare: _angleDiff,\n      normalize: _normalizeAngle,\n    };\n  }\n  return {\n    between: _isBetween,\n    compare: (a, b) => a - b,\n    normalize: x => x\n  };\n}\nfunction normalizeSegment({start, end, count, loop, style}) {\n  return {\n    start: start % count,\n    end: end % count,\n    loop: loop && (end - start + 1) % count === 0,\n    style\n  };\n}\nfunction getSegment(segment, points, bounds) {\n  const {property, start: startBound, end: endBound} = bounds;\n  const {between, normalize} = propertyFn(property);\n  const count = points.length;\n  let {start, end, loop} = segment;\n  let i, ilen;\n  if (loop) {\n    start += count;\n    end += count;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      if (!between(normalize(points[start % count][property]), startBound, endBound)) {\n        break;\n      }\n      start--;\n      end--;\n    }\n    start %= count;\n    end %= count;\n  }\n  if (end < start) {\n    end += count;\n  }\n  return {start, end, loop, style: segment.style};\n}\nfunction _boundSegment(segment, points, bounds) {\n  if (!bounds) {\n    return [segment];\n  }\n  const {property, start: startBound, end: endBound} = bounds;\n  const count = points.length;\n  const {compare, between, normalize} = propertyFn(property);\n  const {start, end, loop, style} = getSegment(segment, points, bounds);\n  const result = [];\n  let inside = false;\n  let subStart = null;\n  let value, point, prevValue;\n  const startIsBefore = () => between(startBound, prevValue, value) && compare(startBound, prevValue) !== 0;\n  const endIsBefore = () => compare(endBound, value) === 0 || between(endBound, prevValue, value);\n  const shouldStart = () => inside || startIsBefore();\n  const shouldStop = () => !inside || endIsBefore();\n  for (let i = start, prev = start; i <= end; ++i) {\n    point = points[i % count];\n    if (point.skip) {\n      continue;\n    }\n    value = normalize(point[property]);\n    if (value === prevValue) {\n      continue;\n    }\n    inside = between(value, startBound, endBound);\n    if (subStart === null && shouldStart()) {\n      subStart = compare(value, startBound) === 0 ? i : prev;\n    }\n    if (subStart !== null && shouldStop()) {\n      result.push(normalizeSegment({start: subStart, end: i, loop, count, style}));\n      subStart = null;\n    }\n    prev = i;\n    prevValue = value;\n  }\n  if (subStart !== null) {\n    result.push(normalizeSegment({start: subStart, end, loop, count, style}));\n  }\n  return result;\n}\nfunction _boundSegments(line, bounds) {\n  const result = [];\n  const segments = line.segments;\n  for (let i = 0; i < segments.length; i++) {\n    const sub = _boundSegment(segments[i], line.points, bounds);\n    if (sub.length) {\n      result.push(...sub);\n    }\n  }\n  return result;\n}\nfunction findStartAndEnd(points, count, loop, spanGaps) {\n  let start = 0;\n  let end = count - 1;\n  if (loop && !spanGaps) {\n    while (start < count && !points[start].skip) {\n      start++;\n    }\n  }\n  while (start < count && points[start].skip) {\n    start++;\n  }\n  start %= count;\n  if (loop) {\n    end += start;\n  }\n  while (end > start && points[end % count].skip) {\n    end--;\n  }\n  end %= count;\n  return {start, end};\n}\nfunction solidSegments(points, start, max, loop) {\n  const count = points.length;\n  const result = [];\n  let last = start;\n  let prev = points[start];\n  let end;\n  for (end = start + 1; end <= max; ++end) {\n    const cur = points[end % count];\n    if (cur.skip || cur.stop) {\n      if (!prev.skip) {\n        loop = false;\n        result.push({start: start % count, end: (end - 1) % count, loop});\n        start = last = cur.stop ? end : null;\n      }\n    } else {\n      last = end;\n      if (prev.skip) {\n        start = end;\n      }\n    }\n    prev = cur;\n  }\n  if (last !== null) {\n    result.push({start: start % count, end: last % count, loop});\n  }\n  return result;\n}\nfunction _computeSegments(line, segmentOptions) {\n  const points = line.points;\n  const spanGaps = line.options.spanGaps;\n  const count = points.length;\n  if (!count) {\n    return [];\n  }\n  const loop = !!line._loop;\n  const {start, end} = findStartAndEnd(points, count, loop, spanGaps);\n  if (spanGaps === true) {\n    return splitByStyles(line, [{start, end, loop}], points, segmentOptions);\n  }\n  const max = end < start ? end + count : end;\n  const completeLoop = !!line._fullLoop && start === 0 && end === count - 1;\n  return splitByStyles(line, solidSegments(points, start, max, completeLoop), points, segmentOptions);\n}\nfunction splitByStyles(line, segments, points, segmentOptions) {\n  if (!segmentOptions || !segmentOptions.setContext || !points) {\n    return segments;\n  }\n  return doSplitByStyles(line, segments, points, segmentOptions);\n}\nfunction doSplitByStyles(line, segments, points, segmentOptions) {\n  const chartContext = line._chart.getContext();\n  const baseStyle = readStyle(line.options);\n  const {_datasetIndex: datasetIndex, options: {spanGaps}} = line;\n  const count = points.length;\n  const result = [];\n  let prevStyle = baseStyle;\n  let start = segments[0].start;\n  let i = start;\n  function addStyle(s, e, l, st) {\n    const dir = spanGaps ? -1 : 1;\n    if (s === e) {\n      return;\n    }\n    s += count;\n    while (points[s % count].skip) {\n      s -= dir;\n    }\n    while (points[e % count].skip) {\n      e += dir;\n    }\n    if (s % count !== e % count) {\n      result.push({start: s % count, end: e % count, loop: l, style: st});\n      prevStyle = st;\n      start = e % count;\n    }\n  }\n  for (const segment of segments) {\n    start = spanGaps ? start : segment.start;\n    let prev = points[start % count];\n    let style;\n    for (i = start + 1; i <= segment.end; i++) {\n      const pt = points[i % count];\n      style = readStyle(segmentOptions.setContext(createContext(chartContext, {\n        type: 'segment',\n        p0: prev,\n        p1: pt,\n        p0DataIndex: (i - 1) % count,\n        p1DataIndex: i % count,\n        datasetIndex\n      })));\n      if (styleChanged(style, prevStyle)) {\n        addStyle(start, i - 1, segment.loop, prevStyle);\n      }\n      prev = pt;\n      prevStyle = style;\n    }\n    if (start < i - 1) {\n      addStyle(start, i - 1, segment.loop, prevStyle);\n    }\n  }\n  return result;\n}\nfunction readStyle(options) {\n  return {\n    backgroundColor: options.backgroundColor,\n    borderCapStyle: options.borderCapStyle,\n    borderDash: options.borderDash,\n    borderDashOffset: options.borderDashOffset,\n    borderJoinStyle: options.borderJoinStyle,\n    borderWidth: options.borderWidth,\n    borderColor: options.borderColor\n  };\n}\nfunction styleChanged(style, prevStyle) {\n  return prevStyle && JSON.stringify(style) !== JSON.stringify(prevStyle);\n}\n\nvar helpers = /*#__PURE__*/Object.freeze({\n__proto__: null,\neasingEffects: effects,\ncolor: color,\ngetHoverColor: getHoverColor,\nnoop: noop,\nuid: uid,\nisNullOrUndef: isNullOrUndef,\nisArray: isArray,\nisObject: isObject,\nisFinite: isNumberFinite,\nfiniteOrDefault: finiteOrDefault,\nvalueOrDefault: valueOrDefault,\ntoPercentage: toPercentage,\ntoDimension: toDimension,\ncallback: callback,\neach: each,\n_elementsEqual: _elementsEqual,\nclone: clone,\n_merger: _merger,\nmerge: merge,\nmergeIf: mergeIf,\n_mergerIf: _mergerIf,\n_deprecated: _deprecated,\nresolveObjectKey: resolveObjectKey,\n_capitalize: _capitalize,\ndefined: defined,\nisFunction: isFunction,\nsetsEqual: setsEqual,\n_isClickEvent: _isClickEvent,\ntoFontString: toFontString,\n_measureText: _measureText,\n_longestText: _longestText,\n_alignPixel: _alignPixel,\nclearCanvas: clearCanvas,\ndrawPoint: drawPoint,\n_isPointInArea: _isPointInArea,\nclipArea: clipArea,\nunclipArea: unclipArea,\n_steppedLineTo: _steppedLineTo,\n_bezierCurveTo: _bezierCurveTo,\nrenderText: renderText,\naddRoundedRectPath: addRoundedRectPath,\n_lookup: _lookup,\n_lookupByKey: _lookupByKey,\n_rlookupByKey: _rlookupByKey,\n_filterBetween: _filterBetween,\nlistenArrayEvents: listenArrayEvents,\nunlistenArrayEvents: unlistenArrayEvents,\n_arrayUnique: _arrayUnique,\n_createResolver: _createResolver,\n_attachContext: _attachContext,\n_descriptors: _descriptors,\nsplineCurve: splineCurve,\nsplineCurveMonotone: splineCurveMonotone,\n_updateBezierControlPoints: _updateBezierControlPoints,\n_isDomSupported: _isDomSupported,\n_getParentNode: _getParentNode,\ngetStyle: getStyle,\ngetRelativePosition: getRelativePosition$1,\ngetMaximumSize: getMaximumSize,\nretinaScale: retinaScale,\nsupportsEventListenerOptions: supportsEventListenerOptions,\nreadUsedSize: readUsedSize,\nfontString: fontString,\nrequestAnimFrame: requestAnimFrame,\nthrottled: throttled,\ndebounce: debounce,\n_toLeftRightCenter: _toLeftRightCenter,\n_alignStartEnd: _alignStartEnd,\n_textX: _textX,\n_pointInLine: _pointInLine,\n_steppedInterpolation: _steppedInterpolation,\n_bezierInterpolation: _bezierInterpolation,\nformatNumber: formatNumber,\ntoLineHeight: toLineHeight,\n_readValueToProps: _readValueToProps,\ntoTRBL: toTRBL,\ntoTRBLCorners: toTRBLCorners,\ntoPadding: toPadding,\ntoFont: toFont,\nresolve: resolve,\n_addGrace: _addGrace,\ncreateContext: createContext,\nPI: PI,\nTAU: TAU,\nPITAU: PITAU,\nINFINITY: INFINITY,\nRAD_PER_DEG: RAD_PER_DEG,\nHALF_PI: HALF_PI,\nQUARTER_PI: QUARTER_PI,\nTWO_THIRDS_PI: TWO_THIRDS_PI,\nlog10: log10,\nsign: sign,\nniceNum: niceNum,\n_factorize: _factorize,\nisNumber: isNumber,\nalmostEquals: almostEquals,\nalmostWhole: almostWhole,\n_setMinAndMaxByKey: _setMinAndMaxByKey,\ntoRadians: toRadians,\ntoDegrees: toDegrees,\n_decimalPlaces: _decimalPlaces,\ngetAngleFromPoint: getAngleFromPoint,\ndistanceBetweenPoints: distanceBetweenPoints,\n_angleDiff: _angleDiff,\n_normalizeAngle: _normalizeAngle,\n_angleBetween: _angleBetween,\n_limitValue: _limitValue,\n_int16Range: _int16Range,\n_isBetween: _isBetween,\ngetRtlAdapter: getRtlAdapter,\noverrideTextDirection: overrideTextDirection,\nrestoreTextDirection: restoreTextDirection,\n_boundSegment: _boundSegment,\n_boundSegments: _boundSegments,\n_computeSegments: _computeSegments\n});\n\nclass BasePlatform {\n  acquireContext(canvas, aspectRatio) {}\n  releaseContext(context) {\n    return false;\n  }\n  addEventListener(chart, type, listener) {}\n  removeEventListener(chart, type, listener) {}\n  getDevicePixelRatio() {\n    return 1;\n  }\n  getMaximumSize(element, width, height, aspectRatio) {\n    width = Math.max(0, width || element.width);\n    height = height || element.height;\n    return {\n      width,\n      height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n    };\n  }\n  isAttached(canvas) {\n    return true;\n  }\n  updateConfig(config) {\n  }\n}\n\nclass BasicPlatform extends BasePlatform {\n  acquireContext(item) {\n    return item && item.getContext && item.getContext('2d') || null;\n  }\n  updateConfig(config) {\n    config.options.animation = false;\n  }\n}\n\nconst EXPANDO_KEY = '$chartjs';\nconst EVENT_TYPES = {\n  touchstart: 'mousedown',\n  touchmove: 'mousemove',\n  touchend: 'mouseup',\n  pointerenter: 'mouseenter',\n  pointerdown: 'mousedown',\n  pointermove: 'mousemove',\n  pointerup: 'mouseup',\n  pointerleave: 'mouseout',\n  pointerout: 'mouseout'\n};\nconst isNullOrEmpty = value => value === null || value === '';\nfunction initCanvas(canvas, aspectRatio) {\n  const style = canvas.style;\n  const renderHeight = canvas.getAttribute('height');\n  const renderWidth = canvas.getAttribute('width');\n  canvas[EXPANDO_KEY] = {\n    initial: {\n      height: renderHeight,\n      width: renderWidth,\n      style: {\n        display: style.display,\n        height: style.height,\n        width: style.width\n      }\n    }\n  };\n  style.display = style.display || 'block';\n  style.boxSizing = style.boxSizing || 'border-box';\n  if (isNullOrEmpty(renderWidth)) {\n    const displayWidth = readUsedSize(canvas, 'width');\n    if (displayWidth !== undefined) {\n      canvas.width = displayWidth;\n    }\n  }\n  if (isNullOrEmpty(renderHeight)) {\n    if (canvas.style.height === '') {\n      canvas.height = canvas.width / (aspectRatio || 2);\n    } else {\n      const displayHeight = readUsedSize(canvas, 'height');\n      if (displayHeight !== undefined) {\n        canvas.height = displayHeight;\n      }\n    }\n  }\n  return canvas;\n}\nconst eventListenerOptions = supportsEventListenerOptions ? {passive: true} : false;\nfunction addListener(node, type, listener) {\n  node.addEventListener(type, listener, eventListenerOptions);\n}\nfunction removeListener(chart, type, listener) {\n  chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n}\nfunction fromNativeEvent(event, chart) {\n  const type = EVENT_TYPES[event.type] || event.type;\n  const {x, y} = getRelativePosition$1(event, chart);\n  return {\n    type,\n    chart,\n    native: event,\n    x: x !== undefined ? x : null,\n    y: y !== undefined ? y : null,\n  };\n}\nfunction nodeListContains(nodeList, canvas) {\n  for (const node of nodeList) {\n    if (node === canvas || node.contains(canvas)) {\n      return true;\n    }\n  }\n}\nfunction createAttachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.addedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.removedNodes, canvas);\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\nfunction createDetachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.removedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.addedNodes, canvas);\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\nfunction onWindowResize() {\n  const dpr = window.devicePixelRatio;\n  if (dpr === oldDevicePixelRatio) {\n    return;\n  }\n  oldDevicePixelRatio = dpr;\n  drpListeningCharts.forEach((resize, chart) => {\n    if (chart.currentDevicePixelRatio !== dpr) {\n      resize();\n    }\n  });\n}\nfunction listenDevicePixelRatioChanges(chart, resize) {\n  if (!drpListeningCharts.size) {\n    window.addEventListener('resize', onWindowResize);\n  }\n  drpListeningCharts.set(chart, resize);\n}\nfunction unlistenDevicePixelRatioChanges(chart) {\n  drpListeningCharts.delete(chart);\n  if (!drpListeningCharts.size) {\n    window.removeEventListener('resize', onWindowResize);\n  }\n}\nfunction createResizeObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const container = canvas && _getParentNode(canvas);\n  if (!container) {\n    return;\n  }\n  const resize = throttled((width, height) => {\n    const w = container.clientWidth;\n    listener(width, height);\n    if (w < container.clientWidth) {\n      listener();\n    }\n  }, window);\n  const observer = new ResizeObserver(entries => {\n    const entry = entries[0];\n    const width = entry.contentRect.width;\n    const height = entry.contentRect.height;\n    if (width === 0 && height === 0) {\n      return;\n    }\n    resize(width, height);\n  });\n  observer.observe(container);\n  listenDevicePixelRatioChanges(chart, resize);\n  return observer;\n}\nfunction releaseObserver(chart, type, observer) {\n  if (observer) {\n    observer.disconnect();\n  }\n  if (type === 'resize') {\n    unlistenDevicePixelRatioChanges(chart);\n  }\n}\nfunction createProxyAndListen(chart, type, listener) {\n  const canvas = chart.canvas;\n  const proxy = throttled((event) => {\n    if (chart.ctx !== null) {\n      listener(fromNativeEvent(event, chart));\n    }\n  }, chart, (args) => {\n    const event = args[0];\n    return [event, event.offsetX, event.offsetY];\n  });\n  addListener(canvas, type, proxy);\n  return proxy;\n}\nclass DomPlatform extends BasePlatform {\n  acquireContext(canvas, aspectRatio) {\n    const context = canvas && canvas.getContext && canvas.getContext('2d');\n    if (context && context.canvas === canvas) {\n      initCanvas(canvas, aspectRatio);\n      return context;\n    }\n    return null;\n  }\n  releaseContext(context) {\n    const canvas = context.canvas;\n    if (!canvas[EXPANDO_KEY]) {\n      return false;\n    }\n    const initial = canvas[EXPANDO_KEY].initial;\n    ['height', 'width'].forEach((prop) => {\n      const value = initial[prop];\n      if (isNullOrUndef(value)) {\n        canvas.removeAttribute(prop);\n      } else {\n        canvas.setAttribute(prop, value);\n      }\n    });\n    const style = initial.style || {};\n    Object.keys(style).forEach((key) => {\n      canvas.style[key] = style[key];\n    });\n    canvas.width = canvas.width;\n    delete canvas[EXPANDO_KEY];\n    return true;\n  }\n  addEventListener(chart, type, listener) {\n    this.removeEventListener(chart, type);\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const handlers = {\n      attach: createAttachObserver,\n      detach: createDetachObserver,\n      resize: createResizeObserver\n    };\n    const handler = handlers[type] || createProxyAndListen;\n    proxies[type] = handler(chart, type, listener);\n  }\n  removeEventListener(chart, type) {\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const proxy = proxies[type];\n    if (!proxy) {\n      return;\n    }\n    const handlers = {\n      attach: releaseObserver,\n      detach: releaseObserver,\n      resize: releaseObserver\n    };\n    const handler = handlers[type] || removeListener;\n    handler(chart, type, proxy);\n    proxies[type] = undefined;\n  }\n  getDevicePixelRatio() {\n    return window.devicePixelRatio;\n  }\n  getMaximumSize(canvas, width, height, aspectRatio) {\n    return getMaximumSize(canvas, width, height, aspectRatio);\n  }\n  isAttached(canvas) {\n    const container = _getParentNode(canvas);\n    return !!(container && container.isConnected);\n  }\n}\n\nfunction _detectPlatform(canvas) {\n  if (!_isDomSupported() || (typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas)) {\n    return BasicPlatform;\n  }\n  return DomPlatform;\n}\n\nvar platforms = /*#__PURE__*/Object.freeze({\n__proto__: null,\n_detectPlatform: _detectPlatform,\nBasePlatform: BasePlatform,\nBasicPlatform: BasicPlatform,\nDomPlatform: DomPlatform\n});\n\nconst transparent = 'transparent';\nconst interpolators = {\n  boolean(from, to, factor) {\n    return factor > 0.5 ? to : from;\n  },\n  color(from, to, factor) {\n    const c0 = color(from || transparent);\n    const c1 = c0.valid && color(to || transparent);\n    return c1 && c1.valid\n      ? c1.mix(c0, factor).hexString()\n      : to;\n  },\n  number(from, to, factor) {\n    return from + (to - from) * factor;\n  }\n};\nclass Animation {\n  constructor(cfg, target, prop, to) {\n    const currentValue = target[prop];\n    to = resolve([cfg.to, to, currentValue, cfg.from]);\n    const from = resolve([cfg.from, currentValue, to]);\n    this._active = true;\n    this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n    this._easing = effects[cfg.easing] || effects.linear;\n    this._start = Math.floor(Date.now() + (cfg.delay || 0));\n    this._duration = this._total = Math.floor(cfg.duration);\n    this._loop = !!cfg.loop;\n    this._target = target;\n    this._prop = prop;\n    this._from = from;\n    this._to = to;\n    this._promises = undefined;\n  }\n  active() {\n    return this._active;\n  }\n  update(cfg, to, date) {\n    if (this._active) {\n      this._notify(false);\n      const currentValue = this._target[this._prop];\n      const elapsed = date - this._start;\n      const remain = this._duration - elapsed;\n      this._start = date;\n      this._duration = Math.floor(Math.max(remain, cfg.duration));\n      this._total += elapsed;\n      this._loop = !!cfg.loop;\n      this._to = resolve([cfg.to, to, currentValue, cfg.from]);\n      this._from = resolve([cfg.from, currentValue, to]);\n    }\n  }\n  cancel() {\n    if (this._active) {\n      this.tick(Date.now());\n      this._active = false;\n      this._notify(false);\n    }\n  }\n  tick(date) {\n    const elapsed = date - this._start;\n    const duration = this._duration;\n    const prop = this._prop;\n    const from = this._from;\n    const loop = this._loop;\n    const to = this._to;\n    let factor;\n    this._active = from !== to && (loop || (elapsed < duration));\n    if (!this._active) {\n      this._target[prop] = to;\n      this._notify(true);\n      return;\n    }\n    if (elapsed < 0) {\n      this._target[prop] = from;\n      return;\n    }\n    factor = (elapsed / duration) % 2;\n    factor = loop && factor > 1 ? 2 - factor : factor;\n    factor = this._easing(Math.min(1, Math.max(0, factor)));\n    this._target[prop] = this._fn(from, to, factor);\n  }\n  wait() {\n    const promises = this._promises || (this._promises = []);\n    return new Promise((res, rej) => {\n      promises.push({res, rej});\n    });\n  }\n  _notify(resolved) {\n    const method = resolved ? 'res' : 'rej';\n    const promises = this._promises || [];\n    for (let i = 0; i < promises.length; i++) {\n      promises[i][method]();\n    }\n  }\n}\n\nconst numbers = ['x', 'y', 'borderWidth', 'radius', 'tension'];\nconst colors = ['color', 'borderColor', 'backgroundColor'];\ndefaults.set('animation', {\n  delay: undefined,\n  duration: 1000,\n  easing: 'easeOutQuart',\n  fn: undefined,\n  from: undefined,\n  loop: undefined,\n  to: undefined,\n  type: undefined,\n});\nconst animationOptions = Object.keys(defaults.animation);\ndefaults.describe('animation', {\n  _fallback: false,\n  _indexable: false,\n  _scriptable: (name) => name !== 'onProgress' && name !== 'onComplete' && name !== 'fn',\n});\ndefaults.set('animations', {\n  colors: {\n    type: 'color',\n    properties: colors\n  },\n  numbers: {\n    type: 'number',\n    properties: numbers\n  },\n});\ndefaults.describe('animations', {\n  _fallback: 'animation',\n});\ndefaults.set('transitions', {\n  active: {\n    animation: {\n      duration: 400\n    }\n  },\n  resize: {\n    animation: {\n      duration: 0\n    }\n  },\n  show: {\n    animations: {\n      colors: {\n        from: 'transparent'\n      },\n      visible: {\n        type: 'boolean',\n        duration: 0\n      },\n    }\n  },\n  hide: {\n    animations: {\n      colors: {\n        to: 'transparent'\n      },\n      visible: {\n        type: 'boolean',\n        easing: 'linear',\n        fn: v => v | 0\n      },\n    }\n  }\n});\nclass Animations {\n  constructor(chart, config) {\n    this._chart = chart;\n    this._properties = new Map();\n    this.configure(config);\n  }\n  configure(config) {\n    if (!isObject(config)) {\n      return;\n    }\n    const animatedProps = this._properties;\n    Object.getOwnPropertyNames(config).forEach(key => {\n      const cfg = config[key];\n      if (!isObject(cfg)) {\n        return;\n      }\n      const resolved = {};\n      for (const option of animationOptions) {\n        resolved[option] = cfg[option];\n      }\n      (isArray(cfg.properties) && cfg.properties || [key]).forEach((prop) => {\n        if (prop === key || !animatedProps.has(prop)) {\n          animatedProps.set(prop, resolved);\n        }\n      });\n    });\n  }\n  _animateOptions(target, values) {\n    const newOptions = values.options;\n    const options = resolveTargetOptions(target, newOptions);\n    if (!options) {\n      return [];\n    }\n    const animations = this._createAnimations(options, newOptions);\n    if (newOptions.$shared) {\n      awaitAll(target.options.$animations, newOptions).then(() => {\n        target.options = newOptions;\n      }, () => {\n      });\n    }\n    return animations;\n  }\n  _createAnimations(target, values) {\n    const animatedProps = this._properties;\n    const animations = [];\n    const running = target.$animations || (target.$animations = {});\n    const props = Object.keys(values);\n    const date = Date.now();\n    let i;\n    for (i = props.length - 1; i >= 0; --i) {\n      const prop = props[i];\n      if (prop.charAt(0) === '$') {\n        continue;\n      }\n      if (prop === 'options') {\n        animations.push(...this._animateOptions(target, values));\n        continue;\n      }\n      const value = values[prop];\n      let animation = running[prop];\n      const cfg = animatedProps.get(prop);\n      if (animation) {\n        if (cfg && animation.active()) {\n          animation.update(cfg, value, date);\n          continue;\n        } else {\n          animation.cancel();\n        }\n      }\n      if (!cfg || !cfg.duration) {\n        target[prop] = value;\n        continue;\n      }\n      running[prop] = animation = new Animation(cfg, target, prop, value);\n      animations.push(animation);\n    }\n    return animations;\n  }\n  update(target, values) {\n    if (this._properties.size === 0) {\n      Object.assign(target, values);\n      return;\n    }\n    const animations = this._createAnimations(target, values);\n    if (animations.length) {\n      animator.add(this._chart, animations);\n      return true;\n    }\n  }\n}\nfunction awaitAll(animations, properties) {\n  const running = [];\n  const keys = Object.keys(properties);\n  for (let i = 0; i < keys.length; i++) {\n    const anim = animations[keys[i]];\n    if (anim && anim.active()) {\n      running.push(anim.wait());\n    }\n  }\n  return Promise.all(running);\n}\nfunction resolveTargetOptions(target, newOptions) {\n  if (!newOptions) {\n    return;\n  }\n  let options = target.options;\n  if (!options) {\n    target.options = newOptions;\n    return;\n  }\n  if (options.$shared) {\n    target.options = options = Object.assign({}, options, {$shared: false, $animations: {}});\n  }\n  return options;\n}\n\nfunction scaleClip(scale, allowedOverflow) {\n  const opts = scale && scale.options || {};\n  const reverse = opts.reverse;\n  const min = opts.min === undefined ? allowedOverflow : 0;\n  const max = opts.max === undefined ? allowedOverflow : 0;\n  return {\n    start: reverse ? max : min,\n    end: reverse ? min : max\n  };\n}\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n  if (allowedOverflow === false) {\n    return false;\n  }\n  const x = scaleClip(xScale, allowedOverflow);\n  const y = scaleClip(yScale, allowedOverflow);\n  return {\n    top: y.end,\n    right: x.end,\n    bottom: y.start,\n    left: x.start\n  };\n}\nfunction toClip(value) {\n  let t, r, b, l;\n  if (isObject(value)) {\n    t = value.top;\n    r = value.right;\n    b = value.bottom;\n    l = value.left;\n  } else {\n    t = r = b = l = value;\n  }\n  return {\n    top: t,\n    right: r,\n    bottom: b,\n    left: l,\n    disabled: value === false\n  };\n}\nfunction getSortedDatasetIndices(chart, filterVisible) {\n  const keys = [];\n  const metasets = chart._getSortedDatasetMetas(filterVisible);\n  let i, ilen;\n  for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n    keys.push(metasets[i].index);\n  }\n  return keys;\n}\nfunction applyStack(stack, value, dsIndex, options = {}) {\n  const keys = stack.keys;\n  const singleMode = options.mode === 'single';\n  let i, ilen, datasetIndex, otherValue;\n  if (value === null) {\n    return;\n  }\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    datasetIndex = +keys[i];\n    if (datasetIndex === dsIndex) {\n      if (options.all) {\n        continue;\n      }\n      break;\n    }\n    otherValue = stack.values[datasetIndex];\n    if (isNumberFinite(otherValue) && (singleMode || (value === 0 || sign(value) === sign(otherValue)))) {\n      value += otherValue;\n    }\n  }\n  return value;\n}\nfunction convertObjectDataToArray(data) {\n  const keys = Object.keys(data);\n  const adata = new Array(keys.length);\n  let i, ilen, key;\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    key = keys[i];\n    adata[i] = {\n      x: key,\n      y: data[key]\n    };\n  }\n  return adata;\n}\nfunction isStacked(scale, meta) {\n  const stacked = scale && scale.options.stacked;\n  return stacked || (stacked === undefined && meta.stack !== undefined);\n}\nfunction getStackKey(indexScale, valueScale, meta) {\n  return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\nfunction getUserBounds(scale) {\n  const {min, max, minDefined, maxDefined} = scale.getUserBounds();\n  return {\n    min: minDefined ? min : Number.NEGATIVE_INFINITY,\n    max: maxDefined ? max : Number.POSITIVE_INFINITY\n  };\n}\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n  const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n  return subStack[indexValue] || (subStack[indexValue] = {});\n}\nfunction getLastIndexInStack(stack, vScale, positive, type) {\n  for (const meta of vScale.getMatchingVisibleMetas(type).reverse()) {\n    const value = stack[meta.index];\n    if ((positive && value > 0) || (!positive && value < 0)) {\n      return meta.index;\n    }\n  }\n  return null;\n}\nfunction updateStacks(controller, parsed) {\n  const {chart, _cachedMeta: meta} = controller;\n  const stacks = chart._stacks || (chart._stacks = {});\n  const {iScale, vScale, index: datasetIndex} = meta;\n  const iAxis = iScale.axis;\n  const vAxis = vScale.axis;\n  const key = getStackKey(iScale, vScale, meta);\n  const ilen = parsed.length;\n  let stack;\n  for (let i = 0; i < ilen; ++i) {\n    const item = parsed[i];\n    const {[iAxis]: index, [vAxis]: value} = item;\n    const itemStacks = item._stacks || (item._stacks = {});\n    stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n    stack[datasetIndex] = value;\n    stack._top = getLastIndexInStack(stack, vScale, true, meta.type);\n    stack._bottom = getLastIndexInStack(stack, vScale, false, meta.type);\n  }\n}\nfunction getFirstScaleId(chart, axis) {\n  const scales = chart.scales;\n  return Object.keys(scales).filter(key => scales[key].axis === axis).shift();\n}\nfunction createDatasetContext(parent, index) {\n  return createContext(parent,\n    {\n      active: false,\n      dataset: undefined,\n      datasetIndex: index,\n      index,\n      mode: 'default',\n      type: 'dataset'\n    }\n  );\n}\nfunction createDataContext(parent, index, element) {\n  return createContext(parent, {\n    active: false,\n    dataIndex: index,\n    parsed: undefined,\n    raw: undefined,\n    element,\n    index,\n    mode: 'default',\n    type: 'data'\n  });\n}\nfunction clearStacks(meta, items) {\n  const datasetIndex = meta.controller.index;\n  const axis = meta.vScale && meta.vScale.axis;\n  if (!axis) {\n    return;\n  }\n  items = items || meta._parsed;\n  for (const parsed of items) {\n    const stacks = parsed._stacks;\n    if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\n      return;\n    }\n    delete stacks[axis][datasetIndex];\n  }\n}\nconst isDirectUpdateMode = (mode) => mode === 'reset' || mode === 'none';\nconst cloneIfNotShared = (cached, shared) => shared ? cached : Object.assign({}, cached);\nconst createStack = (canStack, meta, chart) => canStack && !meta.hidden && meta._stacked\n  && {keys: getSortedDatasetIndices(chart, true), values: null};\nclass DatasetController {\n  constructor(chart, datasetIndex) {\n    this.chart = chart;\n    this._ctx = chart.ctx;\n    this.index = datasetIndex;\n    this._cachedDataOpts = {};\n    this._cachedMeta = this.getMeta();\n    this._type = this._cachedMeta.type;\n    this.options = undefined;\n    this._parsing = false;\n    this._data = undefined;\n    this._objectData = undefined;\n    this._sharedOptions = undefined;\n    this._drawStart = undefined;\n    this._drawCount = undefined;\n    this.enableOptionSharing = false;\n    this.$context = undefined;\n    this._syncList = [];\n    this.initialize();\n  }\n  initialize() {\n    const meta = this._cachedMeta;\n    this.configure();\n    this.linkScales();\n    meta._stacked = isStacked(meta.vScale, meta);\n    this.addElements();\n  }\n  updateIndex(datasetIndex) {\n    if (this.index !== datasetIndex) {\n      clearStacks(this._cachedMeta);\n    }\n    this.index = datasetIndex;\n  }\n  linkScales() {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n    const chooseId = (axis, x, y, r) => axis === 'x' ? x : axis === 'r' ? r : y;\n    const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n    const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n    const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n    const indexAxis = meta.indexAxis;\n    const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n    const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n    meta.xScale = this.getScaleForId(xid);\n    meta.yScale = this.getScaleForId(yid);\n    meta.rScale = this.getScaleForId(rid);\n    meta.iScale = this.getScaleForId(iid);\n    meta.vScale = this.getScaleForId(vid);\n  }\n  getDataset() {\n    return this.chart.data.datasets[this.index];\n  }\n  getMeta() {\n    return this.chart.getDatasetMeta(this.index);\n  }\n  getScaleForId(scaleID) {\n    return this.chart.scales[scaleID];\n  }\n  _getOtherScale(scale) {\n    const meta = this._cachedMeta;\n    return scale === meta.iScale\n      ? meta.vScale\n      : meta.iScale;\n  }\n  reset() {\n    this._update('reset');\n  }\n  _destroy() {\n    const meta = this._cachedMeta;\n    if (this._data) {\n      unlistenArrayEvents(this._data, this);\n    }\n    if (meta._stacked) {\n      clearStacks(meta);\n    }\n  }\n  _dataCheck() {\n    const dataset = this.getDataset();\n    const data = dataset.data || (dataset.data = []);\n    const _data = this._data;\n    if (isObject(data)) {\n      this._data = convertObjectDataToArray(data);\n    } else if (_data !== data) {\n      if (_data) {\n        unlistenArrayEvents(_data, this);\n        const meta = this._cachedMeta;\n        clearStacks(meta);\n        meta._parsed = [];\n      }\n      if (data && Object.isExtensible(data)) {\n        listenArrayEvents(data, this);\n      }\n      this._syncList = [];\n      this._data = data;\n    }\n  }\n  addElements() {\n    const meta = this._cachedMeta;\n    this._dataCheck();\n    if (this.datasetElementType) {\n      meta.dataset = new this.datasetElementType();\n    }\n  }\n  buildOrUpdateElements(resetNewElements) {\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n    let stackChanged = false;\n    this._dataCheck();\n    const oldStacked = meta._stacked;\n    meta._stacked = isStacked(meta.vScale, meta);\n    if (meta.stack !== dataset.stack) {\n      stackChanged = true;\n      clearStacks(meta);\n      meta.stack = dataset.stack;\n    }\n    this._resyncElements(resetNewElements);\n    if (stackChanged || oldStacked !== meta._stacked) {\n      updateStacks(this, meta._parsed);\n    }\n  }\n  configure() {\n    const config = this.chart.config;\n    const scopeKeys = config.datasetScopeKeys(this._type);\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys, true);\n    this.options = config.createResolver(scopes, this.getContext());\n    this._parsing = this.options.parsing;\n    this._cachedDataOpts = {};\n  }\n  parse(start, count) {\n    const {_cachedMeta: meta, _data: data} = this;\n    const {iScale, _stacked} = meta;\n    const iAxis = iScale.axis;\n    let sorted = start === 0 && count === data.length ? true : meta._sorted;\n    let prev = start > 0 && meta._parsed[start - 1];\n    let i, cur, parsed;\n    if (this._parsing === false) {\n      meta._parsed = data;\n      meta._sorted = true;\n      parsed = data;\n    } else {\n      if (isArray(data[start])) {\n        parsed = this.parseArrayData(meta, data, start, count);\n      } else if (isObject(data[start])) {\n        parsed = this.parseObjectData(meta, data, start, count);\n      } else {\n        parsed = this.parsePrimitiveData(meta, data, start, count);\n      }\n      const isNotInOrderComparedToPrev = () => cur[iAxis] === null || (prev && cur[iAxis] < prev[iAxis]);\n      for (i = 0; i < count; ++i) {\n        meta._parsed[i + start] = cur = parsed[i];\n        if (sorted) {\n          if (isNotInOrderComparedToPrev()) {\n            sorted = false;\n          }\n          prev = cur;\n        }\n      }\n      meta._sorted = sorted;\n    }\n    if (_stacked) {\n      updateStacks(this, parsed);\n    }\n  }\n  parsePrimitiveData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = new Array(count);\n    let i, ilen, index;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      parsed[i] = {\n        [iAxis]: singleScale || iScale.parse(labels[index], index),\n        [vAxis]: vScale.parse(data[index], index)\n      };\n    }\n    return parsed;\n  }\n  parseArrayData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(item[0], index),\n        y: yScale.parse(item[1], index)\n      };\n    }\n    return parsed;\n  }\n  parseObjectData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n        y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n      };\n    }\n    return parsed;\n  }\n  getParsed(index) {\n    return this._cachedMeta._parsed[index];\n  }\n  getDataElement(index) {\n    return this._cachedMeta.data[index];\n  }\n  applyStack(scale, parsed, mode) {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const value = parsed[scale.axis];\n    const stack = {\n      keys: getSortedDatasetIndices(chart, true),\n      values: parsed._stacks[scale.axis]\n    };\n    return applyStack(stack, value, meta.index, {mode});\n  }\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    const parsedValue = parsed[scale.axis];\n    let value = parsedValue === null ? NaN : parsedValue;\n    const values = stack && parsed._stacks[scale.axis];\n    if (stack && values) {\n      stack.values = values;\n      value = applyStack(stack, parsedValue, this._cachedMeta.index);\n    }\n    range.min = Math.min(range.min, value);\n    range.max = Math.max(range.max, value);\n  }\n  getMinMax(scale, canStack) {\n    const meta = this._cachedMeta;\n    const _parsed = meta._parsed;\n    const sorted = meta._sorted && scale === meta.iScale;\n    const ilen = _parsed.length;\n    const otherScale = this._getOtherScale(scale);\n    const stack = createStack(canStack, meta, this.chart);\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\n    const {min: otherMin, max: otherMax} = getUserBounds(otherScale);\n    let i, parsed;\n    function _skip() {\n      parsed = _parsed[i];\n      const otherValue = parsed[otherScale.axis];\n      return !isNumberFinite(parsed[scale.axis]) || otherMin > otherValue || otherMax < otherValue;\n    }\n    for (i = 0; i < ilen; ++i) {\n      if (_skip()) {\n        continue;\n      }\n      this.updateRangeFromParsed(range, scale, parsed, stack);\n      if (sorted) {\n        break;\n      }\n    }\n    if (sorted) {\n      for (i = ilen - 1; i >= 0; --i) {\n        if (_skip()) {\n          continue;\n        }\n        this.updateRangeFromParsed(range, scale, parsed, stack);\n        break;\n      }\n    }\n    return range;\n  }\n  getAllParsedValues(scale) {\n    const parsed = this._cachedMeta._parsed;\n    const values = [];\n    let i, ilen, value;\n    for (i = 0, ilen = parsed.length; i < ilen; ++i) {\n      value = parsed[i][scale.axis];\n      if (isNumberFinite(value)) {\n        values.push(value);\n      }\n    }\n    return values;\n  }\n  getMaxOverflow() {\n    return false;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const parsed = this.getParsed(index);\n    return {\n      label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n      value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n    };\n  }\n  _update(mode) {\n    const meta = this._cachedMeta;\n    this.update(mode || 'default');\n    meta._clip = toClip(valueOrDefault(this.options.clip, defaultClip(meta.xScale, meta.yScale, this.getMaxOverflow())));\n  }\n  update(mode) {}\n  draw() {\n    const ctx = this._ctx;\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const elements = meta.data || [];\n    const area = chart.chartArea;\n    const active = [];\n    const start = this._drawStart || 0;\n    const count = this._drawCount || (elements.length - start);\n    const drawActiveElementsOnTop = this.options.drawActiveElementsOnTop;\n    let i;\n    if (meta.dataset) {\n      meta.dataset.draw(ctx, area, start, count);\n    }\n    for (i = start; i < start + count; ++i) {\n      const element = elements[i];\n      if (element.hidden) {\n        continue;\n      }\n      if (element.active && drawActiveElementsOnTop) {\n        active.push(element);\n      } else {\n        element.draw(ctx, area);\n      }\n    }\n    for (i = 0; i < active.length; ++i) {\n      active[i].draw(ctx, area);\n    }\n  }\n  getStyle(index, active) {\n    const mode = active ? 'active' : 'default';\n    return index === undefined && this._cachedMeta.dataset\n      ? this.resolveDatasetElementOptions(mode)\n      : this.resolveDataElementOptions(index || 0, mode);\n  }\n  getContext(index, active, mode) {\n    const dataset = this.getDataset();\n    let context;\n    if (index >= 0 && index < this._cachedMeta.data.length) {\n      const element = this._cachedMeta.data[index];\n      context = element.$context ||\n        (element.$context = createDataContext(this.getContext(), index, element));\n      context.parsed = this.getParsed(index);\n      context.raw = dataset.data[index];\n      context.index = context.dataIndex = index;\n    } else {\n      context = this.$context ||\n        (this.$context = createDatasetContext(this.chart.getContext(), this.index));\n      context.dataset = dataset;\n      context.index = context.datasetIndex = this.index;\n    }\n    context.active = !!active;\n    context.mode = mode;\n    return context;\n  }\n  resolveDatasetElementOptions(mode) {\n    return this._resolveElementOptions(this.datasetElementType.id, mode);\n  }\n  resolveDataElementOptions(index, mode) {\n    return this._resolveElementOptions(this.dataElementType.id, mode, index);\n  }\n  _resolveElementOptions(elementType, mode = 'default', index) {\n    const active = mode === 'active';\n    const cache = this._cachedDataOpts;\n    const cacheKey = elementType + '-' + mode;\n    const cached = cache[cacheKey];\n    const sharing = this.enableOptionSharing && defined(index);\n    if (cached) {\n      return cloneIfNotShared(cached, sharing);\n    }\n    const config = this.chart.config;\n    const scopeKeys = config.datasetElementScopeKeys(this._type, elementType);\n    const prefixes = active ? [`${elementType}Hover`, 'hover', elementType, ''] : [elementType, ''];\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n    const names = Object.keys(defaults.elements[elementType]);\n    const context = () => this.getContext(index, active);\n    const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n    if (values.$shared) {\n      values.$shared = sharing;\n      cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n    }\n    return values;\n  }\n  _resolveAnimations(index, transition, active) {\n    const chart = this.chart;\n    const cache = this._cachedDataOpts;\n    const cacheKey = `animation-${transition}`;\n    const cached = cache[cacheKey];\n    if (cached) {\n      return cached;\n    }\n    let options;\n    if (chart.options.animation !== false) {\n      const config = this.chart.config;\n      const scopeKeys = config.datasetAnimationScopeKeys(this._type, transition);\n      const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n      options = config.createResolver(scopes, this.getContext(index, active, transition));\n    }\n    const animations = new Animations(chart, options && options.animations);\n    if (options && options._cacheable) {\n      cache[cacheKey] = Object.freeze(animations);\n    }\n    return animations;\n  }\n  getSharedOptions(options) {\n    if (!options.$shared) {\n      return;\n    }\n    return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n  }\n  includeOptions(mode, sharedOptions) {\n    return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n  }\n  updateElement(element, index, properties, mode) {\n    if (isDirectUpdateMode(mode)) {\n      Object.assign(element, properties);\n    } else {\n      this._resolveAnimations(index, mode).update(element, properties);\n    }\n  }\n  updateSharedOptions(sharedOptions, mode, newOptions) {\n    if (sharedOptions && !isDirectUpdateMode(mode)) {\n      this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n    }\n  }\n  _setStyle(element, index, mode, active) {\n    element.active = active;\n    const options = this.getStyle(index, active);\n    this._resolveAnimations(index, mode, active).update(element, {\n      options: (!active && this.getSharedOptions(options)) || options\n    });\n  }\n  removeHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', false);\n  }\n  setHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', true);\n  }\n  _removeDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n    if (element) {\n      this._setStyle(element, undefined, 'active', false);\n    }\n  }\n  _setDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n    if (element) {\n      this._setStyle(element, undefined, 'active', true);\n    }\n  }\n  _resyncElements(resetNewElements) {\n    const data = this._data;\n    const elements = this._cachedMeta.data;\n    for (const [method, arg1, arg2] of this._syncList) {\n      this[method](arg1, arg2);\n    }\n    this._syncList = [];\n    const numMeta = elements.length;\n    const numData = data.length;\n    const count = Math.min(numData, numMeta);\n    if (count) {\n      this.parse(0, count);\n    }\n    if (numData > numMeta) {\n      this._insertElements(numMeta, numData - numMeta, resetNewElements);\n    } else if (numData < numMeta) {\n      this._removeElements(numData, numMeta - numData);\n    }\n  }\n  _insertElements(start, count, resetNewElements = true) {\n    const meta = this._cachedMeta;\n    const data = meta.data;\n    const end = start + count;\n    let i;\n    const move = (arr) => {\n      arr.length += count;\n      for (i = arr.length - 1; i >= end; i--) {\n        arr[i] = arr[i - count];\n      }\n    };\n    move(data);\n    for (i = start; i < end; ++i) {\n      data[i] = new this.dataElementType();\n    }\n    if (this._parsing) {\n      move(meta._parsed);\n    }\n    this.parse(start, count);\n    if (resetNewElements) {\n      this.updateElements(data, start, count, 'reset');\n    }\n  }\n  updateElements(element, start, count, mode) {}\n  _removeElements(start, count) {\n    const meta = this._cachedMeta;\n    if (this._parsing) {\n      const removed = meta._parsed.splice(start, count);\n      if (meta._stacked) {\n        clearStacks(meta, removed);\n      }\n    }\n    meta.data.splice(start, count);\n  }\n  _sync(args) {\n    if (this._parsing) {\n      this._syncList.push(args);\n    } else {\n      const [method, arg1, arg2] = args;\n      this[method](arg1, arg2);\n    }\n    this.chart._dataChanges.push([this.index, ...args]);\n  }\n  _onDataPush() {\n    const count = arguments.length;\n    this._sync(['_insertElements', this.getDataset().data.length - count, count]);\n  }\n  _onDataPop() {\n    this._sync(['_removeElements', this._cachedMeta.data.length - 1, 1]);\n  }\n  _onDataShift() {\n    this._sync(['_removeElements', 0, 1]);\n  }\n  _onDataSplice(start, count) {\n    if (count) {\n      this._sync(['_removeElements', start, count]);\n    }\n    const newCount = arguments.length - 2;\n    if (newCount) {\n      this._sync(['_insertElements', start, newCount]);\n    }\n  }\n  _onDataUnshift() {\n    this._sync(['_insertElements', 0, arguments.length]);\n  }\n}\nDatasetController.defaults = {};\nDatasetController.prototype.datasetElementType = null;\nDatasetController.prototype.dataElementType = null;\n\nclass Element {\n  constructor() {\n    this.x = undefined;\n    this.y = undefined;\n    this.active = false;\n    this.options = undefined;\n    this.$animations = undefined;\n  }\n  tooltipPosition(useFinalPosition) {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y};\n  }\n  hasValue() {\n    return isNumber(this.x) && isNumber(this.y);\n  }\n  getProps(props, final) {\n    const anims = this.$animations;\n    if (!final || !anims) {\n      return this;\n    }\n    const ret = {};\n    props.forEach(prop => {\n      ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : this[prop];\n    });\n    return ret;\n  }\n}\nElement.defaults = {};\nElement.defaultRoutes = undefined;\n\nconst formatters = {\n  values(value) {\n    return isArray(value) ? value : '' + value;\n  },\n  numeric(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    const locale = this.chart.options.locale;\n    let notation;\n    let delta = tickValue;\n    if (ticks.length > 1) {\n      const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n      if (maxTick < 1e-4 || maxTick > 1e+15) {\n        notation = 'scientific';\n      }\n      delta = calculateDelta(tickValue, ticks);\n    }\n    const logDelta = log10(Math.abs(delta));\n    const numDecimal = Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0);\n    const options = {notation, minimumFractionDigits: numDecimal, maximumFractionDigits: numDecimal};\n    Object.assign(options, this.options.ticks.format);\n    return formatNumber(tickValue, locale, options);\n  },\n  logarithmic(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    const remain = tickValue / (Math.pow(10, Math.floor(log10(tickValue))));\n    if (remain === 1 || remain === 2 || remain === 5) {\n      return formatters.numeric.call(this, tickValue, index, ticks);\n    }\n    return '';\n  }\n};\nfunction calculateDelta(tickValue, ticks) {\n  let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n  if (Math.abs(delta) >= 1 && tickValue !== Math.floor(tickValue)) {\n    delta = tickValue - Math.floor(tickValue);\n  }\n  return delta;\n}\nvar Ticks = {formatters};\n\ndefaults.set('scale', {\n  display: true,\n  offset: false,\n  reverse: false,\n  beginAtZero: false,\n  bounds: 'ticks',\n  grace: 0,\n  grid: {\n    display: true,\n    lineWidth: 1,\n    drawBorder: true,\n    drawOnChartArea: true,\n    drawTicks: true,\n    tickLength: 8,\n    tickWidth: (_ctx, options) => options.lineWidth,\n    tickColor: (_ctx, options) => options.color,\n    offset: false,\n    borderDash: [],\n    borderDashOffset: 0.0,\n    borderWidth: 1\n  },\n  title: {\n    display: false,\n    text: '',\n    padding: {\n      top: 4,\n      bottom: 4\n    }\n  },\n  ticks: {\n    minRotation: 0,\n    maxRotation: 50,\n    mirror: false,\n    textStrokeWidth: 0,\n    textStrokeColor: '',\n    padding: 3,\n    display: true,\n    autoSkip: true,\n    autoSkipPadding: 3,\n    labelOffset: 0,\n    callback: Ticks.formatters.values,\n    minor: {},\n    major: {},\n    align: 'center',\n    crossAlign: 'near',\n    showLabelBackdrop: false,\n    backdropColor: 'rgba(255, 255, 255, 0.75)',\n    backdropPadding: 2,\n  }\n});\ndefaults.route('scale.ticks', 'color', '', 'color');\ndefaults.route('scale.grid', 'color', '', 'borderColor');\ndefaults.route('scale.grid', 'borderColor', '', 'borderColor');\ndefaults.route('scale.title', 'color', '', 'color');\ndefaults.describe('scale', {\n  _fallback: false,\n  _scriptable: (name) => !name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\n  _indexable: (name) => name !== 'borderDash' && name !== 'tickBorderDash',\n});\ndefaults.describe('scales', {\n  _fallback: 'scale',\n});\ndefaults.describe('scale.ticks', {\n  _scriptable: (name) => name !== 'backdropPadding' && name !== 'callback',\n  _indexable: (name) => name !== 'backdropPadding',\n});\n\nfunction autoSkip(scale, ticks) {\n  const tickOpts = scale.options.ticks;\n  const ticksLimit = tickOpts.maxTicksLimit || determineMaxTicks(scale);\n  const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n  const numMajorIndices = majorIndices.length;\n  const first = majorIndices[0];\n  const last = majorIndices[numMajorIndices - 1];\n  const newTicks = [];\n  if (numMajorIndices > ticksLimit) {\n    skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n    return newTicks;\n  }\n  const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n  if (numMajorIndices > 0) {\n    let i, ilen;\n    const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n    skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n    for (i = 0, ilen = numMajorIndices - 1; i < ilen; i++) {\n      skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n    }\n    skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n    return newTicks;\n  }\n  skip(ticks, newTicks, spacing);\n  return newTicks;\n}\nfunction determineMaxTicks(scale) {\n  const offset = scale.options.offset;\n  const tickLength = scale._tickSize();\n  const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n  const maxChart = scale._maxLength / tickLength;\n  return Math.floor(Math.min(maxScale, maxChart));\n}\nfunction calculateSpacing(majorIndices, ticks, ticksLimit) {\n  const evenMajorSpacing = getEvenSpacing(majorIndices);\n  const spacing = ticks.length / ticksLimit;\n  if (!evenMajorSpacing) {\n    return Math.max(spacing, 1);\n  }\n  const factors = _factorize(evenMajorSpacing);\n  for (let i = 0, ilen = factors.length - 1; i < ilen; i++) {\n    const factor = factors[i];\n    if (factor > spacing) {\n      return factor;\n    }\n  }\n  return Math.max(spacing, 1);\n}\nfunction getMajorIndices(ticks) {\n  const result = [];\n  let i, ilen;\n  for (i = 0, ilen = ticks.length; i < ilen; i++) {\n    if (ticks[i].major) {\n      result.push(i);\n    }\n  }\n  return result;\n}\nfunction skipMajors(ticks, newTicks, majorIndices, spacing) {\n  let count = 0;\n  let next = majorIndices[0];\n  let i;\n  spacing = Math.ceil(spacing);\n  for (i = 0; i < ticks.length; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = majorIndices[count * spacing];\n    }\n  }\n}\nfunction skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n  const start = valueOrDefault(majorStart, 0);\n  const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n  let count = 0;\n  let length, i, next;\n  spacing = Math.ceil(spacing);\n  if (majorEnd) {\n    length = majorEnd - majorStart;\n    spacing = length / Math.floor(length / spacing);\n  }\n  next = start;\n  while (next < 0) {\n    count++;\n    next = Math.round(start + count * spacing);\n  }\n  for (i = Math.max(start, 0); i < end; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = Math.round(start + count * spacing);\n    }\n  }\n}\nfunction getEvenSpacing(arr) {\n  const len = arr.length;\n  let i, diff;\n  if (len < 2) {\n    return false;\n  }\n  for (diff = arr[0], i = 1; i < len; ++i) {\n    if (arr[i] - arr[i - 1] !== diff) {\n      return false;\n    }\n  }\n  return diff;\n}\n\nconst reverseAlign = (align) => align === 'left' ? 'right' : align === 'right' ? 'left' : align;\nconst offsetFromEdge = (scale, edge, offset) => edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\nfunction sample(arr, numItems) {\n  const result = [];\n  const increment = arr.length / numItems;\n  const len = arr.length;\n  let i = 0;\n  for (; i < len; i += increment) {\n    result.push(arr[Math.floor(i)]);\n  }\n  return result;\n}\nfunction getPixelForGridLine(scale, index, offsetGridLines) {\n  const length = scale.ticks.length;\n  const validIndex = Math.min(index, length - 1);\n  const start = scale._startPixel;\n  const end = scale._endPixel;\n  const epsilon = 1e-6;\n  let lineValue = scale.getPixelForTick(validIndex);\n  let offset;\n  if (offsetGridLines) {\n    if (length === 1) {\n      offset = Math.max(lineValue - start, end - lineValue);\n    } else if (index === 0) {\n      offset = (scale.getPixelForTick(1) - lineValue) / 2;\n    } else {\n      offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n    }\n    lineValue += validIndex < index ? offset : -offset;\n    if (lineValue < start - epsilon || lineValue > end + epsilon) {\n      return;\n    }\n  }\n  return lineValue;\n}\nfunction garbageCollect(caches, length) {\n  each(caches, (cache) => {\n    const gc = cache.gc;\n    const gcLen = gc.length / 2;\n    let i;\n    if (gcLen > length) {\n      for (i = 0; i < gcLen; ++i) {\n        delete cache.data[gc[i]];\n      }\n      gc.splice(0, gcLen);\n    }\n  });\n}\nfunction getTickMarkLength(options) {\n  return options.drawTicks ? options.tickLength : 0;\n}\nfunction getTitleHeight(options, fallback) {\n  if (!options.display) {\n    return 0;\n  }\n  const font = toFont(options.font, fallback);\n  const padding = toPadding(options.padding);\n  const lines = isArray(options.text) ? options.text.length : 1;\n  return (lines * font.lineHeight) + padding.height;\n}\nfunction createScaleContext(parent, scale) {\n  return createContext(parent, {\n    scale,\n    type: 'scale'\n  });\n}\nfunction createTickContext(parent, index, tick) {\n  return createContext(parent, {\n    tick,\n    index,\n    type: 'tick'\n  });\n}\nfunction titleAlign(align, position, reverse) {\n  let ret = _toLeftRightCenter(align);\n  if ((reverse && position !== 'right') || (!reverse && position === 'right')) {\n    ret = reverseAlign(ret);\n  }\n  return ret;\n}\nfunction titleArgs(scale, offset, position, align) {\n  const {top, left, bottom, right, chart} = scale;\n  const {chartArea, scales} = chart;\n  let rotation = 0;\n  let maxWidth, titleX, titleY;\n  const height = bottom - top;\n  const width = right - left;\n  if (scale.isHorizontal()) {\n    titleX = _alignStartEnd(align, left, right);\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\n    } else if (position === 'center') {\n      titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\n    } else {\n      titleY = offsetFromEdge(scale, position, offset);\n    }\n    maxWidth = right - left;\n  } else {\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleX = scales[positionAxisID].getPixelForValue(value) - width + offset;\n    } else if (position === 'center') {\n      titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\n    } else {\n      titleX = offsetFromEdge(scale, position, offset);\n    }\n    titleY = _alignStartEnd(align, bottom, top);\n    rotation = position === 'left' ? -HALF_PI : HALF_PI;\n  }\n  return {titleX, titleY, maxWidth, rotation};\n}\nclass Scale extends Element {\n  constructor(cfg) {\n    super();\n    this.id = cfg.id;\n    this.type = cfg.type;\n    this.options = undefined;\n    this.ctx = cfg.ctx;\n    this.chart = cfg.chart;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this._margins = {\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    };\n    this.maxWidth = undefined;\n    this.maxHeight = undefined;\n    this.paddingTop = undefined;\n    this.paddingBottom = undefined;\n    this.paddingLeft = undefined;\n    this.paddingRight = undefined;\n    this.axis = undefined;\n    this.labelRotation = undefined;\n    this.min = undefined;\n    this.max = undefined;\n    this._range = undefined;\n    this.ticks = [];\n    this._gridLineItems = null;\n    this._labelItems = null;\n    this._labelSizes = null;\n    this._length = 0;\n    this._maxLength = 0;\n    this._longestTextCache = {};\n    this._startPixel = undefined;\n    this._endPixel = undefined;\n    this._reversePixels = false;\n    this._userMax = undefined;\n    this._userMin = undefined;\n    this._suggestedMax = undefined;\n    this._suggestedMin = undefined;\n    this._ticksLength = 0;\n    this._borderValue = 0;\n    this._cache = {};\n    this._dataLimitsCached = false;\n    this.$context = undefined;\n  }\n  init(options) {\n    this.options = options.setContext(this.getContext());\n    this.axis = options.axis;\n    this._userMin = this.parse(options.min);\n    this._userMax = this.parse(options.max);\n    this._suggestedMin = this.parse(options.suggestedMin);\n    this._suggestedMax = this.parse(options.suggestedMax);\n  }\n  parse(raw, index) {\n    return raw;\n  }\n  getUserBounds() {\n    let {_userMin, _userMax, _suggestedMin, _suggestedMax} = this;\n    _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n    _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n    _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n    _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n    return {\n      min: finiteOrDefault(_userMin, _suggestedMin),\n      max: finiteOrDefault(_userMax, _suggestedMax),\n      minDefined: isNumberFinite(_userMin),\n      maxDefined: isNumberFinite(_userMax)\n    };\n  }\n  getMinMax(canStack) {\n    let {min, max, minDefined, maxDefined} = this.getUserBounds();\n    let range;\n    if (minDefined && maxDefined) {\n      return {min, max};\n    }\n    const metas = this.getMatchingVisibleMetas();\n    for (let i = 0, ilen = metas.length; i < ilen; ++i) {\n      range = metas[i].controller.getMinMax(this, canStack);\n      if (!minDefined) {\n        min = Math.min(min, range.min);\n      }\n      if (!maxDefined) {\n        max = Math.max(max, range.max);\n      }\n    }\n    min = maxDefined && min > max ? max : min;\n    max = minDefined && min > max ? min : max;\n    return {\n      min: finiteOrDefault(min, finiteOrDefault(max, min)),\n      max: finiteOrDefault(max, finiteOrDefault(min, max))\n    };\n  }\n  getPadding() {\n    return {\n      left: this.paddingLeft || 0,\n      top: this.paddingTop || 0,\n      right: this.paddingRight || 0,\n      bottom: this.paddingBottom || 0\n    };\n  }\n  getTicks() {\n    return this.ticks;\n  }\n  getLabels() {\n    const data = this.chart.data;\n    return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n  }\n  beforeLayout() {\n    this._cache = {};\n    this._dataLimitsCached = false;\n  }\n  beforeUpdate() {\n    callback(this.options.beforeUpdate, [this]);\n  }\n  update(maxWidth, maxHeight, margins) {\n    const {beginAtZero, grace, ticks: tickOpts} = this.options;\n    const sampleSize = tickOpts.sampleSize;\n    this.beforeUpdate();\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins = Object.assign({\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    }, margins);\n    this.ticks = null;\n    this._labelSizes = null;\n    this._gridLineItems = null;\n    this._labelItems = null;\n    this.beforeSetDimensions();\n    this.setDimensions();\n    this.afterSetDimensions();\n    this._maxLength = this.isHorizontal()\n      ? this.width + margins.left + margins.right\n      : this.height + margins.top + margins.bottom;\n    if (!this._dataLimitsCached) {\n      this.beforeDataLimits();\n      this.determineDataLimits();\n      this.afterDataLimits();\n      this._range = _addGrace(this, grace, beginAtZero);\n      this._dataLimitsCached = true;\n    }\n    this.beforeBuildTicks();\n    this.ticks = this.buildTicks() || [];\n    this.afterBuildTicks();\n    const samplingEnabled = sampleSize < this.ticks.length;\n    this._convertTicksToLabels(samplingEnabled ? sample(this.ticks, sampleSize) : this.ticks);\n    this.configure();\n    this.beforeCalculateLabelRotation();\n    this.calculateLabelRotation();\n    this.afterCalculateLabelRotation();\n    if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n      this.ticks = autoSkip(this, this.ticks);\n      this._labelSizes = null;\n    }\n    if (samplingEnabled) {\n      this._convertTicksToLabels(this.ticks);\n    }\n    this.beforeFit();\n    this.fit();\n    this.afterFit();\n    this.afterUpdate();\n  }\n  configure() {\n    let reversePixels = this.options.reverse;\n    let startPixel, endPixel;\n    if (this.isHorizontal()) {\n      startPixel = this.left;\n      endPixel = this.right;\n    } else {\n      startPixel = this.top;\n      endPixel = this.bottom;\n      reversePixels = !reversePixels;\n    }\n    this._startPixel = startPixel;\n    this._endPixel = endPixel;\n    this._reversePixels = reversePixels;\n    this._length = endPixel - startPixel;\n    this._alignToPixels = this.options.alignToPixels;\n  }\n  afterUpdate() {\n    callback(this.options.afterUpdate, [this]);\n  }\n  beforeSetDimensions() {\n    callback(this.options.beforeSetDimensions, [this]);\n  }\n  setDimensions() {\n    if (this.isHorizontal()) {\n      this.width = this.maxWidth;\n      this.left = 0;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n      this.top = 0;\n      this.bottom = this.height;\n    }\n    this.paddingLeft = 0;\n    this.paddingTop = 0;\n    this.paddingRight = 0;\n    this.paddingBottom = 0;\n  }\n  afterSetDimensions() {\n    callback(this.options.afterSetDimensions, [this]);\n  }\n  _callHooks(name) {\n    this.chart.notifyPlugins(name, this.getContext());\n    callback(this.options[name], [this]);\n  }\n  beforeDataLimits() {\n    this._callHooks('beforeDataLimits');\n  }\n  determineDataLimits() {}\n  afterDataLimits() {\n    this._callHooks('afterDataLimits');\n  }\n  beforeBuildTicks() {\n    this._callHooks('beforeBuildTicks');\n  }\n  buildTicks() {\n    return [];\n  }\n  afterBuildTicks() {\n    this._callHooks('afterBuildTicks');\n  }\n  beforeTickToLabelConversion() {\n    callback(this.options.beforeTickToLabelConversion, [this]);\n  }\n  generateTickLabels(ticks) {\n    const tickOpts = this.options.ticks;\n    let i, ilen, tick;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      tick = ticks[i];\n      tick.label = callback(tickOpts.callback, [tick.value, i, ticks], this);\n    }\n  }\n  afterTickToLabelConversion() {\n    callback(this.options.afterTickToLabelConversion, [this]);\n  }\n  beforeCalculateLabelRotation() {\n    callback(this.options.beforeCalculateLabelRotation, [this]);\n  }\n  calculateLabelRotation() {\n    const options = this.options;\n    const tickOpts = options.ticks;\n    const numTicks = this.ticks.length;\n    const minRotation = tickOpts.minRotation || 0;\n    const maxRotation = tickOpts.maxRotation;\n    let labelRotation = minRotation;\n    let tickWidth, maxHeight, maxLabelDiagonal;\n    if (!this._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !this.isHorizontal()) {\n      this.labelRotation = minRotation;\n      return;\n    }\n    const labelSizes = this._getLabelSizes();\n    const maxLabelWidth = labelSizes.widest.width;\n    const maxLabelHeight = labelSizes.highest.height;\n    const maxWidth = _limitValue(this.chart.width - maxLabelWidth, 0, this.maxWidth);\n    tickWidth = options.offset ? this.maxWidth / numTicks : maxWidth / (numTicks - 1);\n    if (maxLabelWidth + 6 > tickWidth) {\n      tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n      maxHeight = this.maxHeight - getTickMarkLength(options.grid)\n\t\t\t\t- tickOpts.padding - getTitleHeight(options.title, this.chart.options.font);\n      maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n      labelRotation = toDegrees(Math.min(\n        Math.asin(_limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)),\n        Math.asin(_limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(_limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))\n      ));\n      labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n    }\n    this.labelRotation = labelRotation;\n  }\n  afterCalculateLabelRotation() {\n    callback(this.options.afterCalculateLabelRotation, [this]);\n  }\n  beforeFit() {\n    callback(this.options.beforeFit, [this]);\n  }\n  fit() {\n    const minSize = {\n      width: 0,\n      height: 0\n    };\n    const {chart, options: {ticks: tickOpts, title: titleOpts, grid: gridOpts}} = this;\n    const display = this._isVisible();\n    const isHorizontal = this.isHorizontal();\n    if (display) {\n      const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n      if (isHorizontal) {\n        minSize.width = this.maxWidth;\n        minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n      } else {\n        minSize.height = this.maxHeight;\n        minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n      }\n      if (tickOpts.display && this.ticks.length) {\n        const {first, last, widest, highest} = this._getLabelSizes();\n        const tickPadding = tickOpts.padding * 2;\n        const angleRadians = toRadians(this.labelRotation);\n        const cos = Math.cos(angleRadians);\n        const sin = Math.sin(angleRadians);\n        if (isHorizontal) {\n          const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n          minSize.height = Math.min(this.maxHeight, minSize.height + labelHeight + tickPadding);\n        } else {\n          const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n          minSize.width = Math.min(this.maxWidth, minSize.width + labelWidth + tickPadding);\n        }\n        this._calculatePadding(first, last, sin, cos);\n      }\n    }\n    this._handleMargins();\n    if (isHorizontal) {\n      this.width = this._length = chart.width - this._margins.left - this._margins.right;\n      this.height = minSize.height;\n    } else {\n      this.width = minSize.width;\n      this.height = this._length = chart.height - this._margins.top - this._margins.bottom;\n    }\n  }\n  _calculatePadding(first, last, sin, cos) {\n    const {ticks: {align, padding}, position} = this.options;\n    const isRotated = this.labelRotation !== 0;\n    const labelsBelowTicks = position !== 'top' && this.axis === 'x';\n    if (this.isHorizontal()) {\n      const offsetLeft = this.getPixelForTick(0) - this.left;\n      const offsetRight = this.right - this.getPixelForTick(this.ticks.length - 1);\n      let paddingLeft = 0;\n      let paddingRight = 0;\n      if (isRotated) {\n        if (labelsBelowTicks) {\n          paddingLeft = cos * first.width;\n          paddingRight = sin * last.height;\n        } else {\n          paddingLeft = sin * first.height;\n          paddingRight = cos * last.width;\n        }\n      } else if (align === 'start') {\n        paddingRight = last.width;\n      } else if (align === 'end') {\n        paddingLeft = first.width;\n      } else {\n        paddingLeft = first.width / 2;\n        paddingRight = last.width / 2;\n      }\n      this.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * this.width / (this.width - offsetLeft), 0);\n      this.paddingRight = Math.max((paddingRight - offsetRight + padding) * this.width / (this.width - offsetRight), 0);\n    } else {\n      let paddingTop = last.height / 2;\n      let paddingBottom = first.height / 2;\n      if (align === 'start') {\n        paddingTop = 0;\n        paddingBottom = first.height;\n      } else if (align === 'end') {\n        paddingTop = last.height;\n        paddingBottom = 0;\n      }\n      this.paddingTop = paddingTop + padding;\n      this.paddingBottom = paddingBottom + padding;\n    }\n  }\n  _handleMargins() {\n    if (this._margins) {\n      this._margins.left = Math.max(this.paddingLeft, this._margins.left);\n      this._margins.top = Math.max(this.paddingTop, this._margins.top);\n      this._margins.right = Math.max(this.paddingRight, this._margins.right);\n      this._margins.bottom = Math.max(this.paddingBottom, this._margins.bottom);\n    }\n  }\n  afterFit() {\n    callback(this.options.afterFit, [this]);\n  }\n  isHorizontal() {\n    const {axis, position} = this.options;\n    return position === 'top' || position === 'bottom' || axis === 'x';\n  }\n  isFullSize() {\n    return this.options.fullSize;\n  }\n  _convertTicksToLabels(ticks) {\n    this.beforeTickToLabelConversion();\n    this.generateTickLabels(ticks);\n    let i, ilen;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      if (isNullOrUndef(ticks[i].label)) {\n        ticks.splice(i, 1);\n        ilen--;\n        i--;\n      }\n    }\n    this.afterTickToLabelConversion();\n  }\n  _getLabelSizes() {\n    let labelSizes = this._labelSizes;\n    if (!labelSizes) {\n      const sampleSize = this.options.ticks.sampleSize;\n      let ticks = this.ticks;\n      if (sampleSize < ticks.length) {\n        ticks = sample(ticks, sampleSize);\n      }\n      this._labelSizes = labelSizes = this._computeLabelSizes(ticks, ticks.length);\n    }\n    return labelSizes;\n  }\n  _computeLabelSizes(ticks, length) {\n    const {ctx, _longestTextCache: caches} = this;\n    const widths = [];\n    const heights = [];\n    let widestLabelSize = 0;\n    let highestLabelSize = 0;\n    let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n    for (i = 0; i < length; ++i) {\n      label = ticks[i].label;\n      tickFont = this._resolveTickFontOptions(i);\n      ctx.font = fontString = tickFont.string;\n      cache = caches[fontString] = caches[fontString] || {data: {}, gc: []};\n      lineHeight = tickFont.lineHeight;\n      width = height = 0;\n      if (!isNullOrUndef(label) && !isArray(label)) {\n        width = _measureText(ctx, cache.data, cache.gc, width, label);\n        height = lineHeight;\n      } else if (isArray(label)) {\n        for (j = 0, jlen = label.length; j < jlen; ++j) {\n          nestedLabel = label[j];\n          if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n            width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n            height += lineHeight;\n          }\n        }\n      }\n      widths.push(width);\n      heights.push(height);\n      widestLabelSize = Math.max(width, widestLabelSize);\n      highestLabelSize = Math.max(height, highestLabelSize);\n    }\n    garbageCollect(caches, length);\n    const widest = widths.indexOf(widestLabelSize);\n    const highest = heights.indexOf(highestLabelSize);\n    const valueAt = (idx) => ({width: widths[idx] || 0, height: heights[idx] || 0});\n    return {\n      first: valueAt(0),\n      last: valueAt(length - 1),\n      widest: valueAt(widest),\n      highest: valueAt(highest),\n      widths,\n      heights,\n    };\n  }\n  getLabelForValue(value) {\n    return value;\n  }\n  getPixelForValue(value, index) {\n    return NaN;\n  }\n  getValueForPixel(pixel) {}\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n  getPixelForDecimal(decimal) {\n    if (this._reversePixels) {\n      decimal = 1 - decimal;\n    }\n    const pixel = this._startPixel + decimal * this._length;\n    return _int16Range(this._alignToPixels ? _alignPixel(this.chart, pixel, 0) : pixel);\n  }\n  getDecimalForPixel(pixel) {\n    const decimal = (pixel - this._startPixel) / this._length;\n    return this._reversePixels ? 1 - decimal : decimal;\n  }\n  getBasePixel() {\n    return this.getPixelForValue(this.getBaseValue());\n  }\n  getBaseValue() {\n    const {min, max} = this;\n    return min < 0 && max < 0 ? max :\n      min > 0 && max > 0 ? min :\n      0;\n  }\n  getContext(index) {\n    const ticks = this.ticks || [];\n    if (index >= 0 && index < ticks.length) {\n      const tick = ticks[index];\n      return tick.$context ||\n\t\t\t\t(tick.$context = createTickContext(this.getContext(), index, tick));\n    }\n    return this.$context ||\n\t\t\t(this.$context = createScaleContext(this.chart.getContext(), this));\n  }\n  _tickSize() {\n    const optionTicks = this.options.ticks;\n    const rot = toRadians(this.labelRotation);\n    const cos = Math.abs(Math.cos(rot));\n    const sin = Math.abs(Math.sin(rot));\n    const labelSizes = this._getLabelSizes();\n    const padding = optionTicks.autoSkipPadding || 0;\n    const w = labelSizes ? labelSizes.widest.width + padding : 0;\n    const h = labelSizes ? labelSizes.highest.height + padding : 0;\n    return this.isHorizontal()\n      ? h * cos > w * sin ? w / cos : h / sin\n      : h * sin < w * cos ? h / cos : w / sin;\n  }\n  _isVisible() {\n    const display = this.options.display;\n    if (display !== 'auto') {\n      return !!display;\n    }\n    return this.getMatchingVisibleMetas().length > 0;\n  }\n  _computeGridLineItems(chartArea) {\n    const axis = this.axis;\n    const chart = this.chart;\n    const options = this.options;\n    const {grid, position} = options;\n    const offset = grid.offset;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const ticksLength = ticks.length + (offset ? 1 : 0);\n    const tl = getTickMarkLength(grid);\n    const items = [];\n    const borderOpts = grid.setContext(this.getContext());\n    const axisWidth = borderOpts.drawBorder ? borderOpts.borderWidth : 0;\n    const axisHalfWidth = axisWidth / 2;\n    const alignBorderValue = function(pixel) {\n      return _alignPixel(chart, pixel, axisWidth);\n    };\n    let borderValue, i, lineValue, alignedLineValue;\n    let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n    if (position === 'top') {\n      borderValue = alignBorderValue(this.bottom);\n      ty1 = this.bottom - tl;\n      ty2 = borderValue - axisHalfWidth;\n      y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n      y2 = chartArea.bottom;\n    } else if (position === 'bottom') {\n      borderValue = alignBorderValue(this.top);\n      y1 = chartArea.top;\n      y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = this.top + tl;\n    } else if (position === 'left') {\n      borderValue = alignBorderValue(this.right);\n      tx1 = this.right - tl;\n      tx2 = borderValue - axisHalfWidth;\n      x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n      x2 = chartArea.right;\n    } else if (position === 'right') {\n      borderValue = alignBorderValue(this.left);\n      x1 = chartArea.left;\n      x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n      tx1 = borderValue + axisHalfWidth;\n      tx2 = this.left + tl;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n      y1 = chartArea.top;\n      y2 = chartArea.bottom;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = ty1 + tl;\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n      tx1 = borderValue - axisHalfWidth;\n      tx2 = tx1 - tl;\n      x1 = chartArea.left;\n      x2 = chartArea.right;\n    }\n    const limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n    const step = Math.max(1, Math.ceil(ticksLength / limit));\n    for (i = 0; i < ticksLength; i += step) {\n      const optsAtIndex = grid.setContext(this.getContext(i));\n      const lineWidth = optsAtIndex.lineWidth;\n      const lineColor = optsAtIndex.color;\n      const borderDash = grid.borderDash || [];\n      const borderDashOffset = optsAtIndex.borderDashOffset;\n      const tickWidth = optsAtIndex.tickWidth;\n      const tickColor = optsAtIndex.tickColor;\n      const tickBorderDash = optsAtIndex.tickBorderDash || [];\n      const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n      lineValue = getPixelForGridLine(this, i, offset);\n      if (lineValue === undefined) {\n        continue;\n      }\n      alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n      if (isHorizontal) {\n        tx1 = tx2 = x1 = x2 = alignedLineValue;\n      } else {\n        ty1 = ty2 = y1 = y2 = alignedLineValue;\n      }\n      items.push({\n        tx1,\n        ty1,\n        tx2,\n        ty2,\n        x1,\n        y1,\n        x2,\n        y2,\n        width: lineWidth,\n        color: lineColor,\n        borderDash,\n        borderDashOffset,\n        tickWidth,\n        tickColor,\n        tickBorderDash,\n        tickBorderDashOffset,\n      });\n    }\n    this._ticksLength = ticksLength;\n    this._borderValue = borderValue;\n    return items;\n  }\n  _computeLabelItems(chartArea) {\n    const axis = this.axis;\n    const options = this.options;\n    const {position, ticks: optionTicks} = options;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const {align, crossAlign, padding, mirror} = optionTicks;\n    const tl = getTickMarkLength(options.grid);\n    const tickAndPadding = tl + padding;\n    const hTickAndPadding = mirror ? -padding : tickAndPadding;\n    const rotation = -toRadians(this.labelRotation);\n    const items = [];\n    let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n    let textBaseline = 'middle';\n    if (position === 'top') {\n      y = this.bottom - hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'bottom') {\n      y = this.top + hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'left') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (position === 'right') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        y = ((chartArea.top + chartArea.bottom) / 2) + tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        y = this.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n      }\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        x = ((chartArea.left + chartArea.right) / 2) - tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        x = this.chart.scales[positionAxisID].getPixelForValue(value);\n      }\n      textAlign = this._getYAxisLabelAlignment(tl).textAlign;\n    }\n    if (axis === 'y') {\n      if (align === 'start') {\n        textBaseline = 'top';\n      } else if (align === 'end') {\n        textBaseline = 'bottom';\n      }\n    }\n    const labelSizes = this._getLabelSizes();\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      label = tick.label;\n      const optsAtIndex = optionTicks.setContext(this.getContext(i));\n      pixel = this.getPixelForTick(i) + optionTicks.labelOffset;\n      font = this._resolveTickFontOptions(i);\n      lineHeight = font.lineHeight;\n      lineCount = isArray(label) ? label.length : 1;\n      const halfCount = lineCount / 2;\n      const color = optsAtIndex.color;\n      const strokeColor = optsAtIndex.textStrokeColor;\n      const strokeWidth = optsAtIndex.textStrokeWidth;\n      if (isHorizontal) {\n        x = pixel;\n        if (position === 'top') {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = -lineCount * lineHeight + lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n          } else {\n            textOffset = -labelSizes.highest.height + lineHeight / 2;\n          }\n        } else {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n          } else {\n            textOffset = labelSizes.highest.height - lineCount * lineHeight;\n          }\n        }\n        if (mirror) {\n          textOffset *= -1;\n        }\n      } else {\n        y = pixel;\n        textOffset = (1 - lineCount) * lineHeight / 2;\n      }\n      let backdrop;\n      if (optsAtIndex.showLabelBackdrop) {\n        const labelPadding = toPadding(optsAtIndex.backdropPadding);\n        const height = labelSizes.heights[i];\n        const width = labelSizes.widths[i];\n        let top = y + textOffset - labelPadding.top;\n        let left = x - labelPadding.left;\n        switch (textBaseline) {\n        case 'middle':\n          top -= height / 2;\n          break;\n        case 'bottom':\n          top -= height;\n          break;\n        }\n        switch (textAlign) {\n        case 'center':\n          left -= width / 2;\n          break;\n        case 'right':\n          left -= width;\n          break;\n        }\n        backdrop = {\n          left,\n          top,\n          width: width + labelPadding.width,\n          height: height + labelPadding.height,\n          color: optsAtIndex.backdropColor,\n        };\n      }\n      items.push({\n        rotation,\n        label,\n        font,\n        color,\n        strokeColor,\n        strokeWidth,\n        textOffset,\n        textAlign,\n        textBaseline,\n        translation: [x, y],\n        backdrop,\n      });\n    }\n    return items;\n  }\n  _getXAxisLabelAlignment() {\n    const {position, ticks} = this.options;\n    const rotation = -toRadians(this.labelRotation);\n    if (rotation) {\n      return position === 'top' ? 'left' : 'right';\n    }\n    let align = 'center';\n    if (ticks.align === 'start') {\n      align = 'left';\n    } else if (ticks.align === 'end') {\n      align = 'right';\n    }\n    return align;\n  }\n  _getYAxisLabelAlignment(tl) {\n    const {position, ticks: {crossAlign, mirror, padding}} = this.options;\n    const labelSizes = this._getLabelSizes();\n    const tickAndPadding = tl + padding;\n    const widest = labelSizes.widest.width;\n    let textAlign;\n    let x;\n    if (position === 'left') {\n      if (mirror) {\n        x = this.right + padding;\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += (widest / 2);\n        } else {\n          textAlign = 'right';\n          x += widest;\n        }\n      } else {\n        x = this.right - tickAndPadding;\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x = this.left;\n        }\n      }\n    } else if (position === 'right') {\n      if (mirror) {\n        x = this.left + padding;\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x -= widest;\n        }\n      } else {\n        x = this.left + tickAndPadding;\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += widest / 2;\n        } else {\n          textAlign = 'right';\n          x = this.right;\n        }\n      }\n    } else {\n      textAlign = 'right';\n    }\n    return {textAlign, x};\n  }\n  _computeLabelArea() {\n    if (this.options.ticks.mirror) {\n      return;\n    }\n    const chart = this.chart;\n    const position = this.options.position;\n    if (position === 'left' || position === 'right') {\n      return {top: 0, left: this.left, bottom: chart.height, right: this.right};\n    } if (position === 'top' || position === 'bottom') {\n      return {top: this.top, left: 0, bottom: this.bottom, right: chart.width};\n    }\n  }\n  drawBackground() {\n    const {ctx, options: {backgroundColor}, left, top, width, height} = this;\n    if (backgroundColor) {\n      ctx.save();\n      ctx.fillStyle = backgroundColor;\n      ctx.fillRect(left, top, width, height);\n      ctx.restore();\n    }\n  }\n  getLineWidthForValue(value) {\n    const grid = this.options.grid;\n    if (!this._isVisible() || !grid.display) {\n      return 0;\n    }\n    const ticks = this.ticks;\n    const index = ticks.findIndex(t => t.value === value);\n    if (index >= 0) {\n      const opts = grid.setContext(this.getContext(index));\n      return opts.lineWidth;\n    }\n    return 0;\n  }\n  drawGrid(chartArea) {\n    const grid = this.options.grid;\n    const ctx = this.ctx;\n    const items = this._gridLineItems || (this._gridLineItems = this._computeGridLineItems(chartArea));\n    let i, ilen;\n    const drawLine = (p1, p2, style) => {\n      if (!style.width || !style.color) {\n        return;\n      }\n      ctx.save();\n      ctx.lineWidth = style.width;\n      ctx.strokeStyle = style.color;\n      ctx.setLineDash(style.borderDash || []);\n      ctx.lineDashOffset = style.borderDashOffset;\n      ctx.beginPath();\n      ctx.moveTo(p1.x, p1.y);\n      ctx.lineTo(p2.x, p2.y);\n      ctx.stroke();\n      ctx.restore();\n    };\n    if (grid.display) {\n      for (i = 0, ilen = items.length; i < ilen; ++i) {\n        const item = items[i];\n        if (grid.drawOnChartArea) {\n          drawLine(\n            {x: item.x1, y: item.y1},\n            {x: item.x2, y: item.y2},\n            item\n          );\n        }\n        if (grid.drawTicks) {\n          drawLine(\n            {x: item.tx1, y: item.ty1},\n            {x: item.tx2, y: item.ty2},\n            {\n              color: item.tickColor,\n              width: item.tickWidth,\n              borderDash: item.tickBorderDash,\n              borderDashOffset: item.tickBorderDashOffset\n            }\n          );\n        }\n      }\n    }\n  }\n  drawBorder() {\n    const {chart, ctx, options: {grid}} = this;\n    const borderOpts = grid.setContext(this.getContext());\n    const axisWidth = grid.drawBorder ? borderOpts.borderWidth : 0;\n    if (!axisWidth) {\n      return;\n    }\n    const lastLineWidth = grid.setContext(this.getContext(0)).lineWidth;\n    const borderValue = this._borderValue;\n    let x1, x2, y1, y2;\n    if (this.isHorizontal()) {\n      x1 = _alignPixel(chart, this.left, axisWidth) - axisWidth / 2;\n      x2 = _alignPixel(chart, this.right, lastLineWidth) + lastLineWidth / 2;\n      y1 = y2 = borderValue;\n    } else {\n      y1 = _alignPixel(chart, this.top, axisWidth) - axisWidth / 2;\n      y2 = _alignPixel(chart, this.bottom, lastLineWidth) + lastLineWidth / 2;\n      x1 = x2 = borderValue;\n    }\n    ctx.save();\n    ctx.lineWidth = borderOpts.borderWidth;\n    ctx.strokeStyle = borderOpts.borderColor;\n    ctx.beginPath();\n    ctx.moveTo(x1, y1);\n    ctx.lineTo(x2, y2);\n    ctx.stroke();\n    ctx.restore();\n  }\n  drawLabels(chartArea) {\n    const optionTicks = this.options.ticks;\n    if (!optionTicks.display) {\n      return;\n    }\n    const ctx = this.ctx;\n    const area = this._computeLabelArea();\n    if (area) {\n      clipArea(ctx, area);\n    }\n    const items = this._labelItems || (this._labelItems = this._computeLabelItems(chartArea));\n    let i, ilen;\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      const item = items[i];\n      const tickFont = item.font;\n      const label = item.label;\n      if (item.backdrop) {\n        ctx.fillStyle = item.backdrop.color;\n        ctx.fillRect(item.backdrop.left, item.backdrop.top, item.backdrop.width, item.backdrop.height);\n      }\n      let y = item.textOffset;\n      renderText(ctx, label, 0, y, tickFont, item);\n    }\n    if (area) {\n      unclipArea(ctx);\n    }\n  }\n  drawTitle() {\n    const {ctx, options: {position, title, reverse}} = this;\n    if (!title.display) {\n      return;\n    }\n    const font = toFont(title.font);\n    const padding = toPadding(title.padding);\n    const align = title.align;\n    let offset = font.lineHeight / 2;\n    if (position === 'bottom' || position === 'center' || isObject(position)) {\n      offset += padding.bottom;\n      if (isArray(title.text)) {\n        offset += font.lineHeight * (title.text.length - 1);\n      }\n    } else {\n      offset += padding.top;\n    }\n    const {titleX, titleY, maxWidth, rotation} = titleArgs(this, offset, position, align);\n    renderText(ctx, title.text, 0, 0, font, {\n      color: title.color,\n      maxWidth,\n      rotation,\n      textAlign: titleAlign(align, position, reverse),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n  draw(chartArea) {\n    if (!this._isVisible()) {\n      return;\n    }\n    this.drawBackground();\n    this.drawGrid(chartArea);\n    this.drawBorder();\n    this.drawTitle();\n    this.drawLabels(chartArea);\n  }\n  _layers() {\n    const opts = this.options;\n    const tz = opts.ticks && opts.ticks.z || 0;\n    const gz = valueOrDefault(opts.grid && opts.grid.z, -1);\n    if (!this._isVisible() || this.draw !== Scale.prototype.draw) {\n      return [{\n        z: tz,\n        draw: (chartArea) => {\n          this.draw(chartArea);\n        }\n      }];\n    }\n    return [{\n      z: gz,\n      draw: (chartArea) => {\n        this.drawBackground();\n        this.drawGrid(chartArea);\n        this.drawTitle();\n      }\n    }, {\n      z: gz + 1,\n      draw: () => {\n        this.drawBorder();\n      }\n    }, {\n      z: tz,\n      draw: (chartArea) => {\n        this.drawLabels(chartArea);\n      }\n    }];\n  }\n  getMatchingVisibleMetas(type) {\n    const metas = this.chart.getSortedVisibleDatasetMetas();\n    const axisID = this.axis + 'AxisID';\n    const result = [];\n    let i, ilen;\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      const meta = metas[i];\n      if (meta[axisID] === this.id && (!type || meta.type === type)) {\n        result.push(meta);\n      }\n    }\n    return result;\n  }\n  _resolveTickFontOptions(index) {\n    const opts = this.options.ticks.setContext(this.getContext(index));\n    return toFont(opts.font);\n  }\n  _maxDigits() {\n    const fontSize = this._resolveTickFontOptions(0).lineHeight;\n    return (this.isHorizontal() ? this.width : this.height) / fontSize;\n  }\n}\n\nclass TypedRegistry {\n  constructor(type, scope, override) {\n    this.type = type;\n    this.scope = scope;\n    this.override = override;\n    this.items = Object.create(null);\n  }\n  isForType(type) {\n    return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n  }\n  register(item) {\n    const proto = Object.getPrototypeOf(item);\n    let parentScope;\n    if (isIChartComponent(proto)) {\n      parentScope = this.register(proto);\n    }\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope + '.' + id;\n    if (!id) {\n      throw new Error('class does not have id: ' + item);\n    }\n    if (id in items) {\n      return scope;\n    }\n    items[id] = item;\n    registerDefaults(item, scope, parentScope);\n    if (this.override) {\n      defaults.override(item.id, item.overrides);\n    }\n    return scope;\n  }\n  get(id) {\n    return this.items[id];\n  }\n  unregister(item) {\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope;\n    if (id in items) {\n      delete items[id];\n    }\n    if (scope && id in defaults[scope]) {\n      delete defaults[scope][id];\n      if (this.override) {\n        delete overrides[id];\n      }\n    }\n  }\n}\nfunction registerDefaults(item, scope, parentScope) {\n  const itemDefaults = merge(Object.create(null), [\n    parentScope ? defaults.get(parentScope) : {},\n    defaults.get(scope),\n    item.defaults\n  ]);\n  defaults.set(scope, itemDefaults);\n  if (item.defaultRoutes) {\n    routeDefaults(scope, item.defaultRoutes);\n  }\n  if (item.descriptors) {\n    defaults.describe(scope, item.descriptors);\n  }\n}\nfunction routeDefaults(scope, routes) {\n  Object.keys(routes).forEach(property => {\n    const propertyParts = property.split('.');\n    const sourceName = propertyParts.pop();\n    const sourceScope = [scope].concat(propertyParts).join('.');\n    const parts = routes[property].split('.');\n    const targetName = parts.pop();\n    const targetScope = parts.join('.');\n    defaults.route(sourceScope, sourceName, targetScope, targetName);\n  });\n}\nfunction isIChartComponent(proto) {\n  return 'id' in proto && 'defaults' in proto;\n}\n\nclass Registry {\n  constructor() {\n    this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n    this.elements = new TypedRegistry(Element, 'elements');\n    this.plugins = new TypedRegistry(Object, 'plugins');\n    this.scales = new TypedRegistry(Scale, 'scales');\n    this._typedRegistries = [this.controllers, this.scales, this.elements];\n  }\n  add(...args) {\n    this._each('register', args);\n  }\n  remove(...args) {\n    this._each('unregister', args);\n  }\n  addControllers(...args) {\n    this._each('register', args, this.controllers);\n  }\n  addElements(...args) {\n    this._each('register', args, this.elements);\n  }\n  addPlugins(...args) {\n    this._each('register', args, this.plugins);\n  }\n  addScales(...args) {\n    this._each('register', args, this.scales);\n  }\n  getController(id) {\n    return this._get(id, this.controllers, 'controller');\n  }\n  getElement(id) {\n    return this._get(id, this.elements, 'element');\n  }\n  getPlugin(id) {\n    return this._get(id, this.plugins, 'plugin');\n  }\n  getScale(id) {\n    return this._get(id, this.scales, 'scale');\n  }\n  removeControllers(...args) {\n    this._each('unregister', args, this.controllers);\n  }\n  removeElements(...args) {\n    this._each('unregister', args, this.elements);\n  }\n  removePlugins(...args) {\n    this._each('unregister', args, this.plugins);\n  }\n  removeScales(...args) {\n    this._each('unregister', args, this.scales);\n  }\n  _each(method, args, typedRegistry) {\n    [...args].forEach(arg => {\n      const reg = typedRegistry || this._getRegistryForType(arg);\n      if (typedRegistry || reg.isForType(arg) || (reg === this.plugins && arg.id)) {\n        this._exec(method, reg, arg);\n      } else {\n        each(arg, item => {\n          const itemReg = typedRegistry || this._getRegistryForType(item);\n          this._exec(method, itemReg, item);\n        });\n      }\n    });\n  }\n  _exec(method, registry, component) {\n    const camelMethod = _capitalize(method);\n    callback(component['before' + camelMethod], [], component);\n    registry[method](component);\n    callback(component['after' + camelMethod], [], component);\n  }\n  _getRegistryForType(type) {\n    for (let i = 0; i < this._typedRegistries.length; i++) {\n      const reg = this._typedRegistries[i];\n      if (reg.isForType(type)) {\n        return reg;\n      }\n    }\n    return this.plugins;\n  }\n  _get(id, typedRegistry, type) {\n    const item = typedRegistry.get(id);\n    if (item === undefined) {\n      throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n    }\n    return item;\n  }\n}\nvar registry = new Registry();\n\nclass PluginService {\n  constructor() {\n    this._init = [];\n  }\n  notify(chart, hook, args, filter) {\n    if (hook === 'beforeInit') {\n      this._init = this._createDescriptors(chart, true);\n      this._notify(this._init, chart, 'install');\n    }\n    const descriptors = filter ? this._descriptors(chart).filter(filter) : this._descriptors(chart);\n    const result = this._notify(descriptors, chart, hook, args);\n    if (hook === 'afterDestroy') {\n      this._notify(descriptors, chart, 'stop');\n      this._notify(this._init, chart, 'uninstall');\n    }\n    return result;\n  }\n  _notify(descriptors, chart, hook, args) {\n    args = args || {};\n    for (const descriptor of descriptors) {\n      const plugin = descriptor.plugin;\n      const method = plugin[hook];\n      const params = [chart, args, descriptor.options];\n      if (callback(method, params, plugin) === false && args.cancelable) {\n        return false;\n      }\n    }\n    return true;\n  }\n  invalidate() {\n    if (!isNullOrUndef(this._cache)) {\n      this._oldCache = this._cache;\n      this._cache = undefined;\n    }\n  }\n  _descriptors(chart) {\n    if (this._cache) {\n      return this._cache;\n    }\n    const descriptors = this._cache = this._createDescriptors(chart);\n    this._notifyStateChanges(chart);\n    return descriptors;\n  }\n  _createDescriptors(chart, all) {\n    const config = chart && chart.config;\n    const options = valueOrDefault(config.options && config.options.plugins, {});\n    const plugins = allPlugins(config);\n    return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n  }\n  _notifyStateChanges(chart) {\n    const previousDescriptors = this._oldCache || [];\n    const descriptors = this._cache;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.plugin.id === y.plugin.id));\n    this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n    this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n  }\n}\nfunction allPlugins(config) {\n  const plugins = [];\n  const keys = Object.keys(registry.plugins.items);\n  for (let i = 0; i < keys.length; i++) {\n    plugins.push(registry.getPlugin(keys[i]));\n  }\n  const local = config.plugins || [];\n  for (let i = 0; i < local.length; i++) {\n    const plugin = local[i];\n    if (plugins.indexOf(plugin) === -1) {\n      plugins.push(plugin);\n    }\n  }\n  return plugins;\n}\nfunction getOpts(options, all) {\n  if (!all && options === false) {\n    return null;\n  }\n  if (options === true) {\n    return {};\n  }\n  return options;\n}\nfunction createDescriptors(chart, plugins, options, all) {\n  const result = [];\n  const context = chart.getContext();\n  for (let i = 0; i < plugins.length; i++) {\n    const plugin = plugins[i];\n    const id = plugin.id;\n    const opts = getOpts(options[id], all);\n    if (opts === null) {\n      continue;\n    }\n    result.push({\n      plugin,\n      options: pluginOpts(chart.config, plugin, opts, context)\n    });\n  }\n  return result;\n}\nfunction pluginOpts(config, plugin, opts, context) {\n  const keys = config.pluginScopeKeys(plugin);\n  const scopes = config.getOptionScopes(opts, keys);\n  return config.createResolver(scopes, context, [''], {scriptable: false, indexable: false, allKeys: true});\n}\n\nfunction getIndexAxis(type, options) {\n  const datasetDefaults = defaults.datasets[type] || {};\n  const datasetOptions = (options.datasets || {})[type] || {};\n  return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n  let axis = id;\n  if (id === '_index_') {\n    axis = indexAxis;\n  } else if (id === '_value_') {\n    axis = indexAxis === 'x' ? 'y' : 'x';\n  }\n  return axis;\n}\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n  return axis === indexAxis ? '_index_' : '_value_';\n}\nfunction axisFromPosition(position) {\n  if (position === 'top' || position === 'bottom') {\n    return 'x';\n  }\n  if (position === 'left' || position === 'right') {\n    return 'y';\n  }\n}\nfunction determineAxis(id, scaleOptions) {\n  if (id === 'x' || id === 'y') {\n    return id;\n  }\n  return scaleOptions.axis || axisFromPosition(scaleOptions.position) || id.charAt(0).toLowerCase();\n}\nfunction mergeScaleConfig(config, options) {\n  const chartDefaults = overrides[config.type] || {scales: {}};\n  const configScales = options.scales || {};\n  const chartIndexAxis = getIndexAxis(config.type, options);\n  const firstIDs = Object.create(null);\n  const scales = Object.create(null);\n  Object.keys(configScales).forEach(id => {\n    const scaleConf = configScales[id];\n    if (!isObject(scaleConf)) {\n      return console.error(`Invalid scale configuration for scale: ${id}`);\n    }\n    if (scaleConf._proxy) {\n      return console.warn(`Ignoring resolver passed as options for scale: ${id}`);\n    }\n    const axis = determineAxis(id, scaleConf);\n    const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n    const defaultScaleOptions = chartDefaults.scales || {};\n    firstIDs[axis] = firstIDs[axis] || id;\n    scales[id] = mergeIf(Object.create(null), [{axis}, scaleConf, defaultScaleOptions[axis], defaultScaleOptions[defaultId]]);\n  });\n  config.data.datasets.forEach(dataset => {\n    const type = dataset.type || config.type;\n    const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n    const datasetDefaults = overrides[type] || {};\n    const defaultScaleOptions = datasetDefaults.scales || {};\n    Object.keys(defaultScaleOptions).forEach(defaultID => {\n      const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n      const id = dataset[axis + 'AxisID'] || firstIDs[axis] || axis;\n      scales[id] = scales[id] || Object.create(null);\n      mergeIf(scales[id], [{axis}, configScales[id], defaultScaleOptions[defaultID]]);\n    });\n  });\n  Object.keys(scales).forEach(key => {\n    const scale = scales[key];\n    mergeIf(scale, [defaults.scales[scale.type], defaults.scale]);\n  });\n  return scales;\n}\nfunction initOptions(config) {\n  const options = config.options || (config.options = {});\n  options.plugins = valueOrDefault(options.plugins, {});\n  options.scales = mergeScaleConfig(config, options);\n}\nfunction initData(data) {\n  data = data || {};\n  data.datasets = data.datasets || [];\n  data.labels = data.labels || [];\n  return data;\n}\nfunction initConfig(config) {\n  config = config || {};\n  config.data = initData(config.data);\n  initOptions(config);\n  return config;\n}\nconst keyCache = new Map();\nconst keysCached = new Set();\nfunction cachedKeys(cacheKey, generate) {\n  let keys = keyCache.get(cacheKey);\n  if (!keys) {\n    keys = generate();\n    keyCache.set(cacheKey, keys);\n    keysCached.add(keys);\n  }\n  return keys;\n}\nconst addIfFound = (set, obj, key) => {\n  const opts = resolveObjectKey(obj, key);\n  if (opts !== undefined) {\n    set.add(opts);\n  }\n};\nclass Config {\n  constructor(config) {\n    this._config = initConfig(config);\n    this._scopeCache = new Map();\n    this._resolverCache = new Map();\n  }\n  get platform() {\n    return this._config.platform;\n  }\n  get type() {\n    return this._config.type;\n  }\n  set type(type) {\n    this._config.type = type;\n  }\n  get data() {\n    return this._config.data;\n  }\n  set data(data) {\n    this._config.data = initData(data);\n  }\n  get options() {\n    return this._config.options;\n  }\n  set options(options) {\n    this._config.options = options;\n  }\n  get plugins() {\n    return this._config.plugins;\n  }\n  update() {\n    const config = this._config;\n    this.clearCache();\n    initOptions(config);\n  }\n  clearCache() {\n    this._scopeCache.clear();\n    this._resolverCache.clear();\n  }\n  datasetScopeKeys(datasetType) {\n    return cachedKeys(datasetType,\n      () => [[\n        `datasets.${datasetType}`,\n        ''\n      ]]);\n  }\n  datasetAnimationScopeKeys(datasetType, transition) {\n    return cachedKeys(`${datasetType}.transition.${transition}`,\n      () => [\n        [\n          `datasets.${datasetType}.transitions.${transition}`,\n          `transitions.${transition}`,\n        ],\n        [\n          `datasets.${datasetType}`,\n          ''\n        ]\n      ]);\n  }\n  datasetElementScopeKeys(datasetType, elementType) {\n    return cachedKeys(`${datasetType}-${elementType}`,\n      () => [[\n        `datasets.${datasetType}.elements.${elementType}`,\n        `datasets.${datasetType}`,\n        `elements.${elementType}`,\n        ''\n      ]]);\n  }\n  pluginScopeKeys(plugin) {\n    const id = plugin.id;\n    const type = this.type;\n    return cachedKeys(`${type}-plugin-${id}`,\n      () => [[\n        `plugins.${id}`,\n        ...plugin.additionalOptionScopes || [],\n      ]]);\n  }\n  _cachedScopes(mainScope, resetCache) {\n    const _scopeCache = this._scopeCache;\n    let cache = _scopeCache.get(mainScope);\n    if (!cache || resetCache) {\n      cache = new Map();\n      _scopeCache.set(mainScope, cache);\n    }\n    return cache;\n  }\n  getOptionScopes(mainScope, keyLists, resetCache) {\n    const {options, type} = this;\n    const cache = this._cachedScopes(mainScope, resetCache);\n    const cached = cache.get(keyLists);\n    if (cached) {\n      return cached;\n    }\n    const scopes = new Set();\n    keyLists.forEach(keys => {\n      if (mainScope) {\n        scopes.add(mainScope);\n        keys.forEach(key => addIfFound(scopes, mainScope, key));\n      }\n      keys.forEach(key => addIfFound(scopes, options, key));\n      keys.forEach(key => addIfFound(scopes, overrides[type] || {}, key));\n      keys.forEach(key => addIfFound(scopes, defaults, key));\n      keys.forEach(key => addIfFound(scopes, descriptors, key));\n    });\n    const array = Array.from(scopes);\n    if (array.length === 0) {\n      array.push(Object.create(null));\n    }\n    if (keysCached.has(keyLists)) {\n      cache.set(keyLists, array);\n    }\n    return array;\n  }\n  chartOptionScopes() {\n    const {options, type} = this;\n    return [\n      options,\n      overrides[type] || {},\n      defaults.datasets[type] || {},\n      {type},\n      defaults,\n      descriptors\n    ];\n  }\n  resolveNamedOptions(scopes, names, context, prefixes = ['']) {\n    const result = {$shared: true};\n    const {resolver, subPrefixes} = getResolver(this._resolverCache, scopes, prefixes);\n    let options = resolver;\n    if (needContext(resolver, names)) {\n      result.$shared = false;\n      context = isFunction(context) ? context() : context;\n      const subResolver = this.createResolver(scopes, context, subPrefixes);\n      options = _attachContext(resolver, context, subResolver);\n    }\n    for (const prop of names) {\n      result[prop] = options[prop];\n    }\n    return result;\n  }\n  createResolver(scopes, context, prefixes = [''], descriptorDefaults) {\n    const {resolver} = getResolver(this._resolverCache, scopes, prefixes);\n    return isObject(context)\n      ? _attachContext(resolver, context, undefined, descriptorDefaults)\n      : resolver;\n  }\n}\nfunction getResolver(resolverCache, scopes, prefixes) {\n  let cache = resolverCache.get(scopes);\n  if (!cache) {\n    cache = new Map();\n    resolverCache.set(scopes, cache);\n  }\n  const cacheKey = prefixes.join();\n  let cached = cache.get(cacheKey);\n  if (!cached) {\n    const resolver = _createResolver(scopes, prefixes);\n    cached = {\n      resolver,\n      subPrefixes: prefixes.filter(p => !p.toLowerCase().includes('hover'))\n    };\n    cache.set(cacheKey, cached);\n  }\n  return cached;\n}\nconst hasFunction = value => isObject(value)\n  && Object.getOwnPropertyNames(value).reduce((acc, key) => acc || isFunction(value[key]), false);\nfunction needContext(proxy, names) {\n  const {isScriptable, isIndexable} = _descriptors(proxy);\n  for (const prop of names) {\n    const scriptable = isScriptable(prop);\n    const indexable = isIndexable(prop);\n    const value = (indexable || scriptable) && proxy[prop];\n    if ((scriptable && (isFunction(value) || hasFunction(value)))\n      || (indexable && isArray(value))) {\n      return true;\n    }\n  }\n  return false;\n}\n\nvar version = \"3.7.1\";\n\nconst KNOWN_POSITIONS = ['top', 'bottom', 'left', 'right', 'chartArea'];\nfunction positionIsHorizontal(position, axis) {\n  return position === 'top' || position === 'bottom' || (KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x');\n}\nfunction compare2Level(l1, l2) {\n  return function(a, b) {\n    return a[l1] === b[l1]\n      ? a[l2] - b[l2]\n      : a[l1] - b[l1];\n  };\n}\nfunction onAnimationsComplete(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  chart.notifyPlugins('afterRender');\n  callback(animationOptions && animationOptions.onComplete, [context], chart);\n}\nfunction onAnimationProgress(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  callback(animationOptions && animationOptions.onProgress, [context], chart);\n}\nfunction getCanvas(item) {\n  if (_isDomSupported() && typeof item === 'string') {\n    item = document.getElementById(item);\n  } else if (item && item.length) {\n    item = item[0];\n  }\n  if (item && item.canvas) {\n    item = item.canvas;\n  }\n  return item;\n}\nconst instances = {};\nconst getChart = (key) => {\n  const canvas = getCanvas(key);\n  return Object.values(instances).filter((c) => c.canvas === canvas).pop();\n};\nfunction moveNumericKeys(obj, start, move) {\n  const keys = Object.keys(obj);\n  for (const key of keys) {\n    const intKey = +key;\n    if (intKey >= start) {\n      const value = obj[key];\n      delete obj[key];\n      if (move > 0 || intKey > start) {\n        obj[intKey + move] = value;\n      }\n    }\n  }\n}\nfunction determineLastEvent(e, lastEvent, inChartArea, isClick) {\n  if (!inChartArea || e.type === 'mouseout') {\n    return null;\n  }\n  if (isClick) {\n    return lastEvent;\n  }\n  return e;\n}\nclass Chart {\n  constructor(item, userConfig) {\n    const config = this.config = new Config(userConfig);\n    const initialCanvas = getCanvas(item);\n    const existingChart = getChart(initialCanvas);\n    if (existingChart) {\n      throw new Error(\n        'Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' +\n\t\t\t\t' must be destroyed before the canvas can be reused.'\n      );\n    }\n    const options = config.createResolver(config.chartOptionScopes(), this.getContext());\n    this.platform = new (config.platform || _detectPlatform(initialCanvas))();\n    this.platform.updateConfig(config);\n    const context = this.platform.acquireContext(initialCanvas, options.aspectRatio);\n    const canvas = context && context.canvas;\n    const height = canvas && canvas.height;\n    const width = canvas && canvas.width;\n    this.id = uid();\n    this.ctx = context;\n    this.canvas = canvas;\n    this.width = width;\n    this.height = height;\n    this._options = options;\n    this._aspectRatio = this.aspectRatio;\n    this._layers = [];\n    this._metasets = [];\n    this._stacks = undefined;\n    this.boxes = [];\n    this.currentDevicePixelRatio = undefined;\n    this.chartArea = undefined;\n    this._active = [];\n    this._lastEvent = undefined;\n    this._listeners = {};\n    this._responsiveListeners = undefined;\n    this._sortedMetasets = [];\n    this.scales = {};\n    this._plugins = new PluginService();\n    this.$proxies = {};\n    this._hiddenIndices = {};\n    this.attached = false;\n    this._animationsDisabled = undefined;\n    this.$context = undefined;\n    this._doResize = debounce(mode => this.update(mode), options.resizeDelay || 0);\n    this._dataChanges = [];\n    instances[this.id] = this;\n    if (!context || !canvas) {\n      console.error(\"Failed to create chart: can't acquire context from the given item\");\n      return;\n    }\n    animator.listen(this, 'complete', onAnimationsComplete);\n    animator.listen(this, 'progress', onAnimationProgress);\n    this._initialize();\n    if (this.attached) {\n      this.update();\n    }\n  }\n  get aspectRatio() {\n    const {options: {aspectRatio, maintainAspectRatio}, width, height, _aspectRatio} = this;\n    if (!isNullOrUndef(aspectRatio)) {\n      return aspectRatio;\n    }\n    if (maintainAspectRatio && _aspectRatio) {\n      return _aspectRatio;\n    }\n    return height ? width / height : null;\n  }\n  get data() {\n    return this.config.data;\n  }\n  set data(data) {\n    this.config.data = data;\n  }\n  get options() {\n    return this._options;\n  }\n  set options(options) {\n    this.config.options = options;\n  }\n  _initialize() {\n    this.notifyPlugins('beforeInit');\n    if (this.options.responsive) {\n      this.resize();\n    } else {\n      retinaScale(this, this.options.devicePixelRatio);\n    }\n    this.bindEvents();\n    this.notifyPlugins('afterInit');\n    return this;\n  }\n  clear() {\n    clearCanvas(this.canvas, this.ctx);\n    return this;\n  }\n  stop() {\n    animator.stop(this);\n    return this;\n  }\n  resize(width, height) {\n    if (!animator.running(this)) {\n      this._resize(width, height);\n    } else {\n      this._resizeBeforeDraw = {width, height};\n    }\n  }\n  _resize(width, height) {\n    const options = this.options;\n    const canvas = this.canvas;\n    const aspectRatio = options.maintainAspectRatio && this.aspectRatio;\n    const newSize = this.platform.getMaximumSize(canvas, width, height, aspectRatio);\n    const newRatio = options.devicePixelRatio || this.platform.getDevicePixelRatio();\n    const mode = this.width ? 'resize' : 'attach';\n    this.width = newSize.width;\n    this.height = newSize.height;\n    this._aspectRatio = this.aspectRatio;\n    if (!retinaScale(this, newRatio, true)) {\n      return;\n    }\n    this.notifyPlugins('resize', {size: newSize});\n    callback(options.onResize, [this, newSize], this);\n    if (this.attached) {\n      if (this._doResize(mode)) {\n        this.render();\n      }\n    }\n  }\n  ensureScalesHaveIDs() {\n    const options = this.options;\n    const scalesOptions = options.scales || {};\n    each(scalesOptions, (axisOptions, axisID) => {\n      axisOptions.id = axisID;\n    });\n  }\n  buildOrUpdateScales() {\n    const options = this.options;\n    const scaleOpts = options.scales;\n    const scales = this.scales;\n    const updated = Object.keys(scales).reduce((obj, id) => {\n      obj[id] = false;\n      return obj;\n    }, {});\n    let items = [];\n    if (scaleOpts) {\n      items = items.concat(\n        Object.keys(scaleOpts).map((id) => {\n          const scaleOptions = scaleOpts[id];\n          const axis = determineAxis(id, scaleOptions);\n          const isRadial = axis === 'r';\n          const isHorizontal = axis === 'x';\n          return {\n            options: scaleOptions,\n            dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n            dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n          };\n        })\n      );\n    }\n    each(items, (item) => {\n      const scaleOptions = item.options;\n      const id = scaleOptions.id;\n      const axis = determineAxis(id, scaleOptions);\n      const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n      if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n        scaleOptions.position = item.dposition;\n      }\n      updated[id] = true;\n      let scale = null;\n      if (id in scales && scales[id].type === scaleType) {\n        scale = scales[id];\n      } else {\n        const scaleClass = registry.getScale(scaleType);\n        scale = new scaleClass({\n          id,\n          type: scaleType,\n          ctx: this.ctx,\n          chart: this\n        });\n        scales[scale.id] = scale;\n      }\n      scale.init(scaleOptions, options);\n    });\n    each(updated, (hasUpdated, id) => {\n      if (!hasUpdated) {\n        delete scales[id];\n      }\n    });\n    each(scales, (scale) => {\n      layouts.configure(this, scale, scale.options);\n      layouts.addBox(this, scale);\n    });\n  }\n  _updateMetasets() {\n    const metasets = this._metasets;\n    const numData = this.data.datasets.length;\n    const numMeta = metasets.length;\n    metasets.sort((a, b) => a.index - b.index);\n    if (numMeta > numData) {\n      for (let i = numData; i < numMeta; ++i) {\n        this._destroyDatasetMeta(i);\n      }\n      metasets.splice(numData, numMeta - numData);\n    }\n    this._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n  }\n  _removeUnreferencedMetasets() {\n    const {_metasets: metasets, data: {datasets}} = this;\n    if (metasets.length > datasets.length) {\n      delete this._stacks;\n    }\n    metasets.forEach((meta, index) => {\n      if (datasets.filter(x => x === meta._dataset).length === 0) {\n        this._destroyDatasetMeta(index);\n      }\n    });\n  }\n  buildOrUpdateControllers() {\n    const newControllers = [];\n    const datasets = this.data.datasets;\n    let i, ilen;\n    this._removeUnreferencedMetasets();\n    for (i = 0, ilen = datasets.length; i < ilen; i++) {\n      const dataset = datasets[i];\n      let meta = this.getDatasetMeta(i);\n      const type = dataset.type || this.config.type;\n      if (meta.type && meta.type !== type) {\n        this._destroyDatasetMeta(i);\n        meta = this.getDatasetMeta(i);\n      }\n      meta.type = type;\n      meta.indexAxis = dataset.indexAxis || getIndexAxis(type, this.options);\n      meta.order = dataset.order || 0;\n      meta.index = i;\n      meta.label = '' + dataset.label;\n      meta.visible = this.isDatasetVisible(i);\n      if (meta.controller) {\n        meta.controller.updateIndex(i);\n        meta.controller.linkScales();\n      } else {\n        const ControllerClass = registry.getController(type);\n        const {datasetElementType, dataElementType} = defaults.datasets[type];\n        Object.assign(ControllerClass.prototype, {\n          dataElementType: registry.getElement(dataElementType),\n          datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n        });\n        meta.controller = new ControllerClass(this, i);\n        newControllers.push(meta.controller);\n      }\n    }\n    this._updateMetasets();\n    return newControllers;\n  }\n  _resetElements() {\n    each(this.data.datasets, (dataset, datasetIndex) => {\n      this.getDatasetMeta(datasetIndex).controller.reset();\n    }, this);\n  }\n  reset() {\n    this._resetElements();\n    this.notifyPlugins('reset');\n  }\n  update(mode) {\n    const config = this.config;\n    config.update();\n    const options = this._options = config.createResolver(config.chartOptionScopes(), this.getContext());\n    const animsDisabled = this._animationsDisabled = !options.animation;\n    this._updateScales();\n    this._checkEventBindings();\n    this._updateHiddenIndices();\n    this._plugins.invalidate();\n    if (this.notifyPlugins('beforeUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n    const newControllers = this.buildOrUpdateControllers();\n    this.notifyPlugins('beforeElementsUpdate');\n    let minPadding = 0;\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; i++) {\n      const {controller} = this.getDatasetMeta(i);\n      const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n      controller.buildOrUpdateElements(reset);\n      minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n    }\n    minPadding = this._minPadding = options.layout.autoPadding ? minPadding : 0;\n    this._updateLayout(minPadding);\n    if (!animsDisabled) {\n      each(newControllers, (controller) => {\n        controller.reset();\n      });\n    }\n    this._updateDatasets(mode);\n    this.notifyPlugins('afterUpdate', {mode});\n    this._layers.sort(compare2Level('z', '_idx'));\n    const {_active, _lastEvent} = this;\n    if (_lastEvent) {\n      this._eventHandler(_lastEvent, true);\n    } else if (_active.length) {\n      this._updateHoverStyles(_active, _active, true);\n    }\n    this.render();\n  }\n  _updateScales() {\n    each(this.scales, (scale) => {\n      layouts.removeBox(this, scale);\n    });\n    this.ensureScalesHaveIDs();\n    this.buildOrUpdateScales();\n  }\n  _checkEventBindings() {\n    const options = this.options;\n    const existingEvents = new Set(Object.keys(this._listeners));\n    const newEvents = new Set(options.events);\n    if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== options.responsive) {\n      this.unbindEvents();\n      this.bindEvents();\n    }\n  }\n  _updateHiddenIndices() {\n    const {_hiddenIndices} = this;\n    const changes = this._getUniformDataChanges() || [];\n    for (const {method, start, count} of changes) {\n      const move = method === '_removeElements' ? -count : count;\n      moveNumericKeys(_hiddenIndices, start, move);\n    }\n  }\n  _getUniformDataChanges() {\n    const _dataChanges = this._dataChanges;\n    if (!_dataChanges || !_dataChanges.length) {\n      return;\n    }\n    this._dataChanges = [];\n    const datasetCount = this.data.datasets.length;\n    const makeSet = (idx) => new Set(\n      _dataChanges\n        .filter(c => c[0] === idx)\n        .map((c, i) => i + ',' + c.splice(1).join(','))\n    );\n    const changeSet = makeSet(0);\n    for (let i = 1; i < datasetCount; i++) {\n      if (!setsEqual(changeSet, makeSet(i))) {\n        return;\n      }\n    }\n    return Array.from(changeSet)\n      .map(c => c.split(','))\n      .map(a => ({method: a[1], start: +a[2], count: +a[3]}));\n  }\n  _updateLayout(minPadding) {\n    if (this.notifyPlugins('beforeLayout', {cancelable: true}) === false) {\n      return;\n    }\n    layouts.update(this, this.width, this.height, minPadding);\n    const area = this.chartArea;\n    const noArea = area.width <= 0 || area.height <= 0;\n    this._layers = [];\n    each(this.boxes, (box) => {\n      if (noArea && box.position === 'chartArea') {\n        return;\n      }\n      if (box.configure) {\n        box.configure();\n      }\n      this._layers.push(...box._layers());\n    }, this);\n    this._layers.forEach((item, index) => {\n      item._idx = index;\n    });\n    this.notifyPlugins('afterLayout');\n  }\n  _updateDatasets(mode) {\n    if (this.notifyPlugins('beforeDatasetsUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this.getDatasetMeta(i).controller.configure();\n    }\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._updateDataset(i, isFunction(mode) ? mode({datasetIndex: i}) : mode);\n    }\n    this.notifyPlugins('afterDatasetsUpdate', {mode});\n  }\n  _updateDataset(index, mode) {\n    const meta = this.getDatasetMeta(index);\n    const args = {meta, index, mode, cancelable: true};\n    if (this.notifyPlugins('beforeDatasetUpdate', args) === false) {\n      return;\n    }\n    meta.controller._update(mode);\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetUpdate', args);\n  }\n  render() {\n    if (this.notifyPlugins('beforeRender', {cancelable: true}) === false) {\n      return;\n    }\n    if (animator.has(this)) {\n      if (this.attached && !animator.running(this)) {\n        animator.start(this);\n      }\n    } else {\n      this.draw();\n      onAnimationsComplete({chart: this});\n    }\n  }\n  draw() {\n    let i;\n    if (this._resizeBeforeDraw) {\n      const {width, height} = this._resizeBeforeDraw;\n      this._resize(width, height);\n      this._resizeBeforeDraw = null;\n    }\n    this.clear();\n    if (this.width <= 0 || this.height <= 0) {\n      return;\n    }\n    if (this.notifyPlugins('beforeDraw', {cancelable: true}) === false) {\n      return;\n    }\n    const layers = this._layers;\n    for (i = 0; i < layers.length && layers[i].z <= 0; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n    this._drawDatasets();\n    for (; i < layers.length; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n    this.notifyPlugins('afterDraw');\n  }\n  _getSortedDatasetMetas(filterVisible) {\n    const metasets = this._sortedMetasets;\n    const result = [];\n    let i, ilen;\n    for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n      const meta = metasets[i];\n      if (!filterVisible || meta.visible) {\n        result.push(meta);\n      }\n    }\n    return result;\n  }\n  getSortedVisibleDatasetMetas() {\n    return this._getSortedDatasetMetas(true);\n  }\n  _drawDatasets() {\n    if (this.notifyPlugins('beforeDatasetsDraw', {cancelable: true}) === false) {\n      return;\n    }\n    const metasets = this.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      this._drawDataset(metasets[i]);\n    }\n    this.notifyPlugins('afterDatasetsDraw');\n  }\n  _drawDataset(meta) {\n    const ctx = this.ctx;\n    const clip = meta._clip;\n    const useClip = !clip.disabled;\n    const area = this.chartArea;\n    const args = {\n      meta,\n      index: meta.index,\n      cancelable: true\n    };\n    if (this.notifyPlugins('beforeDatasetDraw', args) === false) {\n      return;\n    }\n    if (useClip) {\n      clipArea(ctx, {\n        left: clip.left === false ? 0 : area.left - clip.left,\n        right: clip.right === false ? this.width : area.right + clip.right,\n        top: clip.top === false ? 0 : area.top - clip.top,\n        bottom: clip.bottom === false ? this.height : area.bottom + clip.bottom\n      });\n    }\n    meta.controller.draw();\n    if (useClip) {\n      unclipArea(ctx);\n    }\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetDraw', args);\n  }\n  getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n    const method = Interaction.modes[mode];\n    if (typeof method === 'function') {\n      return method(this, e, options, useFinalPosition);\n    }\n    return [];\n  }\n  getDatasetMeta(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    const metasets = this._metasets;\n    let meta = metasets.filter(x => x && x._dataset === dataset).pop();\n    if (!meta) {\n      meta = {\n        type: null,\n        data: [],\n        dataset: null,\n        controller: null,\n        hidden: null,\n        xAxisID: null,\n        yAxisID: null,\n        order: dataset && dataset.order || 0,\n        index: datasetIndex,\n        _dataset: dataset,\n        _parsed: [],\n        _sorted: false\n      };\n      metasets.push(meta);\n    }\n    return meta;\n  }\n  getContext() {\n    return this.$context || (this.$context = createContext(null, {chart: this, type: 'chart'}));\n  }\n  getVisibleDatasetCount() {\n    return this.getSortedVisibleDatasetMetas().length;\n  }\n  isDatasetVisible(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    if (!dataset) {\n      return false;\n    }\n    const meta = this.getDatasetMeta(datasetIndex);\n    return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n  }\n  setDatasetVisibility(datasetIndex, visible) {\n    const meta = this.getDatasetMeta(datasetIndex);\n    meta.hidden = !visible;\n  }\n  toggleDataVisibility(index) {\n    this._hiddenIndices[index] = !this._hiddenIndices[index];\n  }\n  getDataVisibility(index) {\n    return !this._hiddenIndices[index];\n  }\n  _updateVisibility(datasetIndex, dataIndex, visible) {\n    const mode = visible ? 'show' : 'hide';\n    const meta = this.getDatasetMeta(datasetIndex);\n    const anims = meta.controller._resolveAnimations(undefined, mode);\n    if (defined(dataIndex)) {\n      meta.data[dataIndex].hidden = !visible;\n      this.update();\n    } else {\n      this.setDatasetVisibility(datasetIndex, visible);\n      anims.update(meta, {visible});\n      this.update((ctx) => ctx.datasetIndex === datasetIndex ? mode : undefined);\n    }\n  }\n  hide(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, false);\n  }\n  show(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, true);\n  }\n  _destroyDatasetMeta(datasetIndex) {\n    const meta = this._metasets[datasetIndex];\n    if (meta && meta.controller) {\n      meta.controller._destroy();\n    }\n    delete this._metasets[datasetIndex];\n  }\n  _stop() {\n    let i, ilen;\n    this.stop();\n    animator.remove(this);\n    for (i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._destroyDatasetMeta(i);\n    }\n  }\n  destroy() {\n    this.notifyPlugins('beforeDestroy');\n    const {canvas, ctx} = this;\n    this._stop();\n    this.config.clearCache();\n    if (canvas) {\n      this.unbindEvents();\n      clearCanvas(canvas, ctx);\n      this.platform.releaseContext(ctx);\n      this.canvas = null;\n      this.ctx = null;\n    }\n    this.notifyPlugins('destroy');\n    delete instances[this.id];\n    this.notifyPlugins('afterDestroy');\n  }\n  toBase64Image(...args) {\n    return this.canvas.toDataURL(...args);\n  }\n  bindEvents() {\n    this.bindUserEvents();\n    if (this.options.responsive) {\n      this.bindResponsiveEvents();\n    } else {\n      this.attached = true;\n    }\n  }\n  bindUserEvents() {\n    const listeners = this._listeners;\n    const platform = this.platform;\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n    const listener = (e, x, y) => {\n      e.offsetX = x;\n      e.offsetY = y;\n      this._eventHandler(e);\n    };\n    each(this.options.events, (type) => _add(type, listener));\n  }\n  bindResponsiveEvents() {\n    if (!this._responsiveListeners) {\n      this._responsiveListeners = {};\n    }\n    const listeners = this._responsiveListeners;\n    const platform = this.platform;\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n    const _remove = (type, listener) => {\n      if (listeners[type]) {\n        platform.removeEventListener(this, type, listener);\n        delete listeners[type];\n      }\n    };\n    const listener = (width, height) => {\n      if (this.canvas) {\n        this.resize(width, height);\n      }\n    };\n    let detached;\n    const attached = () => {\n      _remove('attach', attached);\n      this.attached = true;\n      this.resize();\n      _add('resize', listener);\n      _add('detach', detached);\n    };\n    detached = () => {\n      this.attached = false;\n      _remove('resize', listener);\n      this._stop();\n      this._resize(0, 0);\n      _add('attach', attached);\n    };\n    if (platform.isAttached(this.canvas)) {\n      attached();\n    } else {\n      detached();\n    }\n  }\n  unbindEvents() {\n    each(this._listeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._listeners = {};\n    each(this._responsiveListeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._responsiveListeners = undefined;\n  }\n  updateHoverStyle(items, mode, enabled) {\n    const prefix = enabled ? 'set' : 'remove';\n    let meta, item, i, ilen;\n    if (mode === 'dataset') {\n      meta = this.getDatasetMeta(items[0].datasetIndex);\n      meta.controller['_' + prefix + 'DatasetHoverStyle']();\n    }\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      item = items[i];\n      const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n      if (controller) {\n        controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n      }\n    }\n  }\n  getActiveElements() {\n    return this._active || [];\n  }\n  setActiveElements(activeElements) {\n    const lastActive = this._active || [];\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = this.getDatasetMeta(datasetIndex);\n      if (!meta) {\n        throw new Error('No dataset found at index ' + datasetIndex);\n      }\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(active, lastActive);\n    if (changed) {\n      this._active = active;\n      this._lastEvent = null;\n      this._updateHoverStyles(active, lastActive);\n    }\n  }\n  notifyPlugins(hook, args, filter) {\n    return this._plugins.notify(this, hook, args, filter);\n  }\n  _updateHoverStyles(active, lastActive, replay) {\n    const hoverOptions = this.options.hover;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.datasetIndex === y.datasetIndex && x.index === y.index));\n    const deactivated = diff(lastActive, active);\n    const activated = replay ? active : diff(active, lastActive);\n    if (deactivated.length) {\n      this.updateHoverStyle(deactivated, hoverOptions.mode, false);\n    }\n    if (activated.length && hoverOptions.mode) {\n      this.updateHoverStyle(activated, hoverOptions.mode, true);\n    }\n  }\n  _eventHandler(e, replay) {\n    const args = {\n      event: e,\n      replay,\n      cancelable: true,\n      inChartArea: _isPointInArea(e, this.chartArea, this._minPadding)\n    };\n    const eventFilter = (plugin) => (plugin.options.events || this.options.events).includes(e.native.type);\n    if (this.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n      return;\n    }\n    const changed = this._handleEvent(e, replay, args.inChartArea);\n    args.cancelable = false;\n    this.notifyPlugins('afterEvent', args, eventFilter);\n    if (changed || args.changed) {\n      this.render();\n    }\n    return this;\n  }\n  _handleEvent(e, replay, inChartArea) {\n    const {_active: lastActive = [], options} = this;\n    const useFinalPosition = replay;\n    const active = this._getActiveElements(e, lastActive, inChartArea, useFinalPosition);\n    const isClick = _isClickEvent(e);\n    const lastEvent = determineLastEvent(e, this._lastEvent, inChartArea, isClick);\n    if (inChartArea) {\n      this._lastEvent = null;\n      callback(options.onHover, [e, active, this], this);\n      if (isClick) {\n        callback(options.onClick, [e, active, this], this);\n      }\n    }\n    const changed = !_elementsEqual(active, lastActive);\n    if (changed || replay) {\n      this._active = active;\n      this._updateHoverStyles(active, lastActive, replay);\n    }\n    this._lastEvent = lastEvent;\n    return changed;\n  }\n  _getActiveElements(e, lastActive, inChartArea, useFinalPosition) {\n    if (e.type === 'mouseout') {\n      return [];\n    }\n    if (!inChartArea) {\n      return lastActive;\n    }\n    const hoverOptions = this.options.hover;\n    return this.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n  }\n}\nconst invalidatePlugins = () => each(Chart.instances, (chart) => chart._plugins.invalidate());\nconst enumerable = true;\nObject.defineProperties(Chart, {\n  defaults: {\n    enumerable,\n    value: defaults\n  },\n  instances: {\n    enumerable,\n    value: instances\n  },\n  overrides: {\n    enumerable,\n    value: overrides\n  },\n  registry: {\n    enumerable,\n    value: registry\n  },\n  version: {\n    enumerable,\n    value: version\n  },\n  getChart: {\n    enumerable,\n    value: getChart\n  },\n  register: {\n    enumerable,\n    value: (...items) => {\n      registry.add(...items);\n      invalidatePlugins();\n    }\n  },\n  unregister: {\n    enumerable,\n    value: (...items) => {\n      registry.remove(...items);\n      invalidatePlugins();\n    }\n  }\n});\n\nfunction abstract() {\n  throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\nclass DateAdapter {\n  constructor(options) {\n    this.options = options || {};\n  }\n  formats() {\n    return abstract();\n  }\n  parse(value, format) {\n    return abstract();\n  }\n  format(timestamp, format) {\n    return abstract();\n  }\n  add(timestamp, amount, unit) {\n    return abstract();\n  }\n  diff(a, b, unit) {\n    return abstract();\n  }\n  startOf(timestamp, unit, weekday) {\n    return abstract();\n  }\n  endOf(timestamp, unit) {\n    return abstract();\n  }\n}\nDateAdapter.override = function(members) {\n  Object.assign(DateAdapter.prototype, members);\n};\nvar _adapters = {\n  _date: DateAdapter\n};\n\nfunction getAllScaleValues(scale, type) {\n  if (!scale._cache.$bar) {\n    const visibleMetas = scale.getMatchingVisibleMetas(type);\n    let values = [];\n    for (let i = 0, ilen = visibleMetas.length; i < ilen; i++) {\n      values = values.concat(visibleMetas[i].controller.getAllParsedValues(scale));\n    }\n    scale._cache.$bar = _arrayUnique(values.sort((a, b) => a - b));\n  }\n  return scale._cache.$bar;\n}\nfunction computeMinSampleSize(meta) {\n  const scale = meta.iScale;\n  const values = getAllScaleValues(scale, meta.type);\n  let min = scale._length;\n  let i, ilen, curr, prev;\n  const updateMinAndPrev = () => {\n    if (curr === 32767 || curr === -32768) {\n      return;\n    }\n    if (defined(prev)) {\n      min = Math.min(min, Math.abs(curr - prev) || min);\n    }\n    prev = curr;\n  };\n  for (i = 0, ilen = values.length; i < ilen; ++i) {\n    curr = scale.getPixelForValue(values[i]);\n    updateMinAndPrev();\n  }\n  prev = undefined;\n  for (i = 0, ilen = scale.ticks.length; i < ilen; ++i) {\n    curr = scale.getPixelForTick(i);\n    updateMinAndPrev();\n  }\n  return min;\n}\nfunction computeFitCategoryTraits(index, ruler, options, stackCount) {\n  const thickness = options.barThickness;\n  let size, ratio;\n  if (isNullOrUndef(thickness)) {\n    size = ruler.min * options.categoryPercentage;\n    ratio = options.barPercentage;\n  } else {\n    size = thickness * stackCount;\n    ratio = 1;\n  }\n  return {\n    chunk: size / stackCount,\n    ratio,\n    start: ruler.pixels[index] - (size / 2)\n  };\n}\nfunction computeFlexCategoryTraits(index, ruler, options, stackCount) {\n  const pixels = ruler.pixels;\n  const curr = pixels[index];\n  let prev = index > 0 ? pixels[index - 1] : null;\n  let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n  const percent = options.categoryPercentage;\n  if (prev === null) {\n    prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n  }\n  if (next === null) {\n    next = curr + curr - prev;\n  }\n  const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n  const size = Math.abs(next - prev) / 2 * percent;\n  return {\n    chunk: size / stackCount,\n    ratio: options.barPercentage,\n    start\n  };\n}\nfunction parseFloatBar(entry, item, vScale, i) {\n  const startValue = vScale.parse(entry[0], i);\n  const endValue = vScale.parse(entry[1], i);\n  const min = Math.min(startValue, endValue);\n  const max = Math.max(startValue, endValue);\n  let barStart = min;\n  let barEnd = max;\n  if (Math.abs(min) > Math.abs(max)) {\n    barStart = max;\n    barEnd = min;\n  }\n  item[vScale.axis] = barEnd;\n  item._custom = {\n    barStart,\n    barEnd,\n    start: startValue,\n    end: endValue,\n    min,\n    max\n  };\n}\nfunction parseValue(entry, item, vScale, i) {\n  if (isArray(entry)) {\n    parseFloatBar(entry, item, vScale, i);\n  } else {\n    item[vScale.axis] = vScale.parse(entry, i);\n  }\n  return item;\n}\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n  const iScale = meta.iScale;\n  const vScale = meta.vScale;\n  const labels = iScale.getLabels();\n  const singleScale = iScale === vScale;\n  const parsed = [];\n  let i, ilen, item, entry;\n  for (i = start, ilen = start + count; i < ilen; ++i) {\n    entry = data[i];\n    item = {};\n    item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n    parsed.push(parseValue(entry, item, vScale, i));\n  }\n  return parsed;\n}\nfunction isFloatBar(custom) {\n  return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\nfunction barSign(size, vScale, actualBase) {\n  if (size !== 0) {\n    return sign(size);\n  }\n  return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);\n}\nfunction borderProps(properties) {\n  let reverse, start, end, top, bottom;\n  if (properties.horizontal) {\n    reverse = properties.base > properties.x;\n    start = 'left';\n    end = 'right';\n  } else {\n    reverse = properties.base < properties.y;\n    start = 'bottom';\n    end = 'top';\n  }\n  if (reverse) {\n    top = 'end';\n    bottom = 'start';\n  } else {\n    top = 'start';\n    bottom = 'end';\n  }\n  return {start, end, reverse, top, bottom};\n}\nfunction setBorderSkipped(properties, options, stack, index) {\n  let edge = options.borderSkipped;\n  const res = {};\n  if (!edge) {\n    properties.borderSkipped = res;\n    return;\n  }\n  const {start, end, reverse, top, bottom} = borderProps(properties);\n  if (edge === 'middle' && stack) {\n    properties.enableBorderRadius = true;\n    if ((stack._top || 0) === index) {\n      edge = top;\n    } else if ((stack._bottom || 0) === index) {\n      edge = bottom;\n    } else {\n      res[parseEdge(bottom, start, end, reverse)] = true;\n      edge = top;\n    }\n  }\n  res[parseEdge(edge, start, end, reverse)] = true;\n  properties.borderSkipped = res;\n}\nfunction parseEdge(edge, a, b, reverse) {\n  if (reverse) {\n    edge = swap(edge, a, b);\n    edge = startEnd(edge, b, a);\n  } else {\n    edge = startEnd(edge, a, b);\n  }\n  return edge;\n}\nfunction swap(orig, v1, v2) {\n  return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\nfunction startEnd(v, start, end) {\n  return v === 'start' ? start : v === 'end' ? end : v;\n}\nfunction setInflateAmount(properties, {inflateAmount}, ratio) {\n  properties.inflateAmount = inflateAmount === 'auto'\n    ? ratio === 1 ? 0.33 : 0\n    : inflateAmount;\n}\nclass BarController extends DatasetController {\n  parsePrimitiveData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n  parseArrayData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n  parseObjectData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const parsed = [];\n    let i, ilen, item, obj;\n    for (i = start, ilen = start + count; i < ilen; ++i) {\n      obj = data[i];\n      item = {};\n      item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n      parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n    }\n    return parsed;\n  }\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    super.updateRangeFromParsed(range, scale, parsed, stack);\n    const custom = parsed._custom;\n    if (custom && scale === this._cachedMeta.vScale) {\n      range.min = Math.min(range.min, custom.min);\n      range.max = Math.max(range.max, custom.max);\n    }\n  }\n  getMaxOverflow() {\n    return 0;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const {iScale, vScale} = meta;\n    const parsed = this.getParsed(index);\n    const custom = parsed._custom;\n    const value = isFloatBar(custom)\n      ? '[' + custom.start + ', ' + custom.end + ']'\n      : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n    return {\n      label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n      value\n    };\n  }\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n    const meta = this._cachedMeta;\n    meta.stack = this.getDataset().stack;\n  }\n  update(mode) {\n    const meta = this._cachedMeta;\n    this.updateElements(meta.data, 0, meta.data.length, mode);\n  }\n  updateElements(bars, start, count, mode) {\n    const reset = mode === 'reset';\n    const {index, _cachedMeta: {vScale}} = this;\n    const base = vScale.getBasePixel();\n    const horizontal = vScale.isHorizontal();\n    const ruler = this._getRuler();\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions);\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n    for (let i = start; i < start + count; i++) {\n      const parsed = this.getParsed(i);\n      const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {base, head: base} : this._calculateBarValuePixels(i);\n      const ipixels = this._calculateBarIndexPixels(i, ruler);\n      const stack = (parsed._stacks || {})[vScale.axis];\n      const properties = {\n        horizontal,\n        base: vpixels.base,\n        enableBorderRadius: !stack || isFloatBar(parsed._custom) || (index === stack._top || index === stack._bottom),\n        x: horizontal ? vpixels.head : ipixels.center,\n        y: horizontal ? ipixels.center : vpixels.head,\n        height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n        width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n      };\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n      }\n      const options = properties.options || bars[i].options;\n      setBorderSkipped(properties, options, stack, index);\n      setInflateAmount(properties, options, ruler.ratio);\n      this.updateElement(bars[i], i, properties, mode);\n    }\n  }\n  _getStacks(last, dataIndex) {\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const metasets = iScale.getMatchingVisibleMetas(this._type);\n    const stacked = iScale.options.stacked;\n    const ilen = metasets.length;\n    const stacks = [];\n    let i, item;\n    for (i = 0; i < ilen; ++i) {\n      item = metasets[i];\n      if (!item.controller.options.grouped) {\n        continue;\n      }\n      if (typeof dataIndex !== 'undefined') {\n        const val = item.controller.getParsed(dataIndex)[\n          item.controller._cachedMeta.vScale.axis\n        ];\n        if (isNullOrUndef(val) || isNaN(val)) {\n          continue;\n        }\n      }\n      if (stacked === false || stacks.indexOf(item.stack) === -1 ||\n\t\t\t\t(stacked === undefined && item.stack === undefined)) {\n        stacks.push(item.stack);\n      }\n      if (item.index === last) {\n        break;\n      }\n    }\n    if (!stacks.length) {\n      stacks.push(undefined);\n    }\n    return stacks;\n  }\n  _getStackCount(index) {\n    return this._getStacks(undefined, index).length;\n  }\n  _getStackIndex(datasetIndex, name, dataIndex) {\n    const stacks = this._getStacks(datasetIndex, dataIndex);\n    const index = (name !== undefined)\n      ? stacks.indexOf(name)\n      : -1;\n    return (index === -1)\n      ? stacks.length - 1\n      : index;\n  }\n  _getRuler() {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const pixels = [];\n    let i, ilen;\n    for (i = 0, ilen = meta.data.length; i < ilen; ++i) {\n      pixels.push(iScale.getPixelForValue(this.getParsed(i)[iScale.axis], i));\n    }\n    const barThickness = opts.barThickness;\n    const min = barThickness || computeMinSampleSize(meta);\n    return {\n      min,\n      pixels,\n      start: iScale._startPixel,\n      end: iScale._endPixel,\n      stackCount: this._getStackCount(),\n      scale: iScale,\n      grouped: opts.grouped,\n      ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n    };\n  }\n  _calculateBarValuePixels(index) {\n    const {_cachedMeta: {vScale, _stacked}, options: {base: baseValue, minBarLength}} = this;\n    const actualBase = baseValue || 0;\n    const parsed = this.getParsed(index);\n    const custom = parsed._custom;\n    const floating = isFloatBar(custom);\n    let value = parsed[vScale.axis];\n    let start = 0;\n    let length = _stacked ? this.applyStack(vScale, parsed, _stacked) : value;\n    let head, size;\n    if (length !== value) {\n      start = length - value;\n      length = value;\n    }\n    if (floating) {\n      value = custom.barStart;\n      length = custom.barEnd - custom.barStart;\n      if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n        start = 0;\n      }\n      start += value;\n    }\n    const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n    let base = vScale.getPixelForValue(startValue);\n    if (this.chart.getDataVisibility(index)) {\n      head = vScale.getPixelForValue(start + length);\n    } else {\n      head = base;\n    }\n    size = head - base;\n    if (Math.abs(size) < minBarLength) {\n      size = barSign(size, vScale, actualBase) * minBarLength;\n      if (value === actualBase) {\n        base -= size / 2;\n      }\n      head = base + size;\n    }\n    if (base === vScale.getPixelForValue(actualBase)) {\n      const halfGrid = sign(size) * vScale.getLineWidthForValue(actualBase) / 2;\n      base += halfGrid;\n      size -= halfGrid;\n    }\n    return {\n      size,\n      base,\n      head,\n      center: head + size / 2\n    };\n  }\n  _calculateBarIndexPixels(index, ruler) {\n    const scale = ruler.scale;\n    const options = this.options;\n    const skipNull = options.skipNull;\n    const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n    let center, size;\n    if (ruler.grouped) {\n      const stackCount = skipNull ? this._getStackCount(index) : ruler.stackCount;\n      const range = options.barThickness === 'flex'\n        ? computeFlexCategoryTraits(index, ruler, options, stackCount)\n        : computeFitCategoryTraits(index, ruler, options, stackCount);\n      const stackIndex = this._getStackIndex(this.index, this._cachedMeta.stack, skipNull ? index : undefined);\n      center = range.start + (range.chunk * stackIndex) + (range.chunk / 2);\n      size = Math.min(maxBarThickness, range.chunk * range.ratio);\n    } else {\n      center = scale.getPixelForValue(this.getParsed(index)[scale.axis], index);\n      size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n    }\n    return {\n      base: center - size / 2,\n      head: center + size / 2,\n      center,\n      size\n    };\n  }\n  draw() {\n    const meta = this._cachedMeta;\n    const vScale = meta.vScale;\n    const rects = meta.data;\n    const ilen = rects.length;\n    let i = 0;\n    for (; i < ilen; ++i) {\n      if (this.getParsed(i)[vScale.axis] !== null) {\n        rects[i].draw(this._ctx);\n      }\n    }\n  }\n}\nBarController.id = 'bar';\nBarController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'bar',\n  categoryPercentage: 0.8,\n  barPercentage: 0.9,\n  grouped: true,\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'base', 'width', 'height']\n    }\n  }\n};\nBarController.overrides = {\n  scales: {\n    _index_: {\n      type: 'category',\n      offset: true,\n      grid: {\n        offset: true\n      }\n    },\n    _value_: {\n      type: 'linear',\n      beginAtZero: true,\n    }\n  }\n};\n\nclass BubbleController extends DatasetController {\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n  }\n  parsePrimitiveData(meta, data, start, count) {\n    const parsed = super.parsePrimitiveData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      parsed[i]._custom = this.resolveDataElementOptions(i + start).radius;\n    }\n    return parsed;\n  }\n  parseArrayData(meta, data, start, count) {\n    const parsed = super.parseArrayData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      const item = data[start + i];\n      parsed[i]._custom = valueOrDefault(item[2], this.resolveDataElementOptions(i + start).radius);\n    }\n    return parsed;\n  }\n  parseObjectData(meta, data, start, count) {\n    const parsed = super.parseObjectData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      const item = data[start + i];\n      parsed[i]._custom = valueOrDefault(item && item.r && +item.r, this.resolveDataElementOptions(i + start).radius);\n    }\n    return parsed;\n  }\n  getMaxOverflow() {\n    const data = this._cachedMeta.data;\n    let max = 0;\n    for (let i = data.length - 1; i >= 0; --i) {\n      max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n    }\n    return max > 0 && max;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const {xScale, yScale} = meta;\n    const parsed = this.getParsed(index);\n    const x = xScale.getLabelForValue(parsed.x);\n    const y = yScale.getLabelForValue(parsed.y);\n    const r = parsed._custom;\n    return {\n      label: meta.label,\n      value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n    };\n  }\n  update(mode) {\n    const points = this._cachedMeta.data;\n    this.updateElements(points, 0, points.length, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale} = this._cachedMeta;\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const parsed = !reset && this.getParsed(i);\n      const properties = {};\n      const iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n      const vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n      properties.skip = isNaN(iPixel) || isNaN(vPixel);\n      if (includeOptions) {\n        properties.options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n        if (reset) {\n          properties.options.radius = 0;\n        }\n      }\n      this.updateElement(point, i, properties, mode);\n    }\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n  resolveDataElementOptions(index, mode) {\n    const parsed = this.getParsed(index);\n    let values = super.resolveDataElementOptions(index, mode);\n    if (values.$shared) {\n      values = Object.assign({}, values, {$shared: false});\n    }\n    const radius = values.radius;\n    if (mode !== 'active') {\n      values.radius = 0;\n    }\n    values.radius += valueOrDefault(parsed && parsed._custom, radius);\n    return values;\n  }\n}\nBubbleController.id = 'bubble';\nBubbleController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'point',\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'borderWidth', 'radius']\n    }\n  }\n};\nBubbleController.overrides = {\n  scales: {\n    x: {\n      type: 'linear'\n    },\n    y: {\n      type: 'linear'\n    }\n  },\n  plugins: {\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        }\n      }\n    }\n  }\n};\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n  let ratioX = 1;\n  let ratioY = 1;\n  let offsetX = 0;\n  let offsetY = 0;\n  if (circumference < TAU) {\n    const startAngle = rotation;\n    const endAngle = startAngle + circumference;\n    const startX = Math.cos(startAngle);\n    const startY = Math.sin(startAngle);\n    const endX = Math.cos(endAngle);\n    const endY = Math.sin(endAngle);\n    const calcMax = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n    const calcMin = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n    const maxX = calcMax(0, startX, endX);\n    const maxY = calcMax(HALF_PI, startY, endY);\n    const minX = calcMin(PI, startX, endX);\n    const minY = calcMin(PI + HALF_PI, startY, endY);\n    ratioX = (maxX - minX) / 2;\n    ratioY = (maxY - minY) / 2;\n    offsetX = -(maxX + minX) / 2;\n    offsetY = -(maxY + minY) / 2;\n  }\n  return {ratioX, ratioY, offsetX, offsetY};\n}\nclass DoughnutController extends DatasetController {\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n    this.enableOptionSharing = true;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.offsetX = undefined;\n    this.offsetY = undefined;\n  }\n  linkScales() {}\n  parse(start, count) {\n    const data = this.getDataset().data;\n    const meta = this._cachedMeta;\n    if (this._parsing === false) {\n      meta._parsed = data;\n    } else {\n      let getter = (i) => +data[i];\n      if (isObject(data[start])) {\n        const {key = 'value'} = this._parsing;\n        getter = (i) => +resolveObjectKey(data[i], key);\n      }\n      let i, ilen;\n      for (i = start, ilen = start + count; i < ilen; ++i) {\n        meta._parsed[i] = getter(i);\n      }\n    }\n  }\n  _getRotation() {\n    return toRadians(this.options.rotation - 90);\n  }\n  _getCircumference() {\n    return toRadians(this.options.circumference);\n  }\n  _getRotationExtents() {\n    let min = TAU;\n    let max = -TAU;\n    for (let i = 0; i < this.chart.data.datasets.length; ++i) {\n      if (this.chart.isDatasetVisible(i)) {\n        const controller = this.chart.getDatasetMeta(i).controller;\n        const rotation = controller._getRotation();\n        const circumference = controller._getCircumference();\n        min = Math.min(min, rotation);\n        max = Math.max(max, rotation + circumference);\n      }\n    }\n    return {\n      rotation: min,\n      circumference: max - min,\n    };\n  }\n  update(mode) {\n    const chart = this.chart;\n    const {chartArea} = chart;\n    const meta = this._cachedMeta;\n    const arcs = meta.data;\n    const spacing = this.getMaxBorderWidth() + this.getMaxOffset(arcs) + this.options.spacing;\n    const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n    const cutout = Math.min(toPercentage(this.options.cutout, maxSize), 1);\n    const chartWeight = this._getRingWeight(this.index);\n    const {circumference, rotation} = this._getRotationExtents();\n    const {ratioX, ratioY, offsetX, offsetY} = getRatioAndOffset(rotation, circumference, cutout);\n    const maxWidth = (chartArea.width - spacing) / ratioX;\n    const maxHeight = (chartArea.height - spacing) / ratioY;\n    const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n    const outerRadius = toDimension(this.options.radius, maxRadius);\n    const innerRadius = Math.max(outerRadius * cutout, 0);\n    const radiusLength = (outerRadius - innerRadius) / this._getVisibleDatasetWeightTotal();\n    this.offsetX = offsetX * outerRadius;\n    this.offsetY = offsetY * outerRadius;\n    meta.total = this.calculateTotal();\n    this.outerRadius = outerRadius - radiusLength * this._getRingWeightOffset(this.index);\n    this.innerRadius = Math.max(this.outerRadius - radiusLength * chartWeight, 0);\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n  _circumference(i, reset) {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n    const circumference = this._getCircumference();\n    if ((reset && opts.animation.animateRotate) || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\n      return 0;\n    }\n    return this.calculateCircumference(meta._parsed[i] * circumference / TAU);\n  }\n  updateElements(arcs, start, count, mode) {\n    const reset = mode === 'reset';\n    const chart = this.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const centerX = (chartArea.left + chartArea.right) / 2;\n    const centerY = (chartArea.top + chartArea.bottom) / 2;\n    const animateScale = reset && animationOpts.animateScale;\n    const innerRadius = animateScale ? 0 : this.innerRadius;\n    const outerRadius = animateScale ? 0 : this.outerRadius;\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions);\n    let startAngle = this._getRotation();\n    let i;\n    for (i = 0; i < start; ++i) {\n      startAngle += this._circumference(i, reset);\n    }\n    for (i = start; i < start + count; ++i) {\n      const circumference = this._circumference(i, reset);\n      const arc = arcs[i];\n      const properties = {\n        x: centerX + this.offsetX,\n        y: centerY + this.offsetY,\n        startAngle,\n        endAngle: startAngle + circumference,\n        circumference,\n        outerRadius,\n        innerRadius\n      };\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n      }\n      startAngle += circumference;\n      this.updateElement(arc, i, properties, mode);\n    }\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n  calculateTotal() {\n    const meta = this._cachedMeta;\n    const metaData = meta.data;\n    let total = 0;\n    let i;\n    for (i = 0; i < metaData.length; i++) {\n      const value = meta._parsed[i];\n      if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\n        total += Math.abs(value);\n      }\n    }\n    return total;\n  }\n  calculateCircumference(value) {\n    const total = this._cachedMeta.total;\n    if (total > 0 && !isNaN(value)) {\n      return TAU * (Math.abs(value) / total);\n    }\n    return 0;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const chart = this.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index], chart.options.locale);\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n  getMaxBorderWidth(arcs) {\n    let max = 0;\n    const chart = this.chart;\n    let i, ilen, meta, controller, options;\n    if (!arcs) {\n      for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n        if (chart.isDatasetVisible(i)) {\n          meta = chart.getDatasetMeta(i);\n          arcs = meta.data;\n          controller = meta.controller;\n          break;\n        }\n      }\n    }\n    if (!arcs) {\n      return 0;\n    }\n    for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n      options = controller.resolveDataElementOptions(i);\n      if (options.borderAlign !== 'inner') {\n        max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n      }\n    }\n    return max;\n  }\n  getMaxOffset(arcs) {\n    let max = 0;\n    for (let i = 0, ilen = arcs.length; i < ilen; ++i) {\n      const options = this.resolveDataElementOptions(i);\n      max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n    }\n    return max;\n  }\n  _getRingWeightOffset(datasetIndex) {\n    let ringWeightOffset = 0;\n    for (let i = 0; i < datasetIndex; ++i) {\n      if (this.chart.isDatasetVisible(i)) {\n        ringWeightOffset += this._getRingWeight(i);\n      }\n    }\n    return ringWeightOffset;\n  }\n  _getRingWeight(datasetIndex) {\n    return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n  }\n  _getVisibleDatasetWeightTotal() {\n    return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n  }\n}\nDoughnutController.id = 'doughnut';\nDoughnutController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'arc',\n  animation: {\n    animateRotate: true,\n    animateScale: false\n  },\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['circumference', 'endAngle', 'innerRadius', 'outerRadius', 'startAngle', 'x', 'y', 'offset', 'borderWidth', 'spacing']\n    },\n  },\n  cutout: '50%',\n  rotation: 0,\n  circumference: 360,\n  radius: '100%',\n  spacing: 0,\n  indexAxis: 'r',\n};\nDoughnutController.descriptors = {\n  _scriptable: (name) => name !== 'spacing',\n  _indexable: (name) => name !== 'spacing',\n};\nDoughnutController.overrides = {\n  aspectRatio: 1,\n  plugins: {\n    legend: {\n      labels: {\n        generateLabels(chart) {\n          const data = chart.data;\n          if (data.labels.length && data.datasets.length) {\n            const {labels: {pointStyle}} = chart.legend.options;\n            return data.labels.map((label, i) => {\n              const meta = chart.getDatasetMeta(0);\n              const style = meta.controller.getStyle(i);\n              return {\n                text: label,\n                fillStyle: style.backgroundColor,\n                strokeStyle: style.borderColor,\n                lineWidth: style.borderWidth,\n                pointStyle: pointStyle,\n                hidden: !chart.getDataVisibility(i),\n                index: i\n              };\n            });\n          }\n          return [];\n        }\n      },\n      onClick(e, legendItem, legend) {\n        legend.chart.toggleDataVisibility(legendItem.index);\n        legend.chart.update();\n      }\n    },\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(tooltipItem) {\n          let dataLabel = tooltipItem.label;\n          const value = ': ' + tooltipItem.formattedValue;\n          if (isArray(dataLabel)) {\n            dataLabel = dataLabel.slice();\n            dataLabel[0] += value;\n          } else {\n            dataLabel += value;\n          }\n          return dataLabel;\n        }\n      }\n    }\n  }\n};\n\nclass LineController extends DatasetController {\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n  }\n  update(mode) {\n    const meta = this._cachedMeta;\n    const {dataset: line, data: points = [], _dataset} = meta;\n    const animationsDisabled = this.chart._animationsDisabled;\n    let {start, count} = getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n    this._drawStart = start;\n    this._drawCount = count;\n    if (scaleRangesChanged(meta)) {\n      start = 0;\n      count = points.length;\n    }\n    line._chart = this.chart;\n    line._datasetIndex = this.index;\n    line._decimated = !!_dataset._decimated;\n    line.points = points;\n    const options = this.resolveDatasetElementOptions(mode);\n    if (!this.options.showLine) {\n      options.borderWidth = 0;\n    }\n    options.segment = this.options.segment;\n    this.updateElement(line, undefined, {\n      animated: !animationsDisabled,\n      options\n    }, mode);\n    this.updateElements(points, start, count, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale, _stacked, _dataset} = this._cachedMeta;\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const {spanGaps, segment} = this.options;\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n    const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n    let prevParsed = start > 0 && this.getParsed(start - 1);\n    for (let i = start; i < start + count; ++i) {\n      const point = points[i];\n      const parsed = this.getParsed(i);\n      const properties = directUpdate ? point : {};\n      const nullData = isNullOrUndef(parsed[vAxis]);\n      const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n      const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n      properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n      properties.stop = i > 0 && (parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n      if (segment) {\n        properties.parsed = parsed;\n        properties.raw = _dataset.data[i];\n      }\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      }\n      if (!directUpdate) {\n        this.updateElement(point, i, properties, mode);\n      }\n      prevParsed = parsed;\n    }\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n  getMaxOverflow() {\n    const meta = this._cachedMeta;\n    const dataset = meta.dataset;\n    const border = dataset.options && dataset.options.borderWidth || 0;\n    const data = meta.data || [];\n    if (!data.length) {\n      return border;\n    }\n    const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n    const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n    return Math.max(border, firstPoint, lastPoint) / 2;\n  }\n  draw() {\n    const meta = this._cachedMeta;\n    meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n    super.draw();\n  }\n}\nLineController.id = 'line';\nLineController.defaults = {\n  datasetElementType: 'line',\n  dataElementType: 'point',\n  showLine: true,\n  spanGaps: false,\n};\nLineController.overrides = {\n  scales: {\n    _index_: {\n      type: 'category',\n    },\n    _value_: {\n      type: 'linear',\n    },\n  }\n};\nfunction getStartAndCountOfVisiblePoints(meta, points, animationsDisabled) {\n  const pointCount = points.length;\n  let start = 0;\n  let count = pointCount;\n  if (meta._sorted) {\n    const {iScale, _parsed} = meta;\n    const axis = iScale.axis;\n    const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n    if (minDefined) {\n      start = _limitValue(Math.min(\n        _lookupByKey(_parsed, iScale.axis, min).lo,\n        animationsDisabled ? pointCount : _lookupByKey(points, axis, iScale.getPixelForValue(min)).lo),\n      0, pointCount - 1);\n    }\n    if (maxDefined) {\n      count = _limitValue(Math.max(\n        _lookupByKey(_parsed, iScale.axis, max).hi + 1,\n        animationsDisabled ? 0 : _lookupByKey(points, axis, iScale.getPixelForValue(max)).hi + 1),\n      start, pointCount) - start;\n    } else {\n      count = pointCount - start;\n    }\n  }\n  return {start, count};\n}\nfunction scaleRangesChanged(meta) {\n  const {xScale, yScale, _scaleRanges} = meta;\n  const newRanges = {\n    xmin: xScale.min,\n    xmax: xScale.max,\n    ymin: yScale.min,\n    ymax: yScale.max\n  };\n  if (!_scaleRanges) {\n    meta._scaleRanges = newRanges;\n    return true;\n  }\n  const changed = _scaleRanges.xmin !== xScale.min\n\t\t|| _scaleRanges.xmax !== xScale.max\n\t\t|| _scaleRanges.ymin !== yScale.min\n\t\t|| _scaleRanges.ymax !== yScale.max;\n  Object.assign(_scaleRanges, newRanges);\n  return changed;\n}\n\nclass PolarAreaController extends DatasetController {\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const chart = this.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index].r, chart.options.locale);\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n  update(mode) {\n    const arcs = this._cachedMeta.data;\n    this._updateRadius();\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n  _updateRadius() {\n    const chart = this.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n    const outerRadius = Math.max(minSize / 2, 0);\n    const innerRadius = Math.max(opts.cutoutPercentage ? (outerRadius / 100) * (opts.cutoutPercentage) : 1, 0);\n    const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n    this.outerRadius = outerRadius - (radiusLength * this.index);\n    this.innerRadius = this.outerRadius - radiusLength;\n  }\n  updateElements(arcs, start, count, mode) {\n    const reset = mode === 'reset';\n    const chart = this.chart;\n    const dataset = this.getDataset();\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const scale = this._cachedMeta.rScale;\n    const centerX = scale.xCenter;\n    const centerY = scale.yCenter;\n    const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n    let angle = datasetStartAngle;\n    let i;\n    const defaultAngle = 360 / this.countVisibleElements();\n    for (i = 0; i < start; ++i) {\n      angle += this._computeAngle(i, mode, defaultAngle);\n    }\n    for (i = start; i < start + count; i++) {\n      const arc = arcs[i];\n      let startAngle = angle;\n      let endAngle = angle + this._computeAngle(i, mode, defaultAngle);\n      let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(dataset.data[i]) : 0;\n      angle = endAngle;\n      if (reset) {\n        if (animationOpts.animateScale) {\n          outerRadius = 0;\n        }\n        if (animationOpts.animateRotate) {\n          startAngle = endAngle = datasetStartAngle;\n        }\n      }\n      const properties = {\n        x: centerX,\n        y: centerY,\n        innerRadius: 0,\n        outerRadius,\n        startAngle,\n        endAngle,\n        options: this.resolveDataElementOptions(i, arc.active ? 'active' : mode)\n      };\n      this.updateElement(arc, i, properties, mode);\n    }\n  }\n  countVisibleElements() {\n    const dataset = this.getDataset();\n    const meta = this._cachedMeta;\n    let count = 0;\n    meta.data.forEach((element, index) => {\n      if (!isNaN(dataset.data[index]) && this.chart.getDataVisibility(index)) {\n        count++;\n      }\n    });\n    return count;\n  }\n  _computeAngle(index, mode, defaultAngle) {\n    return this.chart.getDataVisibility(index)\n      ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle)\n      : 0;\n  }\n}\nPolarAreaController.id = 'polarArea';\nPolarAreaController.defaults = {\n  dataElementType: 'arc',\n  animation: {\n    animateRotate: true,\n    animateScale: true\n  },\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'startAngle', 'endAngle', 'innerRadius', 'outerRadius']\n    },\n  },\n  indexAxis: 'r',\n  startAngle: 0,\n};\nPolarAreaController.overrides = {\n  aspectRatio: 1,\n  plugins: {\n    legend: {\n      labels: {\n        generateLabels(chart) {\n          const data = chart.data;\n          if (data.labels.length && data.datasets.length) {\n            const {labels: {pointStyle}} = chart.legend.options;\n            return data.labels.map((label, i) => {\n              const meta = chart.getDatasetMeta(0);\n              const style = meta.controller.getStyle(i);\n              return {\n                text: label,\n                fillStyle: style.backgroundColor,\n                strokeStyle: style.borderColor,\n                lineWidth: style.borderWidth,\n                pointStyle: pointStyle,\n                hidden: !chart.getDataVisibility(i),\n                index: i\n              };\n            });\n          }\n          return [];\n        }\n      },\n      onClick(e, legendItem, legend) {\n        legend.chart.toggleDataVisibility(legendItem.index);\n        legend.chart.update();\n      }\n    },\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(context) {\n          return context.chart.data.labels[context.dataIndex] + ': ' + context.formattedValue;\n        }\n      }\n    }\n  },\n  scales: {\n    r: {\n      type: 'radialLinear',\n      angleLines: {\n        display: false\n      },\n      beginAtZero: true,\n      grid: {\n        circular: true\n      },\n      pointLabels: {\n        display: false\n      },\n      startAngle: 0\n    }\n  }\n};\n\nclass PieController extends DoughnutController {\n}\nPieController.id = 'pie';\nPieController.defaults = {\n  cutout: 0,\n  rotation: 0,\n  circumference: 360,\n  radius: '100%'\n};\n\nclass RadarController extends DatasetController {\n  getLabelAndValue(index) {\n    const vScale = this._cachedMeta.vScale;\n    const parsed = this.getParsed(index);\n    return {\n      label: vScale.getLabels()[index],\n      value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n    };\n  }\n  update(mode) {\n    const meta = this._cachedMeta;\n    const line = meta.dataset;\n    const points = meta.data || [];\n    const labels = meta.iScale.getLabels();\n    line.points = points;\n    if (mode !== 'resize') {\n      const options = this.resolveDatasetElementOptions(mode);\n      if (!this.options.showLine) {\n        options.borderWidth = 0;\n      }\n      const properties = {\n        _loop: true,\n        _fullLoop: labels.length === points.length,\n        options\n      };\n      this.updateElement(line, undefined, properties, mode);\n    }\n    this.updateElements(points, 0, points.length, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const dataset = this.getDataset();\n    const scale = this._cachedMeta.rScale;\n    const reset = mode === 'reset';\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      const pointPosition = scale.getPointPositionForValue(i, dataset.data[i]);\n      const x = reset ? scale.xCenter : pointPosition.x;\n      const y = reset ? scale.yCenter : pointPosition.y;\n      const properties = {\n        x,\n        y,\n        angle: pointPosition.angle,\n        skip: isNaN(x) || isNaN(y),\n        options\n      };\n      this.updateElement(point, i, properties, mode);\n    }\n  }\n}\nRadarController.id = 'radar';\nRadarController.defaults = {\n  datasetElementType: 'line',\n  dataElementType: 'point',\n  indexAxis: 'r',\n  showLine: true,\n  elements: {\n    line: {\n      fill: 'start'\n    }\n  },\n};\nRadarController.overrides = {\n  aspectRatio: 1,\n  scales: {\n    r: {\n      type: 'radialLinear',\n    }\n  }\n};\n\nclass ScatterController extends LineController {\n}\nScatterController.id = 'scatter';\nScatterController.defaults = {\n  showLine: false,\n  fill: false\n};\nScatterController.overrides = {\n  interaction: {\n    mode: 'point'\n  },\n  plugins: {\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(item) {\n          return '(' + item.label + ', ' + item.formattedValue + ')';\n        }\n      }\n    }\n  },\n  scales: {\n    x: {\n      type: 'linear'\n    },\n    y: {\n      type: 'linear'\n    }\n  }\n};\n\nvar controllers = /*#__PURE__*/Object.freeze({\n__proto__: null,\nBarController: BarController,\nBubbleController: BubbleController,\nDoughnutController: DoughnutController,\nLineController: LineController,\nPolarAreaController: PolarAreaController,\nPieController: PieController,\nRadarController: RadarController,\nScatterController: ScatterController\n});\n\nfunction clipArc(ctx, element, endAngle) {\n  const {startAngle, pixelMargin, x, y, outerRadius, innerRadius} = element;\n  let angleMargin = pixelMargin / outerRadius;\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n  if (innerRadius > pixelMargin) {\n    angleMargin = pixelMargin / innerRadius;\n    ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n  } else {\n    ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n  }\n  ctx.closePath();\n  ctx.clip();\n}\nfunction toRadiusCorners(value) {\n  return _readValueToProps(value, ['outerStart', 'outerEnd', 'innerStart', 'innerEnd']);\n}\nfunction parseBorderRadius$1(arc, innerRadius, outerRadius, angleDelta) {\n  const o = toRadiusCorners(arc.options.borderRadius);\n  const halfThickness = (outerRadius - innerRadius) / 2;\n  const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n  const computeOuterLimit = (val) => {\n    const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n    return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n  };\n  return {\n    outerStart: computeOuterLimit(o.outerStart),\n    outerEnd: computeOuterLimit(o.outerEnd),\n    innerStart: _limitValue(o.innerStart, 0, innerLimit),\n    innerEnd: _limitValue(o.innerEnd, 0, innerLimit),\n  };\n}\nfunction rThetaToXY(r, theta, x, y) {\n  return {\n    x: x + r * Math.cos(theta),\n    y: y + r * Math.sin(theta),\n  };\n}\nfunction pathArc(ctx, element, offset, spacing, end) {\n  const {x, y, startAngle: start, pixelMargin, innerRadius: innerR} = element;\n  const outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n  const innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n  let spacingOffset = 0;\n  const alpha = end - start;\n  if (spacing) {\n    const noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n    const noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n    const avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n    const adjustedAngle = avNogSpacingRadius !== 0 ? (alpha * avNogSpacingRadius) / (avNogSpacingRadius + spacing) : alpha;\n    spacingOffset = (alpha - adjustedAngle) / 2;\n  }\n  const beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n  const angleOffset = (alpha - beta) / 2;\n  const startAngle = start + angleOffset + spacingOffset;\n  const endAngle = end - angleOffset - spacingOffset;\n  const {outerStart, outerEnd, innerStart, innerEnd} = parseBorderRadius$1(element, innerRadius, outerRadius, endAngle - startAngle);\n  const outerStartAdjustedRadius = outerRadius - outerStart;\n  const outerEndAdjustedRadius = outerRadius - outerEnd;\n  const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n  const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n  const innerStartAdjustedRadius = innerRadius + innerStart;\n  const innerEndAdjustedRadius = innerRadius + innerEnd;\n  const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n  const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerEndAdjustedAngle);\n  if (outerEnd > 0) {\n    const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n  }\n  const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n  ctx.lineTo(p4.x, p4.y);\n  if (innerEnd > 0) {\n    const pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n  }\n  ctx.arc(x, y, innerRadius, endAngle - (innerEnd / innerRadius), startAngle + (innerStart / innerRadius), true);\n  if (innerStart > 0) {\n    const pCenter = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n  }\n  const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n  ctx.lineTo(p8.x, p8.y);\n  if (outerStart > 0) {\n    const pCenter = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n  }\n  ctx.closePath();\n}\nfunction drawArc(ctx, element, offset, spacing) {\n  const {fullCircles, startAngle, circumference} = element;\n  let endAngle = element.endAngle;\n  if (fullCircles) {\n    pathArc(ctx, element, offset, spacing, startAngle + TAU);\n    for (let i = 0; i < fullCircles; ++i) {\n      ctx.fill();\n    }\n    if (!isNaN(circumference)) {\n      endAngle = startAngle + circumference % TAU;\n      if (circumference % TAU === 0) {\n        endAngle += TAU;\n      }\n    }\n  }\n  pathArc(ctx, element, offset, spacing, endAngle);\n  ctx.fill();\n  return endAngle;\n}\nfunction drawFullCircleBorders(ctx, element, inner) {\n  const {x, y, startAngle, pixelMargin, fullCircles} = element;\n  const outerRadius = Math.max(element.outerRadius - pixelMargin, 0);\n  const innerRadius = element.innerRadius + pixelMargin;\n  let i;\n  if (inner) {\n    clipArc(ctx, element, startAngle + TAU);\n  }\n  ctx.beginPath();\n  ctx.arc(x, y, innerRadius, startAngle + TAU, startAngle, true);\n  for (i = 0; i < fullCircles; ++i) {\n    ctx.stroke();\n  }\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle, startAngle + TAU);\n  for (i = 0; i < fullCircles; ++i) {\n    ctx.stroke();\n  }\n}\nfunction drawBorder(ctx, element, offset, spacing, endAngle) {\n  const {options} = element;\n  const {borderWidth, borderJoinStyle} = options;\n  const inner = options.borderAlign === 'inner';\n  if (!borderWidth) {\n    return;\n  }\n  if (inner) {\n    ctx.lineWidth = borderWidth * 2;\n    ctx.lineJoin = borderJoinStyle || 'round';\n  } else {\n    ctx.lineWidth = borderWidth;\n    ctx.lineJoin = borderJoinStyle || 'bevel';\n  }\n  if (element.fullCircles) {\n    drawFullCircleBorders(ctx, element, inner);\n  }\n  if (inner) {\n    clipArc(ctx, element, endAngle);\n  }\n  pathArc(ctx, element, offset, spacing, endAngle);\n  ctx.stroke();\n}\nclass ArcElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.circumference = undefined;\n    this.startAngle = undefined;\n    this.endAngle = undefined;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.pixelMargin = 0;\n    this.fullCircles = 0;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  inRange(chartX, chartY, useFinalPosition) {\n    const point = this.getProps(['x', 'y'], useFinalPosition);\n    const {angle, distance} = getAngleFromPoint(point, {x: chartX, y: chartY});\n    const {startAngle, endAngle, innerRadius, outerRadius, circumference} = this.getProps([\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius',\n      'circumference'\n    ], useFinalPosition);\n    const rAdjust = this.options.spacing / 2;\n    const _circumference = valueOrDefault(circumference, endAngle - startAngle);\n    const betweenAngles = _circumference >= TAU || _angleBetween(angle, startAngle, endAngle);\n    const withinRadius = _isBetween(distance, innerRadius + rAdjust, outerRadius + rAdjust);\n    return (betweenAngles && withinRadius);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {x, y, startAngle, endAngle, innerRadius, outerRadius} = this.getProps([\n      'x',\n      'y',\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius',\n      'circumference',\n    ], useFinalPosition);\n    const {offset, spacing} = this.options;\n    const halfAngle = (startAngle + endAngle) / 2;\n    const halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n    return {\n      x: x + Math.cos(halfAngle) * halfRadius,\n      y: y + Math.sin(halfAngle) * halfRadius\n    };\n  }\n  tooltipPosition(useFinalPosition) {\n    return this.getCenterPoint(useFinalPosition);\n  }\n  draw(ctx) {\n    const {options, circumference} = this;\n    const offset = (options.offset || 0) / 2;\n    const spacing = (options.spacing || 0) / 2;\n    this.pixelMargin = (options.borderAlign === 'inner') ? 0.33 : 0;\n    this.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n    if (circumference === 0 || this.innerRadius < 0 || this.outerRadius < 0) {\n      return;\n    }\n    ctx.save();\n    let radiusOffset = 0;\n    if (offset) {\n      radiusOffset = offset / 2;\n      const halfAngle = (this.startAngle + this.endAngle) / 2;\n      ctx.translate(Math.cos(halfAngle) * radiusOffset, Math.sin(halfAngle) * radiusOffset);\n      if (this.circumference >= PI) {\n        radiusOffset = offset;\n      }\n    }\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    const endAngle = drawArc(ctx, this, radiusOffset, spacing);\n    drawBorder(ctx, this, radiusOffset, spacing, endAngle);\n    ctx.restore();\n  }\n}\nArcElement.id = 'arc';\nArcElement.defaults = {\n  borderAlign: 'center',\n  borderColor: '#fff',\n  borderJoinStyle: undefined,\n  borderRadius: 0,\n  borderWidth: 2,\n  offset: 0,\n  spacing: 0,\n  angle: undefined,\n};\nArcElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor'\n};\n\nfunction setStyle(ctx, options, style = options) {\n  ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n  ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n  ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n  ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n  ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n  ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\nfunction lineTo(ctx, previous, target) {\n  ctx.lineTo(target.x, target.y);\n}\nfunction getLineMethod(options) {\n  if (options.stepped) {\n    return _steppedLineTo;\n  }\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierCurveTo;\n  }\n  return lineTo;\n}\nfunction pathVars(points, segment, params = {}) {\n  const count = points.length;\n  const {start: paramsStart = 0, end: paramsEnd = count - 1} = params;\n  const {start: segmentStart, end: segmentEnd} = segment;\n  const start = Math.max(paramsStart, segmentStart);\n  const end = Math.min(paramsEnd, segmentEnd);\n  const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n  return {\n    count,\n    start,\n    loop: segment.loop,\n    ilen: end < start && !outside ? count + end - start : end - start\n  };\n}\nfunction pathSegment(ctx, line, segment, params) {\n  const {points, options} = line;\n  const {count, start, loop, ilen} = pathVars(points, segment, params);\n  const lineMethod = getLineMethod(options);\n  let {move = true, reverse} = params || {};\n  let i, point, prev;\n  for (i = 0; i <= ilen; ++i) {\n    point = points[(start + (reverse ? ilen - i : i)) % count];\n    if (point.skip) {\n      continue;\n    } else if (move) {\n      ctx.moveTo(point.x, point.y);\n      move = false;\n    } else {\n      lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n    prev = point;\n  }\n  if (loop) {\n    point = points[(start + (reverse ? ilen : 0)) % count];\n    lineMethod(ctx, prev, point, reverse, options.stepped);\n  }\n  return !!loop;\n}\nfunction fastPathSegment(ctx, line, segment, params) {\n  const points = line.points;\n  const {count, start, ilen} = pathVars(points, segment, params);\n  const {move = true, reverse} = params || {};\n  let avgX = 0;\n  let countX = 0;\n  let i, point, prevX, minY, maxY, lastY;\n  const pointIndex = (index) => (start + (reverse ? ilen - index : index)) % count;\n  const drawX = () => {\n    if (minY !== maxY) {\n      ctx.lineTo(avgX, maxY);\n      ctx.lineTo(avgX, minY);\n      ctx.lineTo(avgX, lastY);\n    }\n  };\n  if (move) {\n    point = points[pointIndex(0)];\n    ctx.moveTo(point.x, point.y);\n  }\n  for (i = 0; i <= ilen; ++i) {\n    point = points[pointIndex(i)];\n    if (point.skip) {\n      continue;\n    }\n    const x = point.x;\n    const y = point.y;\n    const truncX = x | 0;\n    if (truncX === prevX) {\n      if (y < minY) {\n        minY = y;\n      } else if (y > maxY) {\n        maxY = y;\n      }\n      avgX = (countX * avgX + x) / ++countX;\n    } else {\n      drawX();\n      ctx.lineTo(x, y);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n    }\n    lastY = y;\n  }\n  drawX();\n}\nfunction _getSegmentMethod(line) {\n  const opts = line.options;\n  const borderDash = opts.borderDash && opts.borderDash.length;\n  const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n  return useFastPath ? fastPathSegment : pathSegment;\n}\nfunction _getInterpolationMethod(options) {\n  if (options.stepped) {\n    return _steppedInterpolation;\n  }\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierInterpolation;\n  }\n  return _pointInLine;\n}\nfunction strokePathWithCache(ctx, line, start, count) {\n  let path = line._path;\n  if (!path) {\n    path = line._path = new Path2D();\n    if (line.path(path, start, count)) {\n      path.closePath();\n    }\n  }\n  setStyle(ctx, line.options);\n  ctx.stroke(path);\n}\nfunction strokePathDirect(ctx, line, start, count) {\n  const {segments, options} = line;\n  const segmentMethod = _getSegmentMethod(line);\n  for (const segment of segments) {\n    setStyle(ctx, options, segment.style);\n    ctx.beginPath();\n    if (segmentMethod(ctx, line, segment, {start, end: start + count - 1})) {\n      ctx.closePath();\n    }\n    ctx.stroke();\n  }\n}\nconst usePath2D = typeof Path2D === 'function';\nfunction draw(ctx, line, start, count) {\n  if (usePath2D && !line.options.segment) {\n    strokePathWithCache(ctx, line, start, count);\n  } else {\n    strokePathDirect(ctx, line, start, count);\n  }\n}\nclass LineElement extends Element {\n  constructor(cfg) {\n    super();\n    this.animated = true;\n    this.options = undefined;\n    this._chart = undefined;\n    this._loop = undefined;\n    this._fullLoop = undefined;\n    this._path = undefined;\n    this._points = undefined;\n    this._segments = undefined;\n    this._decimated = false;\n    this._pointsUpdated = false;\n    this._datasetIndex = undefined;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  updateControlPoints(chartArea, indexAxis) {\n    const options = this.options;\n    if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !this._pointsUpdated) {\n      const loop = options.spanGaps ? this._loop : this._fullLoop;\n      _updateBezierControlPoints(this._points, options, chartArea, loop, indexAxis);\n      this._pointsUpdated = true;\n    }\n  }\n  set points(points) {\n    this._points = points;\n    delete this._segments;\n    delete this._path;\n    this._pointsUpdated = false;\n  }\n  get points() {\n    return this._points;\n  }\n  get segments() {\n    return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n  }\n  first() {\n    const segments = this.segments;\n    const points = this.points;\n    return segments.length && points[segments[0].start];\n  }\n  last() {\n    const segments = this.segments;\n    const points = this.points;\n    const count = segments.length;\n    return count && points[segments[count - 1].end];\n  }\n  interpolate(point, property) {\n    const options = this.options;\n    const value = point[property];\n    const points = this.points;\n    const segments = _boundSegments(this, {property, start: value, end: value});\n    if (!segments.length) {\n      return;\n    }\n    const result = [];\n    const _interpolate = _getInterpolationMethod(options);\n    let i, ilen;\n    for (i = 0, ilen = segments.length; i < ilen; ++i) {\n      const {start, end} = segments[i];\n      const p1 = points[start];\n      const p2 = points[end];\n      if (p1 === p2) {\n        result.push(p1);\n        continue;\n      }\n      const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n      const interpolated = _interpolate(p1, p2, t, options.stepped);\n      interpolated[property] = point[property];\n      result.push(interpolated);\n    }\n    return result.length === 1 ? result[0] : result;\n  }\n  pathSegment(ctx, segment, params) {\n    const segmentMethod = _getSegmentMethod(this);\n    return segmentMethod(ctx, this, segment, params);\n  }\n  path(ctx, start, count) {\n    const segments = this.segments;\n    const segmentMethod = _getSegmentMethod(this);\n    let loop = this._loop;\n    start = start || 0;\n    count = count || (this.points.length - start);\n    for (const segment of segments) {\n      loop &= segmentMethod(ctx, this, segment, {start, end: start + count - 1});\n    }\n    return !!loop;\n  }\n  draw(ctx, chartArea, start, count) {\n    const options = this.options || {};\n    const points = this.points || [];\n    if (points.length && options.borderWidth) {\n      ctx.save();\n      draw(ctx, this, start, count);\n      ctx.restore();\n    }\n    if (this.animated) {\n      this._pointsUpdated = false;\n      this._path = undefined;\n    }\n  }\n}\nLineElement.id = 'line';\nLineElement.defaults = {\n  borderCapStyle: 'butt',\n  borderDash: [],\n  borderDashOffset: 0,\n  borderJoinStyle: 'miter',\n  borderWidth: 3,\n  capBezierPoints: true,\n  cubicInterpolationMode: 'default',\n  fill: false,\n  spanGaps: false,\n  stepped: false,\n  tension: 0,\n};\nLineElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\nLineElement.descriptors = {\n  _scriptable: true,\n  _indexable: (name) => name !== 'borderDash' && name !== 'fill',\n};\n\nfunction inRange$1(el, pos, axis, useFinalPosition) {\n  const options = el.options;\n  const {[axis]: value} = el.getProps([axis], useFinalPosition);\n  return (Math.abs(pos - value) < options.radius + options.hitRadius);\n}\nclass PointElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.parsed = undefined;\n    this.skip = undefined;\n    this.stop = undefined;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  inRange(mouseX, mouseY, useFinalPosition) {\n    const options = this.options;\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return ((Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2)) < Math.pow(options.hitRadius + options.radius, 2));\n  }\n  inXRange(mouseX, useFinalPosition) {\n    return inRange$1(this, mouseX, 'x', useFinalPosition);\n  }\n  inYRange(mouseY, useFinalPosition) {\n    return inRange$1(this, mouseY, 'y', useFinalPosition);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y};\n  }\n  size(options) {\n    options = options || this.options || {};\n    let radius = options.radius || 0;\n    radius = Math.max(radius, radius && options.hoverRadius || 0);\n    const borderWidth = radius && options.borderWidth || 0;\n    return (radius + borderWidth) * 2;\n  }\n  draw(ctx, area) {\n    const options = this.options;\n    if (this.skip || options.radius < 0.1 || !_isPointInArea(this, area, this.size(options) / 2)) {\n      return;\n    }\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.fillStyle = options.backgroundColor;\n    drawPoint(ctx, options, this.x, this.y);\n  }\n  getRange() {\n    const options = this.options || {};\n    return options.radius + options.hitRadius;\n  }\n}\nPointElement.id = 'point';\nPointElement.defaults = {\n  borderWidth: 1,\n  hitRadius: 1,\n  hoverBorderWidth: 1,\n  hoverRadius: 4,\n  pointStyle: 'circle',\n  radius: 3,\n  rotation: 0\n};\nPointElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\n\nfunction getBarBounds(bar, useFinalPosition) {\n  const {x, y, base, width, height} = bar.getProps(['x', 'y', 'base', 'width', 'height'], useFinalPosition);\n  let left, right, top, bottom, half;\n  if (bar.horizontal) {\n    half = height / 2;\n    left = Math.min(x, base);\n    right = Math.max(x, base);\n    top = y - half;\n    bottom = y + half;\n  } else {\n    half = width / 2;\n    left = x - half;\n    right = x + half;\n    top = Math.min(y, base);\n    bottom = Math.max(y, base);\n  }\n  return {left, top, right, bottom};\n}\nfunction skipOrLimit(skip, value, min, max) {\n  return skip ? 0 : _limitValue(value, min, max);\n}\nfunction parseBorderWidth(bar, maxW, maxH) {\n  const value = bar.options.borderWidth;\n  const skip = bar.borderSkipped;\n  const o = toTRBL(value);\n  return {\n    t: skipOrLimit(skip.top, o.top, 0, maxH),\n    r: skipOrLimit(skip.right, o.right, 0, maxW),\n    b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n    l: skipOrLimit(skip.left, o.left, 0, maxW)\n  };\n}\nfunction parseBorderRadius(bar, maxW, maxH) {\n  const {enableBorderRadius} = bar.getProps(['enableBorderRadius']);\n  const value = bar.options.borderRadius;\n  const o = toTRBLCorners(value);\n  const maxR = Math.min(maxW, maxH);\n  const skip = bar.borderSkipped;\n  const enableBorder = enableBorderRadius || isObject(value);\n  return {\n    topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n    topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n    bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n    bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n  };\n}\nfunction boundingRects(bar) {\n  const bounds = getBarBounds(bar);\n  const width = bounds.right - bounds.left;\n  const height = bounds.bottom - bounds.top;\n  const border = parseBorderWidth(bar, width / 2, height / 2);\n  const radius = parseBorderRadius(bar, width / 2, height / 2);\n  return {\n    outer: {\n      x: bounds.left,\n      y: bounds.top,\n      w: width,\n      h: height,\n      radius\n    },\n    inner: {\n      x: bounds.left + border.l,\n      y: bounds.top + border.t,\n      w: width - border.l - border.r,\n      h: height - border.t - border.b,\n      radius: {\n        topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n        topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n        bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n        bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r)),\n      }\n    }\n  };\n}\nfunction inRange(bar, x, y, useFinalPosition) {\n  const skipX = x === null;\n  const skipY = y === null;\n  const skipBoth = skipX && skipY;\n  const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n  return bounds\n\t\t&& (skipX || _isBetween(x, bounds.left, bounds.right))\n\t\t&& (skipY || _isBetween(y, bounds.top, bounds.bottom));\n}\nfunction hasRadius(radius) {\n  return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\nfunction addNormalRectPath(ctx, rect) {\n  ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\nfunction inflateRect(rect, amount, refRect = {}) {\n  const x = rect.x !== refRect.x ? -amount : 0;\n  const y = rect.y !== refRect.y ? -amount : 0;\n  const w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\n  const h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\n  return {\n    x: rect.x + x,\n    y: rect.y + y,\n    w: rect.w + w,\n    h: rect.h + h,\n    radius: rect.radius\n  };\n}\nclass BarElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.horizontal = undefined;\n    this.base = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.inflateAmount = undefined;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  draw(ctx) {\n    const {inflateAmount, options: {borderColor, backgroundColor}} = this;\n    const {inner, outer} = boundingRects(this);\n    const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n    ctx.save();\n    if (outer.w !== inner.w || outer.h !== inner.h) {\n      ctx.beginPath();\n      addRectPath(ctx, inflateRect(outer, inflateAmount, inner));\n      ctx.clip();\n      addRectPath(ctx, inflateRect(inner, -inflateAmount, outer));\n      ctx.fillStyle = borderColor;\n      ctx.fill('evenodd');\n    }\n    ctx.beginPath();\n    addRectPath(ctx, inflateRect(inner, inflateAmount));\n    ctx.fillStyle = backgroundColor;\n    ctx.fill();\n    ctx.restore();\n  }\n  inRange(mouseX, mouseY, useFinalPosition) {\n    return inRange(this, mouseX, mouseY, useFinalPosition);\n  }\n  inXRange(mouseX, useFinalPosition) {\n    return inRange(this, mouseX, null, useFinalPosition);\n  }\n  inYRange(mouseY, useFinalPosition) {\n    return inRange(this, null, mouseY, useFinalPosition);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {x, y, base, horizontal} = this.getProps(['x', 'y', 'base', 'horizontal'], useFinalPosition);\n    return {\n      x: horizontal ? (x + base) / 2 : x,\n      y: horizontal ? y : (y + base) / 2\n    };\n  }\n  getRange(axis) {\n    return axis === 'x' ? this.width / 2 : this.height / 2;\n  }\n}\nBarElement.id = 'bar';\nBarElement.defaults = {\n  borderSkipped: 'start',\n  borderWidth: 0,\n  borderRadius: 0,\n  inflateAmount: 'auto',\n  pointStyle: undefined\n};\nBarElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\n\nvar elements = /*#__PURE__*/Object.freeze({\n__proto__: null,\nArcElement: ArcElement,\nLineElement: LineElement,\nPointElement: PointElement,\nBarElement: BarElement\n});\n\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n  const samples = options.samples || availableWidth;\n  if (samples >= count) {\n    return data.slice(start, start + count);\n  }\n  const decimated = [];\n  const bucketWidth = (count - 2) / (samples - 2);\n  let sampledIndex = 0;\n  const endIndex = start + count - 1;\n  let a = start;\n  let i, maxAreaPoint, maxArea, area, nextA;\n  decimated[sampledIndex++] = data[a];\n  for (i = 0; i < samples - 2; i++) {\n    let avgX = 0;\n    let avgY = 0;\n    let j;\n    const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n    const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n    const avgRangeLength = avgRangeEnd - avgRangeStart;\n    for (j = avgRangeStart; j < avgRangeEnd; j++) {\n      avgX += data[j].x;\n      avgY += data[j].y;\n    }\n    avgX /= avgRangeLength;\n    avgY /= avgRangeLength;\n    const rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n    const rangeTo = Math.min(Math.floor((i + 1) * bucketWidth) + 1, count) + start;\n    const {x: pointAx, y: pointAy} = data[a];\n    maxArea = area = -1;\n    for (j = rangeOffs; j < rangeTo; j++) {\n      area = 0.5 * Math.abs(\n        (pointAx - avgX) * (data[j].y - pointAy) -\n        (pointAx - data[j].x) * (avgY - pointAy)\n      );\n      if (area > maxArea) {\n        maxArea = area;\n        maxAreaPoint = data[j];\n        nextA = j;\n      }\n    }\n    decimated[sampledIndex++] = maxAreaPoint;\n    a = nextA;\n  }\n  decimated[sampledIndex++] = data[endIndex];\n  return decimated;\n}\nfunction minMaxDecimation(data, start, count, availableWidth) {\n  let avgX = 0;\n  let countX = 0;\n  let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n  const decimated = [];\n  const endIndex = start + count - 1;\n  const xMin = data[start].x;\n  const xMax = data[endIndex].x;\n  const dx = xMax - xMin;\n  for (i = start; i < start + count; ++i) {\n    point = data[i];\n    x = (point.x - xMin) / dx * availableWidth;\n    y = point.y;\n    const truncX = x | 0;\n    if (truncX === prevX) {\n      if (y < minY) {\n        minY = y;\n        minIndex = i;\n      } else if (y > maxY) {\n        maxY = y;\n        maxIndex = i;\n      }\n      avgX = (countX * avgX + point.x) / ++countX;\n    } else {\n      const lastIndex = i - 1;\n      if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n        const intermediateIndex1 = Math.min(minIndex, maxIndex);\n        const intermediateIndex2 = Math.max(minIndex, maxIndex);\n        if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex1],\n            x: avgX,\n          });\n        }\n        if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex2],\n            x: avgX\n          });\n        }\n      }\n      if (i > 0 && lastIndex !== startIndex) {\n        decimated.push(data[lastIndex]);\n      }\n      decimated.push(point);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n      minIndex = maxIndex = startIndex = i;\n    }\n  }\n  return decimated;\n}\nfunction cleanDecimatedDataset(dataset) {\n  if (dataset._decimated) {\n    const data = dataset._data;\n    delete dataset._decimated;\n    delete dataset._data;\n    Object.defineProperty(dataset, 'data', {value: data});\n  }\n}\nfunction cleanDecimatedData(chart) {\n  chart.data.datasets.forEach((dataset) => {\n    cleanDecimatedDataset(dataset);\n  });\n}\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n  const pointCount = points.length;\n  let start = 0;\n  let count;\n  const {iScale} = meta;\n  const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n  if (minDefined) {\n    start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\n  }\n  if (maxDefined) {\n    count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n  } else {\n    count = pointCount - start;\n  }\n  return {start, count};\n}\nvar plugin_decimation = {\n  id: 'decimation',\n  defaults: {\n    algorithm: 'min-max',\n    enabled: false,\n  },\n  beforeElementsUpdate: (chart, args, options) => {\n    if (!options.enabled) {\n      cleanDecimatedData(chart);\n      return;\n    }\n    const availableWidth = chart.width;\n    chart.data.datasets.forEach((dataset, datasetIndex) => {\n      const {_data, indexAxis} = dataset;\n      const meta = chart.getDatasetMeta(datasetIndex);\n      const data = _data || dataset.data;\n      if (resolve([indexAxis, chart.options.indexAxis]) === 'y') {\n        return;\n      }\n      if (meta.type !== 'line') {\n        return;\n      }\n      const xAxis = chart.scales[meta.xAxisID];\n      if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n        return;\n      }\n      if (chart.options.parsing) {\n        return;\n      }\n      let {start, count} = getStartAndCountOfVisiblePointsSimplified(meta, data);\n      const threshold = options.threshold || 4 * availableWidth;\n      if (count <= threshold) {\n        cleanDecimatedDataset(dataset);\n        return;\n      }\n      if (isNullOrUndef(_data)) {\n        dataset._data = data;\n        delete dataset.data;\n        Object.defineProperty(dataset, 'data', {\n          configurable: true,\n          enumerable: true,\n          get: function() {\n            return this._decimated;\n          },\n          set: function(d) {\n            this._data = d;\n          }\n        });\n      }\n      let decimated;\n      switch (options.algorithm) {\n      case 'lttb':\n        decimated = lttbDecimation(data, start, count, availableWidth, options);\n        break;\n      case 'min-max':\n        decimated = minMaxDecimation(data, start, count, availableWidth);\n        break;\n      default:\n        throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\n      }\n      dataset._decimated = decimated;\n    });\n  },\n  destroy(chart) {\n    cleanDecimatedData(chart);\n  }\n};\n\nfunction getLineByIndex(chart, index) {\n  const meta = chart.getDatasetMeta(index);\n  const visible = meta && chart.isDatasetVisible(index);\n  return visible ? meta.dataset : null;\n}\nfunction parseFillOption(line) {\n  const options = line.options;\n  const fillOption = options.fill;\n  let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n  if (fill === undefined) {\n    fill = !!options.backgroundColor;\n  }\n  if (fill === false || fill === null) {\n    return false;\n  }\n  if (fill === true) {\n    return 'origin';\n  }\n  return fill;\n}\nfunction decodeFill(line, index, count) {\n  const fill = parseFillOption(line);\n  if (isObject(fill)) {\n    return isNaN(fill.value) ? false : fill;\n  }\n  let target = parseFloat(fill);\n  if (isNumberFinite(target) && Math.floor(target) === target) {\n    if (fill[0] === '-' || fill[0] === '+') {\n      target = index + target;\n    }\n    if (target === index || target < 0 || target >= count) {\n      return false;\n    }\n    return target;\n  }\n  return ['origin', 'start', 'end', 'stack', 'shape'].indexOf(fill) >= 0 && fill;\n}\nfunction computeLinearBoundary(source) {\n  const {scale = {}, fill} = source;\n  let target = null;\n  let horizontal;\n  if (fill === 'start') {\n    target = scale.bottom;\n  } else if (fill === 'end') {\n    target = scale.top;\n  } else if (isObject(fill)) {\n    target = scale.getPixelForValue(fill.value);\n  } else if (scale.getBasePixel) {\n    target = scale.getBasePixel();\n  }\n  if (isNumberFinite(target)) {\n    horizontal = scale.isHorizontal();\n    return {\n      x: horizontal ? target : null,\n      y: horizontal ? null : target\n    };\n  }\n  return null;\n}\nclass simpleArc {\n  constructor(opts) {\n    this.x = opts.x;\n    this.y = opts.y;\n    this.radius = opts.radius;\n  }\n  pathSegment(ctx, bounds, opts) {\n    const {x, y, radius} = this;\n    bounds = bounds || {start: 0, end: TAU};\n    ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n    return !opts.bounds;\n  }\n  interpolate(point) {\n    const {x, y, radius} = this;\n    const angle = point.angle;\n    return {\n      x: x + Math.cos(angle) * radius,\n      y: y + Math.sin(angle) * radius,\n      angle\n    };\n  }\n}\nfunction computeCircularBoundary(source) {\n  const {scale, fill} = source;\n  const options = scale.options;\n  const length = scale.getLabels().length;\n  const target = [];\n  const start = options.reverse ? scale.max : scale.min;\n  const end = options.reverse ? scale.min : scale.max;\n  let i, center, value;\n  if (fill === 'start') {\n    value = start;\n  } else if (fill === 'end') {\n    value = end;\n  } else if (isObject(fill)) {\n    value = fill.value;\n  } else {\n    value = scale.getBaseValue();\n  }\n  if (options.grid.circular) {\n    center = scale.getPointPositionForValue(0, start);\n    return new simpleArc({\n      x: center.x,\n      y: center.y,\n      radius: scale.getDistanceFromCenterForValue(value)\n    });\n  }\n  for (i = 0; i < length; ++i) {\n    target.push(scale.getPointPositionForValue(i, value));\n  }\n  return target;\n}\nfunction computeBoundary(source) {\n  const scale = source.scale || {};\n  if (scale.getPointPositionForValue) {\n    return computeCircularBoundary(source);\n  }\n  return computeLinearBoundary(source);\n}\nfunction findSegmentEnd(start, end, points) {\n  for (;end > start; end--) {\n    const point = points[end];\n    if (!isNaN(point.x) && !isNaN(point.y)) {\n      break;\n    }\n  }\n  return end;\n}\nfunction pointsFromSegments(boundary, line) {\n  const {x = null, y = null} = boundary || {};\n  const linePoints = line.points;\n  const points = [];\n  line.segments.forEach(({start, end}) => {\n    end = findSegmentEnd(start, end, linePoints);\n    const first = linePoints[start];\n    const last = linePoints[end];\n    if (y !== null) {\n      points.push({x: first.x, y});\n      points.push({x: last.x, y});\n    } else if (x !== null) {\n      points.push({x, y: first.y});\n      points.push({x, y: last.y});\n    }\n  });\n  return points;\n}\nfunction buildStackLine(source) {\n  const {scale, index, line} = source;\n  const points = [];\n  const segments = line.segments;\n  const sourcePoints = line.points;\n  const linesBelow = getLinesBelow(scale, index);\n  linesBelow.push(createBoundaryLine({x: null, y: scale.bottom}, line));\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    for (let j = segment.start; j <= segment.end; j++) {\n      addPointsBelow(points, sourcePoints[j], linesBelow);\n    }\n  }\n  return new LineElement({points, options: {}});\n}\nfunction getLinesBelow(scale, index) {\n  const below = [];\n  const metas = scale.getMatchingVisibleMetas('line');\n  for (let i = 0; i < metas.length; i++) {\n    const meta = metas[i];\n    if (meta.index === index) {\n      break;\n    }\n    if (!meta.hidden) {\n      below.unshift(meta.dataset);\n    }\n  }\n  return below;\n}\nfunction addPointsBelow(points, sourcePoint, linesBelow) {\n  const postponed = [];\n  for (let j = 0; j < linesBelow.length; j++) {\n    const line = linesBelow[j];\n    const {first, last, point} = findPoint(line, sourcePoint, 'x');\n    if (!point || (first && last)) {\n      continue;\n    }\n    if (first) {\n      postponed.unshift(point);\n    } else {\n      points.push(point);\n      if (!last) {\n        break;\n      }\n    }\n  }\n  points.push(...postponed);\n}\nfunction findPoint(line, sourcePoint, property) {\n  const point = line.interpolate(sourcePoint, property);\n  if (!point) {\n    return {};\n  }\n  const pointValue = point[property];\n  const segments = line.segments;\n  const linePoints = line.points;\n  let first = false;\n  let last = false;\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    const firstValue = linePoints[segment.start][property];\n    const lastValue = linePoints[segment.end][property];\n    if (_isBetween(pointValue, firstValue, lastValue)) {\n      first = pointValue === firstValue;\n      last = pointValue === lastValue;\n      break;\n    }\n  }\n  return {first, last, point};\n}\nfunction getTarget(source) {\n  const {chart, fill, line} = source;\n  if (isNumberFinite(fill)) {\n    return getLineByIndex(chart, fill);\n  }\n  if (fill === 'stack') {\n    return buildStackLine(source);\n  }\n  if (fill === 'shape') {\n    return true;\n  }\n  const boundary = computeBoundary(source);\n  if (boundary instanceof simpleArc) {\n    return boundary;\n  }\n  return createBoundaryLine(boundary, line);\n}\nfunction createBoundaryLine(boundary, line) {\n  let points = [];\n  let _loop = false;\n  if (isArray(boundary)) {\n    _loop = true;\n    points = boundary;\n  } else {\n    points = pointsFromSegments(boundary, line);\n  }\n  return points.length ? new LineElement({\n    points,\n    options: {tension: 0},\n    _loop,\n    _fullLoop: _loop\n  }) : null;\n}\nfunction resolveTarget(sources, index, propagate) {\n  const source = sources[index];\n  let fill = source.fill;\n  const visited = [index];\n  let target;\n  if (!propagate) {\n    return fill;\n  }\n  while (fill !== false && visited.indexOf(fill) === -1) {\n    if (!isNumberFinite(fill)) {\n      return fill;\n    }\n    target = sources[fill];\n    if (!target) {\n      return false;\n    }\n    if (target.visible) {\n      return fill;\n    }\n    visited.push(fill);\n    fill = target.fill;\n  }\n  return false;\n}\nfunction _clip(ctx, target, clipY) {\n  const {segments, points} = target;\n  let first = true;\n  let lineLoop = false;\n  ctx.beginPath();\n  for (const segment of segments) {\n    const {start, end} = segment;\n    const firstPoint = points[start];\n    const lastPoint = points[findSegmentEnd(start, end, points)];\n    if (first) {\n      ctx.moveTo(firstPoint.x, firstPoint.y);\n      first = false;\n    } else {\n      ctx.lineTo(firstPoint.x, clipY);\n      ctx.lineTo(firstPoint.x, firstPoint.y);\n    }\n    lineLoop = !!target.pathSegment(ctx, segment, {move: lineLoop});\n    if (lineLoop) {\n      ctx.closePath();\n    } else {\n      ctx.lineTo(lastPoint.x, clipY);\n    }\n  }\n  ctx.lineTo(target.first().x, clipY);\n  ctx.closePath();\n  ctx.clip();\n}\nfunction getBounds(property, first, last, loop) {\n  if (loop) {\n    return;\n  }\n  let start = first[property];\n  let end = last[property];\n  if (property === 'angle') {\n    start = _normalizeAngle(start);\n    end = _normalizeAngle(end);\n  }\n  return {property, start, end};\n}\nfunction _getEdge(a, b, prop, fn) {\n  if (a && b) {\n    return fn(a[prop], b[prop]);\n  }\n  return a ? a[prop] : b ? b[prop] : 0;\n}\nfunction _segments(line, target, property) {\n  const segments = line.segments;\n  const points = line.points;\n  const tpoints = target.points;\n  const parts = [];\n  for (const segment of segments) {\n    let {start, end} = segment;\n    end = findSegmentEnd(start, end, points);\n    const bounds = getBounds(property, points[start], points[end], segment.loop);\n    if (!target.segments) {\n      parts.push({\n        source: segment,\n        target: bounds,\n        start: points[start],\n        end: points[end]\n      });\n      continue;\n    }\n    const targetSegments = _boundSegments(target, bounds);\n    for (const tgt of targetSegments) {\n      const subBounds = getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n      const fillSources = _boundSegment(segment, points, subBounds);\n      for (const fillSource of fillSources) {\n        parts.push({\n          source: fillSource,\n          target: tgt,\n          start: {\n            [property]: _getEdge(bounds, subBounds, 'start', Math.max)\n          },\n          end: {\n            [property]: _getEdge(bounds, subBounds, 'end', Math.min)\n          }\n        });\n      }\n    }\n  }\n  return parts;\n}\nfunction clipBounds(ctx, scale, bounds) {\n  const {top, bottom} = scale.chart.chartArea;\n  const {property, start, end} = bounds || {};\n  if (property === 'x') {\n    ctx.beginPath();\n    ctx.rect(start, top, end - start, bottom - top);\n    ctx.clip();\n  }\n}\nfunction interpolatedLineTo(ctx, target, point, property) {\n  const interpolatedPoint = target.interpolate(point, property);\n  if (interpolatedPoint) {\n    ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n  }\n}\nfunction _fill(ctx, cfg) {\n  const {line, target, property, color, scale} = cfg;\n  const segments = _segments(line, target, property);\n  for (const {source: src, target: tgt, start, end} of segments) {\n    const {style: {backgroundColor = color} = {}} = src;\n    const notShape = target !== true;\n    ctx.save();\n    ctx.fillStyle = backgroundColor;\n    clipBounds(ctx, scale, notShape && getBounds(property, start, end));\n    ctx.beginPath();\n    const lineLoop = !!line.pathSegment(ctx, src);\n    let loop;\n    if (notShape) {\n      if (lineLoop) {\n        ctx.closePath();\n      } else {\n        interpolatedLineTo(ctx, target, end, property);\n      }\n      const targetLoop = !!target.pathSegment(ctx, tgt, {move: lineLoop, reverse: true});\n      loop = lineLoop && targetLoop;\n      if (!loop) {\n        interpolatedLineTo(ctx, target, start, property);\n      }\n    }\n    ctx.closePath();\n    ctx.fill(loop ? 'evenodd' : 'nonzero');\n    ctx.restore();\n  }\n}\nfunction doFill(ctx, cfg) {\n  const {line, target, above, below, area, scale} = cfg;\n  const property = line._loop ? 'angle' : cfg.axis;\n  ctx.save();\n  if (property === 'x' && below !== above) {\n    _clip(ctx, target, area.top);\n    _fill(ctx, {line, target, color: above, scale, property});\n    ctx.restore();\n    ctx.save();\n    _clip(ctx, target, area.bottom);\n  }\n  _fill(ctx, {line, target, color: below, scale, property});\n  ctx.restore();\n}\nfunction drawfill(ctx, source, area) {\n  const target = getTarget(source);\n  const {line, scale, axis} = source;\n  const lineOpts = line.options;\n  const fillOption = lineOpts.fill;\n  const color = lineOpts.backgroundColor;\n  const {above = color, below = color} = fillOption || {};\n  if (target && line.points.length) {\n    clipArea(ctx, area);\n    doFill(ctx, {line, target, above, below, area, scale, axis});\n    unclipArea(ctx);\n  }\n}\nvar plugin_filler = {\n  id: 'filler',\n  afterDatasetsUpdate(chart, _args, options) {\n    const count = (chart.data.datasets || []).length;\n    const sources = [];\n    let meta, i, line, source;\n    for (i = 0; i < count; ++i) {\n      meta = chart.getDatasetMeta(i);\n      line = meta.dataset;\n      source = null;\n      if (line && line.options && line instanceof LineElement) {\n        source = {\n          visible: chart.isDatasetVisible(i),\n          index: i,\n          fill: decodeFill(line, i, count),\n          chart,\n          axis: meta.controller.options.indexAxis,\n          scale: meta.vScale,\n          line,\n        };\n      }\n      meta.$filler = source;\n      sources.push(source);\n    }\n    for (i = 0; i < count; ++i) {\n      source = sources[i];\n      if (!source || source.fill === false) {\n        continue;\n      }\n      source.fill = resolveTarget(sources, i, options.propagate);\n    }\n  },\n  beforeDraw(chart, _args, options) {\n    const draw = options.drawTime === 'beforeDraw';\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const area = chart.chartArea;\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n      if (!source) {\n        continue;\n      }\n      source.line.updateControlPoints(area, source.axis);\n      if (draw) {\n        drawfill(chart.ctx, source, area);\n      }\n    }\n  },\n  beforeDatasetsDraw(chart, _args, options) {\n    if (options.drawTime !== 'beforeDatasetsDraw') {\n      return;\n    }\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n      if (source) {\n        drawfill(chart.ctx, source, chart.chartArea);\n      }\n    }\n  },\n  beforeDatasetDraw(chart, args, options) {\n    const source = args.meta.$filler;\n    if (!source || source.fill === false || options.drawTime !== 'beforeDatasetDraw') {\n      return;\n    }\n    drawfill(chart.ctx, source, chart.chartArea);\n  },\n  defaults: {\n    propagate: true,\n    drawTime: 'beforeDatasetDraw'\n  }\n};\n\nconst getBoxSize = (labelOpts, fontSize) => {\n  let {boxHeight = fontSize, boxWidth = fontSize} = labelOpts;\n  if (labelOpts.usePointStyle) {\n    boxHeight = Math.min(boxHeight, fontSize);\n    boxWidth = Math.min(boxWidth, fontSize);\n  }\n  return {\n    boxWidth,\n    boxHeight,\n    itemHeight: Math.max(fontSize, boxHeight)\n  };\n};\nconst itemsEqual = (a, b) => a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\nclass Legend extends Element {\n  constructor(config) {\n    super();\n    this._added = false;\n    this.legendHitBoxes = [];\n    this._hoveredItem = null;\n    this.doughnutMode = false;\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this.legendItems = undefined;\n    this.columnSizes = undefined;\n    this.lineWidths = undefined;\n    this.maxHeight = undefined;\n    this.maxWidth = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this._margins = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n  update(maxWidth, maxHeight, margins) {\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins;\n    this.setDimensions();\n    this.buildLabels();\n    this.fit();\n  }\n  setDimensions() {\n    if (this.isHorizontal()) {\n      this.width = this.maxWidth;\n      this.left = this._margins.left;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n      this.top = this._margins.top;\n      this.bottom = this.height;\n    }\n  }\n  buildLabels() {\n    const labelOpts = this.options.labels || {};\n    let legendItems = callback(labelOpts.generateLabels, [this.chart], this) || [];\n    if (labelOpts.filter) {\n      legendItems = legendItems.filter((item) => labelOpts.filter(item, this.chart.data));\n    }\n    if (labelOpts.sort) {\n      legendItems = legendItems.sort((a, b) => labelOpts.sort(a, b, this.chart.data));\n    }\n    if (this.options.reverse) {\n      legendItems.reverse();\n    }\n    this.legendItems = legendItems;\n  }\n  fit() {\n    const {options, ctx} = this;\n    if (!options.display) {\n      this.width = this.height = 0;\n      return;\n    }\n    const labelOpts = options.labels;\n    const labelFont = toFont(labelOpts.font);\n    const fontSize = labelFont.size;\n    const titleHeight = this._computeTitleHeight();\n    const {boxWidth, itemHeight} = getBoxSize(labelOpts, fontSize);\n    let width, height;\n    ctx.font = labelFont.string;\n    if (this.isHorizontal()) {\n      width = this.maxWidth;\n      height = this._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    } else {\n      height = this.maxHeight;\n      width = this._fitCols(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    }\n    this.width = Math.min(width, options.maxWidth || this.maxWidth);\n    this.height = Math.min(height, options.maxHeight || this.maxHeight);\n  }\n  _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n    const {ctx, maxWidth, options: {labels: {padding}}} = this;\n    const hitboxes = this.legendHitBoxes = [];\n    const lineWidths = this.lineWidths = [0];\n    const lineHeight = itemHeight + padding;\n    let totalHeight = titleHeight;\n    ctx.textAlign = 'left';\n    ctx.textBaseline = 'middle';\n    let row = -1;\n    let top = -lineHeight;\n    this.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n      if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n        totalHeight += lineHeight;\n        lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n        top += lineHeight;\n        row++;\n      }\n      hitboxes[i] = {left: 0, top, row, width: itemWidth, height: itemHeight};\n      lineWidths[lineWidths.length - 1] += itemWidth + padding;\n    });\n    return totalHeight;\n  }\n  _fitCols(titleHeight, fontSize, boxWidth, itemHeight) {\n    const {ctx, maxHeight, options: {labels: {padding}}} = this;\n    const hitboxes = this.legendHitBoxes = [];\n    const columnSizes = this.columnSizes = [];\n    const heightLimit = maxHeight - titleHeight;\n    let totalWidth = padding;\n    let currentColWidth = 0;\n    let currentColHeight = 0;\n    let left = 0;\n    let col = 0;\n    this.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n      if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n        totalWidth += currentColWidth + padding;\n        columnSizes.push({width: currentColWidth, height: currentColHeight});\n        left += currentColWidth + padding;\n        col++;\n        currentColWidth = currentColHeight = 0;\n      }\n      hitboxes[i] = {left, top: currentColHeight, col, width: itemWidth, height: itemHeight};\n      currentColWidth = Math.max(currentColWidth, itemWidth);\n      currentColHeight += itemHeight + padding;\n    });\n    totalWidth += currentColWidth;\n    columnSizes.push({width: currentColWidth, height: currentColHeight});\n    return totalWidth;\n  }\n  adjustHitBoxes() {\n    if (!this.options.display) {\n      return;\n    }\n    const titleHeight = this._computeTitleHeight();\n    const {legendHitBoxes: hitboxes, options: {align, labels: {padding}, rtl}} = this;\n    const rtlHelper = getRtlAdapter(rtl, this.left, this.width);\n    if (this.isHorizontal()) {\n      let row = 0;\n      let left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n      for (const hitbox of hitboxes) {\n        if (row !== hitbox.row) {\n          row = hitbox.row;\n          left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n        }\n        hitbox.top += this.top + titleHeight + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\n        left += hitbox.width + padding;\n      }\n    } else {\n      let col = 0;\n      let top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n      for (const hitbox of hitboxes) {\n        if (hitbox.col !== col) {\n          col = hitbox.col;\n          top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n        }\n        hitbox.top = top;\n        hitbox.left += this.left + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(hitbox.left), hitbox.width);\n        top += hitbox.height + padding;\n      }\n    }\n  }\n  isHorizontal() {\n    return this.options.position === 'top' || this.options.position === 'bottom';\n  }\n  draw() {\n    if (this.options.display) {\n      const ctx = this.ctx;\n      clipArea(ctx, this);\n      this._draw();\n      unclipArea(ctx);\n    }\n  }\n  _draw() {\n    const {options: opts, columnSizes, lineWidths, ctx} = this;\n    const {align, labels: labelOpts} = opts;\n    const defaultColor = defaults.color;\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const labelFont = toFont(labelOpts.font);\n    const {color: fontColor, padding} = labelOpts;\n    const fontSize = labelFont.size;\n    const halfFontSize = fontSize / 2;\n    let cursor;\n    this.drawTitle();\n    ctx.textAlign = rtlHelper.textAlign('left');\n    ctx.textBaseline = 'middle';\n    ctx.lineWidth = 0.5;\n    ctx.font = labelFont.string;\n    const {boxWidth, boxHeight, itemHeight} = getBoxSize(labelOpts, fontSize);\n    const drawLegendBox = function(x, y, legendItem) {\n      if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n        return;\n      }\n      ctx.save();\n      const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n      ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n      ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n      ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n      ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n      ctx.lineWidth = lineWidth;\n      ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n      ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n      if (labelOpts.usePointStyle) {\n        const drawOptions = {\n          radius: boxWidth * Math.SQRT2 / 2,\n          pointStyle: legendItem.pointStyle,\n          rotation: legendItem.rotation,\n          borderWidth: lineWidth\n        };\n        const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n        const centerY = y + halfFontSize;\n        drawPoint(ctx, drawOptions, centerX, centerY);\n      } else {\n        const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n        const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n        const borderRadius = toTRBLCorners(legendItem.borderRadius);\n        ctx.beginPath();\n        if (Object.values(borderRadius).some(v => v !== 0)) {\n          addRoundedRectPath(ctx, {\n            x: xBoxLeft,\n            y: yBoxTop,\n            w: boxWidth,\n            h: boxHeight,\n            radius: borderRadius,\n          });\n        } else {\n          ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n        }\n        ctx.fill();\n        if (lineWidth !== 0) {\n          ctx.stroke();\n        }\n      }\n      ctx.restore();\n    };\n    const fillText = function(x, y, legendItem) {\n      renderText(ctx, legendItem.text, x, y + (itemHeight / 2), labelFont, {\n        strikethrough: legendItem.hidden,\n        textAlign: rtlHelper.textAlign(legendItem.textAlign)\n      });\n    };\n    const isHorizontal = this.isHorizontal();\n    const titleHeight = this._computeTitleHeight();\n    if (isHorizontal) {\n      cursor = {\n        x: _alignStartEnd(align, this.left + padding, this.right - lineWidths[0]),\n        y: this.top + padding + titleHeight,\n        line: 0\n      };\n    } else {\n      cursor = {\n        x: this.left + padding,\n        y: _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[0].height),\n        line: 0\n      };\n    }\n    overrideTextDirection(this.ctx, opts.textDirection);\n    const lineHeight = itemHeight + padding;\n    this.legendItems.forEach((legendItem, i) => {\n      ctx.strokeStyle = legendItem.fontColor || fontColor;\n      ctx.fillStyle = legendItem.fontColor || fontColor;\n      const textWidth = ctx.measureText(legendItem.text).width;\n      const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n      const width = boxWidth + halfFontSize + textWidth;\n      let x = cursor.x;\n      let y = cursor.y;\n      rtlHelper.setWidth(this.width);\n      if (isHorizontal) {\n        if (i > 0 && x + width + padding > this.right) {\n          y = cursor.y += lineHeight;\n          cursor.line++;\n          x = cursor.x = _alignStartEnd(align, this.left + padding, this.right - lineWidths[cursor.line]);\n        }\n      } else if (i > 0 && y + lineHeight > this.bottom) {\n        x = cursor.x = x + columnSizes[cursor.line].width + padding;\n        cursor.line++;\n        y = cursor.y = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[cursor.line].height);\n      }\n      const realX = rtlHelper.x(x);\n      drawLegendBox(realX, y, legendItem);\n      x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : this.right, opts.rtl);\n      fillText(rtlHelper.x(x), y, legendItem);\n      if (isHorizontal) {\n        cursor.x += width + padding;\n      } else {\n        cursor.y += lineHeight;\n      }\n    });\n    restoreTextDirection(this.ctx, opts.textDirection);\n  }\n  drawTitle() {\n    const opts = this.options;\n    const titleOpts = opts.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n    if (!titleOpts.display) {\n      return;\n    }\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const ctx = this.ctx;\n    const position = titleOpts.position;\n    const halfFontSize = titleFont.size / 2;\n    const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n    let y;\n    let left = this.left;\n    let maxWidth = this.width;\n    if (this.isHorizontal()) {\n      maxWidth = Math.max(...this.lineWidths);\n      y = this.top + topPaddingPlusHalfFontSize;\n      left = _alignStartEnd(opts.align, left, this.right - maxWidth);\n    } else {\n      const maxHeight = this.columnSizes.reduce((acc, size) => Math.max(acc, size.height), 0);\n      y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, this.top, this.bottom - maxHeight - opts.labels.padding - this._computeTitleHeight());\n    }\n    const x = _alignStartEnd(position, left, left + maxWidth);\n    ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n    ctx.textBaseline = 'middle';\n    ctx.strokeStyle = titleOpts.color;\n    ctx.fillStyle = titleOpts.color;\n    ctx.font = titleFont.string;\n    renderText(ctx, titleOpts.text, x, y, titleFont);\n  }\n  _computeTitleHeight() {\n    const titleOpts = this.options.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n    return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n  }\n  _getLegendItemAt(x, y) {\n    let i, hitBox, lh;\n    if (_isBetween(x, this.left, this.right)\n      && _isBetween(y, this.top, this.bottom)) {\n      lh = this.legendHitBoxes;\n      for (i = 0; i < lh.length; ++i) {\n        hitBox = lh[i];\n        if (_isBetween(x, hitBox.left, hitBox.left + hitBox.width)\n          && _isBetween(y, hitBox.top, hitBox.top + hitBox.height)) {\n          return this.legendItems[i];\n        }\n      }\n    }\n    return null;\n  }\n  handleEvent(e) {\n    const opts = this.options;\n    if (!isListened(e.type, opts)) {\n      return;\n    }\n    const hoveredItem = this._getLegendItemAt(e.x, e.y);\n    if (e.type === 'mousemove') {\n      const previous = this._hoveredItem;\n      const sameItem = itemsEqual(previous, hoveredItem);\n      if (previous && !sameItem) {\n        callback(opts.onLeave, [e, previous, this], this);\n      }\n      this._hoveredItem = hoveredItem;\n      if (hoveredItem && !sameItem) {\n        callback(opts.onHover, [e, hoveredItem, this], this);\n      }\n    } else if (hoveredItem) {\n      callback(opts.onClick, [e, hoveredItem, this], this);\n    }\n  }\n}\nfunction isListened(type, opts) {\n  if (type === 'mousemove' && (opts.onHover || opts.onLeave)) {\n    return true;\n  }\n  if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n    return true;\n  }\n  return false;\n}\nvar plugin_legend = {\n  id: 'legend',\n  _element: Legend,\n  start(chart, _args, options) {\n    const legend = chart.legend = new Legend({ctx: chart.ctx, options, chart});\n    layouts.configure(chart, legend, options);\n    layouts.addBox(chart, legend);\n  },\n  stop(chart) {\n    layouts.removeBox(chart, chart.legend);\n    delete chart.legend;\n  },\n  beforeUpdate(chart, _args, options) {\n    const legend = chart.legend;\n    layouts.configure(chart, legend, options);\n    legend.options = options;\n  },\n  afterUpdate(chart) {\n    const legend = chart.legend;\n    legend.buildLabels();\n    legend.adjustHitBoxes();\n  },\n  afterEvent(chart, args) {\n    if (!args.replay) {\n      chart.legend.handleEvent(args.event);\n    }\n  },\n  defaults: {\n    display: true,\n    position: 'top',\n    align: 'center',\n    fullSize: true,\n    reverse: false,\n    weight: 1000,\n    onClick(e, legendItem, legend) {\n      const index = legendItem.datasetIndex;\n      const ci = legend.chart;\n      if (ci.isDatasetVisible(index)) {\n        ci.hide(index);\n        legendItem.hidden = true;\n      } else {\n        ci.show(index);\n        legendItem.hidden = false;\n      }\n    },\n    onHover: null,\n    onLeave: null,\n    labels: {\n      color: (ctx) => ctx.chart.options.color,\n      boxWidth: 40,\n      padding: 10,\n      generateLabels(chart) {\n        const datasets = chart.data.datasets;\n        const {labels: {usePointStyle, pointStyle, textAlign, color}} = chart.legend.options;\n        return chart._getSortedDatasetMetas().map((meta) => {\n          const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n          const borderWidth = toPadding(style.borderWidth);\n          return {\n            text: datasets[meta.index].label,\n            fillStyle: style.backgroundColor,\n            fontColor: color,\n            hidden: !meta.visible,\n            lineCap: style.borderCapStyle,\n            lineDash: style.borderDash,\n            lineDashOffset: style.borderDashOffset,\n            lineJoin: style.borderJoinStyle,\n            lineWidth: (borderWidth.width + borderWidth.height) / 4,\n            strokeStyle: style.borderColor,\n            pointStyle: pointStyle || style.pointStyle,\n            rotation: style.rotation,\n            textAlign: textAlign || style.textAlign,\n            borderRadius: 0,\n            datasetIndex: meta.index\n          };\n        }, this);\n      }\n    },\n    title: {\n      color: (ctx) => ctx.chart.options.color,\n      display: false,\n      position: 'center',\n      text: '',\n    }\n  },\n  descriptors: {\n    _scriptable: (name) => !name.startsWith('on'),\n    labels: {\n      _scriptable: (name) => !['generateLabels', 'filter', 'sort'].includes(name),\n    }\n  },\n};\n\nclass Title extends Element {\n  constructor(config) {\n    super();\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this._padding = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n  update(maxWidth, maxHeight) {\n    const opts = this.options;\n    this.left = 0;\n    this.top = 0;\n    if (!opts.display) {\n      this.width = this.height = this.right = this.bottom = 0;\n      return;\n    }\n    this.width = this.right = maxWidth;\n    this.height = this.bottom = maxHeight;\n    const lineCount = isArray(opts.text) ? opts.text.length : 1;\n    this._padding = toPadding(opts.padding);\n    const textSize = lineCount * toFont(opts.font).lineHeight + this._padding.height;\n    if (this.isHorizontal()) {\n      this.height = textSize;\n    } else {\n      this.width = textSize;\n    }\n  }\n  isHorizontal() {\n    const pos = this.options.position;\n    return pos === 'top' || pos === 'bottom';\n  }\n  _drawArgs(offset) {\n    const {top, left, bottom, right, options} = this;\n    const align = options.align;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n    if (this.isHorizontal()) {\n      titleX = _alignStartEnd(align, left, right);\n      titleY = top + offset;\n      maxWidth = right - left;\n    } else {\n      if (options.position === 'left') {\n        titleX = left + offset;\n        titleY = _alignStartEnd(align, bottom, top);\n        rotation = PI * -0.5;\n      } else {\n        titleX = right - offset;\n        titleY = _alignStartEnd(align, top, bottom);\n        rotation = PI * 0.5;\n      }\n      maxWidth = bottom - top;\n    }\n    return {titleX, titleY, maxWidth, rotation};\n  }\n  draw() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    if (!opts.display) {\n      return;\n    }\n    const fontOpts = toFont(opts.font);\n    const lineHeight = fontOpts.lineHeight;\n    const offset = lineHeight / 2 + this._padding.top;\n    const {titleX, titleY, maxWidth, rotation} = this._drawArgs(offset);\n    renderText(ctx, opts.text, 0, 0, fontOpts, {\n      color: opts.color,\n      maxWidth,\n      rotation,\n      textAlign: _toLeftRightCenter(opts.align),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n}\nfunction createTitle(chart, titleOpts) {\n  const title = new Title({\n    ctx: chart.ctx,\n    options: titleOpts,\n    chart\n  });\n  layouts.configure(chart, title, titleOpts);\n  layouts.addBox(chart, title);\n  chart.titleBlock = title;\n}\nvar plugin_title = {\n  id: 'title',\n  _element: Title,\n  start(chart, _args, options) {\n    createTitle(chart, options);\n  },\n  stop(chart) {\n    const titleBlock = chart.titleBlock;\n    layouts.removeBox(chart, titleBlock);\n    delete chart.titleBlock;\n  },\n  beforeUpdate(chart, _args, options) {\n    const title = chart.titleBlock;\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'bold',\n    },\n    fullSize: true,\n    padding: 10,\n    position: 'top',\n    text: '',\n    weight: 2000\n  },\n  defaultRoutes: {\n    color: 'color'\n  },\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n\nconst map = new WeakMap();\nvar plugin_subtitle = {\n  id: 'subtitle',\n  start(chart, _args, options) {\n    const title = new Title({\n      ctx: chart.ctx,\n      options,\n      chart\n    });\n    layouts.configure(chart, title, options);\n    layouts.addBox(chart, title);\n    map.set(chart, title);\n  },\n  stop(chart) {\n    layouts.removeBox(chart, map.get(chart));\n    map.delete(chart);\n  },\n  beforeUpdate(chart, _args, options) {\n    const title = map.get(chart);\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'normal',\n    },\n    fullSize: true,\n    padding: 0,\n    position: 'top',\n    text: '',\n    weight: 1500\n  },\n  defaultRoutes: {\n    color: 'color'\n  },\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n\nconst positioners = {\n  average(items) {\n    if (!items.length) {\n      return false;\n    }\n    let i, len;\n    let x = 0;\n    let y = 0;\n    let count = 0;\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const pos = el.tooltipPosition();\n        x += pos.x;\n        y += pos.y;\n        ++count;\n      }\n    }\n    return {\n      x: x / count,\n      y: y / count\n    };\n  },\n  nearest(items, eventPosition) {\n    if (!items.length) {\n      return false;\n    }\n    let x = eventPosition.x;\n    let y = eventPosition.y;\n    let minDistance = Number.POSITIVE_INFINITY;\n    let i, len, nearestElement;\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const center = el.getCenterPoint();\n        const d = distanceBetweenPoints(eventPosition, center);\n        if (d < minDistance) {\n          minDistance = d;\n          nearestElement = el;\n        }\n      }\n    }\n    if (nearestElement) {\n      const tp = nearestElement.tooltipPosition();\n      x = tp.x;\n      y = tp.y;\n    }\n    return {\n      x,\n      y\n    };\n  }\n};\nfunction pushOrConcat(base, toPush) {\n  if (toPush) {\n    if (isArray(toPush)) {\n      Array.prototype.push.apply(base, toPush);\n    } else {\n      base.push(toPush);\n    }\n  }\n  return base;\n}\nfunction splitNewlines(str) {\n  if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n    return str.split('\\n');\n  }\n  return str;\n}\nfunction createTooltipItem(chart, item) {\n  const {element, datasetIndex, index} = item;\n  const controller = chart.getDatasetMeta(datasetIndex).controller;\n  const {label, value} = controller.getLabelAndValue(index);\n  return {\n    chart,\n    label,\n    parsed: controller.getParsed(index),\n    raw: chart.data.datasets[datasetIndex].data[index],\n    formattedValue: value,\n    dataset: controller.getDataset(),\n    dataIndex: index,\n    datasetIndex,\n    element\n  };\n}\nfunction getTooltipSize(tooltip, options) {\n  const ctx = tooltip.chart.ctx;\n  const {body, footer, title} = tooltip;\n  const {boxWidth, boxHeight} = options;\n  const bodyFont = toFont(options.bodyFont);\n  const titleFont = toFont(options.titleFont);\n  const footerFont = toFont(options.footerFont);\n  const titleLineCount = title.length;\n  const footerLineCount = footer.length;\n  const bodyLineItemCount = body.length;\n  const padding = toPadding(options.padding);\n  let height = padding.height;\n  let width = 0;\n  let combinedBodyLength = body.reduce((count, bodyItem) => count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n  combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n  if (titleLineCount) {\n    height += titleLineCount * titleFont.lineHeight\n\t\t\t+ (titleLineCount - 1) * options.titleSpacing\n\t\t\t+ options.titleMarginBottom;\n  }\n  if (combinedBodyLength) {\n    const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n    height += bodyLineItemCount * bodyLineHeight\n\t\t\t+ (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight\n\t\t\t+ (combinedBodyLength - 1) * options.bodySpacing;\n  }\n  if (footerLineCount) {\n    height += options.footerMarginTop\n\t\t\t+ footerLineCount * footerFont.lineHeight\n\t\t\t+ (footerLineCount - 1) * options.footerSpacing;\n  }\n  let widthPadding = 0;\n  const maxLineWidth = function(line) {\n    width = Math.max(width, ctx.measureText(line).width + widthPadding);\n  };\n  ctx.save();\n  ctx.font = titleFont.string;\n  each(tooltip.title, maxLineWidth);\n  ctx.font = bodyFont.string;\n  each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n  widthPadding = options.displayColors ? (boxWidth + 2 + options.boxPadding) : 0;\n  each(body, (bodyItem) => {\n    each(bodyItem.before, maxLineWidth);\n    each(bodyItem.lines, maxLineWidth);\n    each(bodyItem.after, maxLineWidth);\n  });\n  widthPadding = 0;\n  ctx.font = footerFont.string;\n  each(tooltip.footer, maxLineWidth);\n  ctx.restore();\n  width += padding.width;\n  return {width, height};\n}\nfunction determineYAlign(chart, size) {\n  const {y, height} = size;\n  if (y < height / 2) {\n    return 'top';\n  } else if (y > (chart.height - height / 2)) {\n    return 'bottom';\n  }\n  return 'center';\n}\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n  const {x, width} = size;\n  const caret = options.caretSize + options.caretPadding;\n  if (xAlign === 'left' && x + width + caret > chart.width) {\n    return true;\n  }\n  if (xAlign === 'right' && x - width - caret < 0) {\n    return true;\n  }\n}\nfunction determineXAlign(chart, options, size, yAlign) {\n  const {x, width} = size;\n  const {width: chartWidth, chartArea: {left, right}} = chart;\n  let xAlign = 'center';\n  if (yAlign === 'center') {\n    xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n  } else if (x <= width / 2) {\n    xAlign = 'left';\n  } else if (x >= chartWidth - width / 2) {\n    xAlign = 'right';\n  }\n  if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n    xAlign = 'center';\n  }\n  return xAlign;\n}\nfunction determineAlignment(chart, options, size) {\n  const yAlign = size.yAlign || options.yAlign || determineYAlign(chart, size);\n  return {\n    xAlign: size.xAlign || options.xAlign || determineXAlign(chart, options, size, yAlign),\n    yAlign\n  };\n}\nfunction alignX(size, xAlign) {\n  let {x, width} = size;\n  if (xAlign === 'right') {\n    x -= width;\n  } else if (xAlign === 'center') {\n    x -= (width / 2);\n  }\n  return x;\n}\nfunction alignY(size, yAlign, paddingAndSize) {\n  let {y, height} = size;\n  if (yAlign === 'top') {\n    y += paddingAndSize;\n  } else if (yAlign === 'bottom') {\n    y -= height + paddingAndSize;\n  } else {\n    y -= (height / 2);\n  }\n  return y;\n}\nfunction getBackgroundPoint(options, size, alignment, chart) {\n  const {caretSize, caretPadding, cornerRadius} = options;\n  const {xAlign, yAlign} = alignment;\n  const paddingAndSize = caretSize + caretPadding;\n  const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(cornerRadius);\n  let x = alignX(size, xAlign);\n  const y = alignY(size, yAlign, paddingAndSize);\n  if (yAlign === 'center') {\n    if (xAlign === 'left') {\n      x += paddingAndSize;\n    } else if (xAlign === 'right') {\n      x -= paddingAndSize;\n    }\n  } else if (xAlign === 'left') {\n    x -= Math.max(topLeft, bottomLeft) + caretSize;\n  } else if (xAlign === 'right') {\n    x += Math.max(topRight, bottomRight) + caretSize;\n  }\n  return {\n    x: _limitValue(x, 0, chart.width - size.width),\n    y: _limitValue(y, 0, chart.height - size.height)\n  };\n}\nfunction getAlignedX(tooltip, align, options) {\n  const padding = toPadding(options.padding);\n  return align === 'center'\n    ? tooltip.x + tooltip.width / 2\n    : align === 'right'\n      ? tooltip.x + tooltip.width - padding.right\n      : tooltip.x + padding.left;\n}\nfunction getBeforeAfterBodyLines(callback) {\n  return pushOrConcat([], splitNewlines(callback));\n}\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n  return createContext(parent, {\n    tooltip,\n    tooltipItems,\n    type: 'tooltip'\n  });\n}\nfunction overrideCallbacks(callbacks, context) {\n  const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n  return override ? callbacks.override(override) : callbacks;\n}\nclass Tooltip extends Element {\n  constructor(config) {\n    super();\n    this.opacity = 0;\n    this._active = [];\n    this._eventPosition = undefined;\n    this._size = undefined;\n    this._cachedAnimations = undefined;\n    this._tooltipItems = [];\n    this.$animations = undefined;\n    this.$context = undefined;\n    this.chart = config.chart || config._chart;\n    this._chart = this.chart;\n    this.options = config.options;\n    this.dataPoints = undefined;\n    this.title = undefined;\n    this.beforeBody = undefined;\n    this.body = undefined;\n    this.afterBody = undefined;\n    this.footer = undefined;\n    this.xAlign = undefined;\n    this.yAlign = undefined;\n    this.x = undefined;\n    this.y = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this.caretX = undefined;\n    this.caretY = undefined;\n    this.labelColors = undefined;\n    this.labelPointStyles = undefined;\n    this.labelTextColors = undefined;\n  }\n  initialize(options) {\n    this.options = options;\n    this._cachedAnimations = undefined;\n    this.$context = undefined;\n  }\n  _resolveAnimations() {\n    const cached = this._cachedAnimations;\n    if (cached) {\n      return cached;\n    }\n    const chart = this.chart;\n    const options = this.options.setContext(this.getContext());\n    const opts = options.enabled && chart.options.animation && options.animations;\n    const animations = new Animations(this.chart, opts);\n    if (opts._cacheable) {\n      this._cachedAnimations = Object.freeze(animations);\n    }\n    return animations;\n  }\n  getContext() {\n    return this.$context ||\n\t\t\t(this.$context = createTooltipContext(this.chart.getContext(), this, this._tooltipItems));\n  }\n  getTitle(context, options) {\n    const {callbacks} = options;\n    const beforeTitle = callbacks.beforeTitle.apply(this, [context]);\n    const title = callbacks.title.apply(this, [context]);\n    const afterTitle = callbacks.afterTitle.apply(this, [context]);\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n    lines = pushOrConcat(lines, splitNewlines(title));\n    lines = pushOrConcat(lines, splitNewlines(afterTitle));\n    return lines;\n  }\n  getBeforeBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(options.callbacks.beforeBody.apply(this, [tooltipItems]));\n  }\n  getBody(tooltipItems, options) {\n    const {callbacks} = options;\n    const bodyItems = [];\n    each(tooltipItems, (context) => {\n      const bodyItem = {\n        before: [],\n        lines: [],\n        after: []\n      };\n      const scoped = overrideCallbacks(callbacks, context);\n      pushOrConcat(bodyItem.before, splitNewlines(scoped.beforeLabel.call(this, context)));\n      pushOrConcat(bodyItem.lines, scoped.label.call(this, context));\n      pushOrConcat(bodyItem.after, splitNewlines(scoped.afterLabel.call(this, context)));\n      bodyItems.push(bodyItem);\n    });\n    return bodyItems;\n  }\n  getAfterBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(options.callbacks.afterBody.apply(this, [tooltipItems]));\n  }\n  getFooter(tooltipItems, options) {\n    const {callbacks} = options;\n    const beforeFooter = callbacks.beforeFooter.apply(this, [tooltipItems]);\n    const footer = callbacks.footer.apply(this, [tooltipItems]);\n    const afterFooter = callbacks.afterFooter.apply(this, [tooltipItems]);\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n    lines = pushOrConcat(lines, splitNewlines(footer));\n    lines = pushOrConcat(lines, splitNewlines(afterFooter));\n    return lines;\n  }\n  _createItems(options) {\n    const active = this._active;\n    const data = this.chart.data;\n    const labelColors = [];\n    const labelPointStyles = [];\n    const labelTextColors = [];\n    let tooltipItems = [];\n    let i, len;\n    for (i = 0, len = active.length; i < len; ++i) {\n      tooltipItems.push(createTooltipItem(this.chart, active[i]));\n    }\n    if (options.filter) {\n      tooltipItems = tooltipItems.filter((element, index, array) => options.filter(element, index, array, data));\n    }\n    if (options.itemSort) {\n      tooltipItems = tooltipItems.sort((a, b) => options.itemSort(a, b, data));\n    }\n    each(tooltipItems, (context) => {\n      const scoped = overrideCallbacks(options.callbacks, context);\n      labelColors.push(scoped.labelColor.call(this, context));\n      labelPointStyles.push(scoped.labelPointStyle.call(this, context));\n      labelTextColors.push(scoped.labelTextColor.call(this, context));\n    });\n    this.labelColors = labelColors;\n    this.labelPointStyles = labelPointStyles;\n    this.labelTextColors = labelTextColors;\n    this.dataPoints = tooltipItems;\n    return tooltipItems;\n  }\n  update(changed, replay) {\n    const options = this.options.setContext(this.getContext());\n    const active = this._active;\n    let properties;\n    let tooltipItems = [];\n    if (!active.length) {\n      if (this.opacity !== 0) {\n        properties = {\n          opacity: 0\n        };\n      }\n    } else {\n      const position = positioners[options.position].call(this, active, this._eventPosition);\n      tooltipItems = this._createItems(options);\n      this.title = this.getTitle(tooltipItems, options);\n      this.beforeBody = this.getBeforeBody(tooltipItems, options);\n      this.body = this.getBody(tooltipItems, options);\n      this.afterBody = this.getAfterBody(tooltipItems, options);\n      this.footer = this.getFooter(tooltipItems, options);\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, size);\n      const alignment = determineAlignment(this.chart, options, positionAndSize);\n      const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, this.chart);\n      this.xAlign = alignment.xAlign;\n      this.yAlign = alignment.yAlign;\n      properties = {\n        opacity: 1,\n        x: backgroundPoint.x,\n        y: backgroundPoint.y,\n        width: size.width,\n        height: size.height,\n        caretX: position.x,\n        caretY: position.y\n      };\n    }\n    this._tooltipItems = tooltipItems;\n    this.$context = undefined;\n    if (properties) {\n      this._resolveAnimations().update(this, properties);\n    }\n    if (changed && options.external) {\n      options.external.call(this, {chart: this.chart, tooltip: this, replay});\n    }\n  }\n  drawCaret(tooltipPoint, ctx, size, options) {\n    const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n    ctx.lineTo(caretPosition.x1, caretPosition.y1);\n    ctx.lineTo(caretPosition.x2, caretPosition.y2);\n    ctx.lineTo(caretPosition.x3, caretPosition.y3);\n  }\n  getCaretPosition(tooltipPoint, size, options) {\n    const {xAlign, yAlign} = this;\n    const {caretSize, cornerRadius} = options;\n    const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(cornerRadius);\n    const {x: ptX, y: ptY} = tooltipPoint;\n    const {width, height} = size;\n    let x1, x2, x3, y1, y2, y3;\n    if (yAlign === 'center') {\n      y2 = ptY + (height / 2);\n      if (xAlign === 'left') {\n        x1 = ptX;\n        x2 = x1 - caretSize;\n        y1 = y2 + caretSize;\n        y3 = y2 - caretSize;\n      } else {\n        x1 = ptX + width;\n        x2 = x1 + caretSize;\n        y1 = y2 - caretSize;\n        y3 = y2 + caretSize;\n      }\n      x3 = x1;\n    } else {\n      if (xAlign === 'left') {\n        x2 = ptX + Math.max(topLeft, bottomLeft) + (caretSize);\n      } else if (xAlign === 'right') {\n        x2 = ptX + width - Math.max(topRight, bottomRight) - caretSize;\n      } else {\n        x2 = this.caretX;\n      }\n      if (yAlign === 'top') {\n        y1 = ptY;\n        y2 = y1 - caretSize;\n        x1 = x2 - caretSize;\n        x3 = x2 + caretSize;\n      } else {\n        y1 = ptY + height;\n        y2 = y1 + caretSize;\n        x1 = x2 + caretSize;\n        x3 = x2 - caretSize;\n      }\n      y3 = y1;\n    }\n    return {x1, x2, x3, y1, y2, y3};\n  }\n  drawTitle(pt, ctx, options) {\n    const title = this.title;\n    const length = title.length;\n    let titleFont, titleSpacing, i;\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n      pt.x = getAlignedX(this, options.titleAlign, options);\n      ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n      ctx.textBaseline = 'middle';\n      titleFont = toFont(options.titleFont);\n      titleSpacing = options.titleSpacing;\n      ctx.fillStyle = options.titleColor;\n      ctx.font = titleFont.string;\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n        pt.y += titleFont.lineHeight + titleSpacing;\n        if (i + 1 === length) {\n          pt.y += options.titleMarginBottom - titleSpacing;\n        }\n      }\n    }\n  }\n  _drawColorBox(ctx, pt, i, rtlHelper, options) {\n    const labelColors = this.labelColors[i];\n    const labelPointStyle = this.labelPointStyles[i];\n    const {boxHeight, boxWidth, boxPadding} = options;\n    const bodyFont = toFont(options.bodyFont);\n    const colorX = getAlignedX(this, 'left', options);\n    const rtlColorX = rtlHelper.x(colorX);\n    const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n    const colorY = pt.y + yOffSet;\n    if (options.usePointStyle) {\n      const drawOptions = {\n        radius: Math.min(boxWidth, boxHeight) / 2,\n        pointStyle: labelPointStyle.pointStyle,\n        rotation: labelPointStyle.rotation,\n        borderWidth: 1\n      };\n      const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n      const centerY = colorY + boxHeight / 2;\n      ctx.strokeStyle = options.multiKeyBackground;\n      ctx.fillStyle = options.multiKeyBackground;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n      ctx.strokeStyle = labelColors.borderColor;\n      ctx.fillStyle = labelColors.backgroundColor;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n    } else {\n      ctx.lineWidth = labelColors.borderWidth || 1;\n      ctx.strokeStyle = labelColors.borderColor;\n      ctx.setLineDash(labelColors.borderDash || []);\n      ctx.lineDashOffset = labelColors.borderDashOffset || 0;\n      const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth - boxPadding);\n      const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - boxPadding - 2);\n      const borderRadius = toTRBLCorners(labelColors.borderRadius);\n      if (Object.values(borderRadius).some(v => v !== 0)) {\n        ctx.beginPath();\n        ctx.fillStyle = options.multiKeyBackground;\n        addRoundedRectPath(ctx, {\n          x: outerX,\n          y: colorY,\n          w: boxWidth,\n          h: boxHeight,\n          radius: borderRadius,\n        });\n        ctx.fill();\n        ctx.stroke();\n        ctx.fillStyle = labelColors.backgroundColor;\n        ctx.beginPath();\n        addRoundedRectPath(ctx, {\n          x: innerX,\n          y: colorY + 1,\n          w: boxWidth - 2,\n          h: boxHeight - 2,\n          radius: borderRadius,\n        });\n        ctx.fill();\n      } else {\n        ctx.fillStyle = options.multiKeyBackground;\n        ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.fillStyle = labelColors.backgroundColor;\n        ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n      }\n    }\n    ctx.fillStyle = this.labelTextColors[i];\n  }\n  drawBody(pt, ctx, options) {\n    const {body} = this;\n    const {bodySpacing, bodyAlign, displayColors, boxHeight, boxWidth, boxPadding} = options;\n    const bodyFont = toFont(options.bodyFont);\n    let bodyLineHeight = bodyFont.lineHeight;\n    let xLinePadding = 0;\n    const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n    const fillLineOfText = function(line) {\n      ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n      pt.y += bodyLineHeight + bodySpacing;\n    };\n    const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n    let bodyItem, textColor, lines, i, j, ilen, jlen;\n    ctx.textAlign = bodyAlign;\n    ctx.textBaseline = 'middle';\n    ctx.font = bodyFont.string;\n    pt.x = getAlignedX(this, bodyAlignForCalculation, options);\n    ctx.fillStyle = options.bodyColor;\n    each(this.beforeBody, fillLineOfText);\n    xLinePadding = displayColors && bodyAlignForCalculation !== 'right'\n      ? bodyAlign === 'center' ? (boxWidth / 2 + boxPadding) : (boxWidth + 2 + boxPadding)\n      : 0;\n    for (i = 0, ilen = body.length; i < ilen; ++i) {\n      bodyItem = body[i];\n      textColor = this.labelTextColors[i];\n      ctx.fillStyle = textColor;\n      each(bodyItem.before, fillLineOfText);\n      lines = bodyItem.lines;\n      if (displayColors && lines.length) {\n        this._drawColorBox(ctx, pt, i, rtlHelper, options);\n        bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n      }\n      for (j = 0, jlen = lines.length; j < jlen; ++j) {\n        fillLineOfText(lines[j]);\n        bodyLineHeight = bodyFont.lineHeight;\n      }\n      each(bodyItem.after, fillLineOfText);\n    }\n    xLinePadding = 0;\n    bodyLineHeight = bodyFont.lineHeight;\n    each(this.afterBody, fillLineOfText);\n    pt.y -= bodySpacing;\n  }\n  drawFooter(pt, ctx, options) {\n    const footer = this.footer;\n    const length = footer.length;\n    let footerFont, i;\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n      pt.x = getAlignedX(this, options.footerAlign, options);\n      pt.y += options.footerMarginTop;\n      ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n      ctx.textBaseline = 'middle';\n      footerFont = toFont(options.footerFont);\n      ctx.fillStyle = options.footerColor;\n      ctx.font = footerFont.string;\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n        pt.y += footerFont.lineHeight + options.footerSpacing;\n      }\n    }\n  }\n  drawBackground(pt, ctx, tooltipSize, options) {\n    const {xAlign, yAlign} = this;\n    const {x, y} = pt;\n    const {width, height} = tooltipSize;\n    const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(options.cornerRadius);\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.beginPath();\n    ctx.moveTo(x + topLeft, y);\n    if (yAlign === 'top') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width - topRight, y);\n    ctx.quadraticCurveTo(x + width, y, x + width, y + topRight);\n    if (yAlign === 'center' && xAlign === 'right') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width, y + height - bottomRight);\n    ctx.quadraticCurveTo(x + width, y + height, x + width - bottomRight, y + height);\n    if (yAlign === 'bottom') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + bottomLeft, y + height);\n    ctx.quadraticCurveTo(x, y + height, x, y + height - bottomLeft);\n    if (yAlign === 'center' && xAlign === 'left') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x, y + topLeft);\n    ctx.quadraticCurveTo(x, y, x + topLeft, y);\n    ctx.closePath();\n    ctx.fill();\n    if (options.borderWidth > 0) {\n      ctx.stroke();\n    }\n  }\n  _updateAnimationTarget(options) {\n    const chart = this.chart;\n    const anims = this.$animations;\n    const animX = anims && anims.x;\n    const animY = anims && anims.y;\n    if (animX || animY) {\n      const position = positioners[options.position].call(this, this._active, this._eventPosition);\n      if (!position) {\n        return;\n      }\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, this._size);\n      const alignment = determineAlignment(chart, options, positionAndSize);\n      const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n      if (animX._to !== point.x || animY._to !== point.y) {\n        this.xAlign = alignment.xAlign;\n        this.yAlign = alignment.yAlign;\n        this.width = size.width;\n        this.height = size.height;\n        this.caretX = position.x;\n        this.caretY = position.y;\n        this._resolveAnimations().update(this, point);\n      }\n    }\n  }\n  draw(ctx) {\n    const options = this.options.setContext(this.getContext());\n    let opacity = this.opacity;\n    if (!opacity) {\n      return;\n    }\n    this._updateAnimationTarget(options);\n    const tooltipSize = {\n      width: this.width,\n      height: this.height\n    };\n    const pt = {\n      x: this.x,\n      y: this.y\n    };\n    opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n    const padding = toPadding(options.padding);\n    const hasTooltipContent = this.title.length || this.beforeBody.length || this.body.length || this.afterBody.length || this.footer.length;\n    if (options.enabled && hasTooltipContent) {\n      ctx.save();\n      ctx.globalAlpha = opacity;\n      this.drawBackground(pt, ctx, tooltipSize, options);\n      overrideTextDirection(ctx, options.textDirection);\n      pt.y += padding.top;\n      this.drawTitle(pt, ctx, options);\n      this.drawBody(pt, ctx, options);\n      this.drawFooter(pt, ctx, options);\n      restoreTextDirection(ctx, options.textDirection);\n      ctx.restore();\n    }\n  }\n  getActiveElements() {\n    return this._active || [];\n  }\n  setActiveElements(activeElements, eventPosition) {\n    const lastActive = this._active;\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = this.chart.getDatasetMeta(datasetIndex);\n      if (!meta) {\n        throw new Error('Cannot find a dataset at index ' + datasetIndex);\n      }\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(lastActive, active);\n    const positionChanged = this._positionChanged(active, eventPosition);\n    if (changed || positionChanged) {\n      this._active = active;\n      this._eventPosition = eventPosition;\n      this._ignoreReplayEvents = true;\n      this.update(true);\n    }\n  }\n  handleEvent(e, replay, inChartArea = true) {\n    if (replay && this._ignoreReplayEvents) {\n      return false;\n    }\n    this._ignoreReplayEvents = false;\n    const options = this.options;\n    const lastActive = this._active || [];\n    const active = this._getActiveElements(e, lastActive, replay, inChartArea);\n    const positionChanged = this._positionChanged(active, e);\n    const changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n    if (changed) {\n      this._active = active;\n      if (options.enabled || options.external) {\n        this._eventPosition = {\n          x: e.x,\n          y: e.y\n        };\n        this.update(true, replay);\n      }\n    }\n    return changed;\n  }\n  _getActiveElements(e, lastActive, replay, inChartArea) {\n    const options = this.options;\n    if (e.type === 'mouseout') {\n      return [];\n    }\n    if (!inChartArea) {\n      return lastActive;\n    }\n    const active = this.chart.getElementsAtEventForMode(e, options.mode, options, replay);\n    if (options.reverse) {\n      active.reverse();\n    }\n    return active;\n  }\n  _positionChanged(active, e) {\n    const {caretX, caretY, options} = this;\n    const position = positioners[options.position].call(this, active, e);\n    return position !== false && (caretX !== position.x || caretY !== position.y);\n  }\n}\nTooltip.positioners = positioners;\nvar plugin_tooltip = {\n  id: 'tooltip',\n  _element: Tooltip,\n  positioners,\n  afterInit(chart, _args, options) {\n    if (options) {\n      chart.tooltip = new Tooltip({chart, options});\n    }\n  },\n  beforeUpdate(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n  reset(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n  afterDraw(chart) {\n    const tooltip = chart.tooltip;\n    const args = {\n      tooltip\n    };\n    if (chart.notifyPlugins('beforeTooltipDraw', args) === false) {\n      return;\n    }\n    if (tooltip) {\n      tooltip.draw(chart.ctx);\n    }\n    chart.notifyPlugins('afterTooltipDraw', args);\n  },\n  afterEvent(chart, args) {\n    if (chart.tooltip) {\n      const useFinalPosition = args.replay;\n      if (chart.tooltip.handleEvent(args.event, useFinalPosition, args.inChartArea)) {\n        args.changed = true;\n      }\n    }\n  },\n  defaults: {\n    enabled: true,\n    external: null,\n    position: 'average',\n    backgroundColor: 'rgba(0,0,0,0.8)',\n    titleColor: '#fff',\n    titleFont: {\n      weight: 'bold',\n    },\n    titleSpacing: 2,\n    titleMarginBottom: 6,\n    titleAlign: 'left',\n    bodyColor: '#fff',\n    bodySpacing: 2,\n    bodyFont: {\n    },\n    bodyAlign: 'left',\n    footerColor: '#fff',\n    footerSpacing: 2,\n    footerMarginTop: 6,\n    footerFont: {\n      weight: 'bold',\n    },\n    footerAlign: 'left',\n    padding: 6,\n    caretPadding: 2,\n    caretSize: 5,\n    cornerRadius: 6,\n    boxHeight: (ctx, opts) => opts.bodyFont.size,\n    boxWidth: (ctx, opts) => opts.bodyFont.size,\n    multiKeyBackground: '#fff',\n    displayColors: true,\n    boxPadding: 0,\n    borderColor: 'rgba(0,0,0,0)',\n    borderWidth: 0,\n    animation: {\n      duration: 400,\n      easing: 'easeOutQuart',\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'width', 'height', 'caretX', 'caretY'],\n      },\n      opacity: {\n        easing: 'linear',\n        duration: 200\n      }\n    },\n    callbacks: {\n      beforeTitle: noop,\n      title(tooltipItems) {\n        if (tooltipItems.length > 0) {\n          const item = tooltipItems[0];\n          const labels = item.chart.data.labels;\n          const labelCount = labels ? labels.length : 0;\n          if (this && this.options && this.options.mode === 'dataset') {\n            return item.dataset.label || '';\n          } else if (item.label) {\n            return item.label;\n          } else if (labelCount > 0 && item.dataIndex < labelCount) {\n            return labels[item.dataIndex];\n          }\n        }\n        return '';\n      },\n      afterTitle: noop,\n      beforeBody: noop,\n      beforeLabel: noop,\n      label(tooltipItem) {\n        if (this && this.options && this.options.mode === 'dataset') {\n          return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n        }\n        let label = tooltipItem.dataset.label || '';\n        if (label) {\n          label += ': ';\n        }\n        const value = tooltipItem.formattedValue;\n        if (!isNullOrUndef(value)) {\n          label += value;\n        }\n        return label;\n      },\n      labelColor(tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n          borderColor: options.borderColor,\n          backgroundColor: options.backgroundColor,\n          borderWidth: options.borderWidth,\n          borderDash: options.borderDash,\n          borderDashOffset: options.borderDashOffset,\n          borderRadius: 0,\n        };\n      },\n      labelTextColor() {\n        return this.options.bodyColor;\n      },\n      labelPointStyle(tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n          pointStyle: options.pointStyle,\n          rotation: options.rotation,\n        };\n      },\n      afterLabel: noop,\n      afterBody: noop,\n      beforeFooter: noop,\n      footer: noop,\n      afterFooter: noop\n    }\n  },\n  defaultRoutes: {\n    bodyFont: 'font',\n    footerFont: 'font',\n    titleFont: 'font'\n  },\n  descriptors: {\n    _scriptable: (name) => name !== 'filter' && name !== 'itemSort' && name !== 'external',\n    _indexable: false,\n    callbacks: {\n      _scriptable: false,\n      _indexable: false,\n    },\n    animation: {\n      _fallback: false\n    },\n    animations: {\n      _fallback: 'animation'\n    }\n  },\n  additionalOptionScopes: ['interaction']\n};\n\nvar plugins = /*#__PURE__*/Object.freeze({\n__proto__: null,\nDecimation: plugin_decimation,\nFiller: plugin_filler,\nLegend: plugin_legend,\nSubTitle: plugin_subtitle,\nTitle: plugin_title,\nTooltip: plugin_tooltip\n});\n\nconst addIfString = (labels, raw, index, addedLabels) => {\n  if (typeof raw === 'string') {\n    index = labels.push(raw) - 1;\n    addedLabels.unshift({index, label: raw});\n  } else if (isNaN(raw)) {\n    index = null;\n  }\n  return index;\n};\nfunction findOrAddLabel(labels, raw, index, addedLabels) {\n  const first = labels.indexOf(raw);\n  if (first === -1) {\n    return addIfString(labels, raw, index, addedLabels);\n  }\n  const last = labels.lastIndexOf(raw);\n  return first !== last ? index : first;\n}\nconst validIndex = (index, max) => index === null ? null : _limitValue(Math.round(index), 0, max);\nclass CategoryScale extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this._startValue = undefined;\n    this._valueRange = 0;\n    this._addedLabels = [];\n  }\n  init(scaleOptions) {\n    const added = this._addedLabels;\n    if (added.length) {\n      const labels = this.getLabels();\n      for (const {index, label} of added) {\n        if (labels[index] === label) {\n          labels.splice(index, 1);\n        }\n      }\n      this._addedLabels = [];\n    }\n    super.init(scaleOptions);\n  }\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    const labels = this.getLabels();\n    index = isFinite(index) && labels[index] === raw ? index\n      : findOrAddLabel(labels, raw, valueOrDefault(index, raw), this._addedLabels);\n    return validIndex(index, labels.length - 1);\n  }\n  determineDataLimits() {\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let {min, max} = this.getMinMax(true);\n    if (this.options.bounds === 'ticks') {\n      if (!minDefined) {\n        min = 0;\n      }\n      if (!maxDefined) {\n        max = this.getLabels().length - 1;\n      }\n    }\n    this.min = min;\n    this.max = max;\n  }\n  buildTicks() {\n    const min = this.min;\n    const max = this.max;\n    const offset = this.options.offset;\n    const ticks = [];\n    let labels = this.getLabels();\n    labels = (min === 0 && max === labels.length - 1) ? labels : labels.slice(min, max + 1);\n    this._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n    this._startValue = this.min - (offset ? 0.5 : 0);\n    for (let value = min; value <= max; value++) {\n      ticks.push({value});\n    }\n    return ticks;\n  }\n  getLabelForValue(value) {\n    const labels = this.getLabels();\n    if (value >= 0 && value < labels.length) {\n      return labels[value];\n    }\n    return value;\n  }\n  configure() {\n    super.configure();\n    if (!this.isHorizontal()) {\n      this._reversePixels = !this._reversePixels;\n    }\n  }\n  getPixelForValue(value) {\n    if (typeof value !== 'number') {\n      value = this.parse(value);\n    }\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n  getValueForPixel(pixel) {\n    return Math.round(this._startValue + this.getDecimalForPixel(pixel) * this._valueRange);\n  }\n  getBasePixel() {\n    return this.bottom;\n  }\n}\nCategoryScale.id = 'category';\nCategoryScale.defaults = {\n  ticks: {\n    callback: CategoryScale.prototype.getLabelForValue\n  }\n};\n\nfunction generateTicks$1(generationOptions, dataRange) {\n  const ticks = [];\n  const MIN_SPACING = 1e-14;\n  const {bounds, step, min, max, precision, count, maxTicks, maxDigits, includeBounds} = generationOptions;\n  const unit = step || 1;\n  const maxSpaces = maxTicks - 1;\n  const {min: rmin, max: rmax} = dataRange;\n  const minDefined = !isNullOrUndef(min);\n  const maxDefined = !isNullOrUndef(max);\n  const countDefined = !isNullOrUndef(count);\n  const minSpacing = (rmax - rmin) / (maxDigits + 1);\n  let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n  let factor, niceMin, niceMax, numSpaces;\n  if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n    return [{value: rmin}, {value: rmax}];\n  }\n  numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n  if (numSpaces > maxSpaces) {\n    spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n  }\n  if (!isNullOrUndef(precision)) {\n    factor = Math.pow(10, precision);\n    spacing = Math.ceil(spacing * factor) / factor;\n  }\n  if (bounds === 'ticks') {\n    niceMin = Math.floor(rmin / spacing) * spacing;\n    niceMax = Math.ceil(rmax / spacing) * spacing;\n  } else {\n    niceMin = rmin;\n    niceMax = rmax;\n  }\n  if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n    numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n    spacing = (max - min) / numSpaces;\n    niceMin = min;\n    niceMax = max;\n  } else if (countDefined) {\n    niceMin = minDefined ? min : niceMin;\n    niceMax = maxDefined ? max : niceMax;\n    numSpaces = count - 1;\n    spacing = (niceMax - niceMin) / numSpaces;\n  } else {\n    numSpaces = (niceMax - niceMin) / spacing;\n    if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n      numSpaces = Math.round(numSpaces);\n    } else {\n      numSpaces = Math.ceil(numSpaces);\n    }\n  }\n  const decimalPlaces = Math.max(\n    _decimalPlaces(spacing),\n    _decimalPlaces(niceMin)\n  );\n  factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n  niceMin = Math.round(niceMin * factor) / factor;\n  niceMax = Math.round(niceMax * factor) / factor;\n  let j = 0;\n  if (minDefined) {\n    if (includeBounds && niceMin !== min) {\n      ticks.push({value: min});\n      if (niceMin < min) {\n        j++;\n      }\n      if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n        j++;\n      }\n    } else if (niceMin < min) {\n      j++;\n    }\n  }\n  for (; j < numSpaces; ++j) {\n    ticks.push({value: Math.round((niceMin + j * spacing) * factor) / factor});\n  }\n  if (maxDefined && includeBounds && niceMax !== max) {\n    if (ticks.length && almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n      ticks[ticks.length - 1].value = max;\n    } else {\n      ticks.push({value: max});\n    }\n  } else if (!maxDefined || niceMax === max) {\n    ticks.push({value: niceMax});\n  }\n  return ticks;\n}\nfunction relativeLabelSize(value, minSpacing, {horizontal, minRotation}) {\n  const rad = toRadians(minRotation);\n  const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n  const length = 0.75 * minSpacing * ('' + value).length;\n  return Math.min(minSpacing / ratio, length);\n}\nclass LinearScaleBase extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this.start = undefined;\n    this.end = undefined;\n    this._startValue = undefined;\n    this._endValue = undefined;\n    this._valueRange = 0;\n  }\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n      return null;\n    }\n    return +raw;\n  }\n  handleTickRangeOptions() {\n    const {beginAtZero} = this.options;\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let {min, max} = this;\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n    if (beginAtZero) {\n      const minSign = sign(min);\n      const maxSign = sign(max);\n      if (minSign < 0 && maxSign < 0) {\n        setMax(0);\n      } else if (minSign > 0 && maxSign > 0) {\n        setMin(0);\n      }\n    }\n    if (min === max) {\n      let offset = 1;\n      if (max >= Number.MAX_SAFE_INTEGER || min <= Number.MIN_SAFE_INTEGER) {\n        offset = Math.abs(max * 0.05);\n      }\n      setMax(max + offset);\n      if (!beginAtZero) {\n        setMin(min - offset);\n      }\n    }\n    this.min = min;\n    this.max = max;\n  }\n  getTickLimit() {\n    const tickOpts = this.options.ticks;\n    let {maxTicksLimit, stepSize} = tickOpts;\n    let maxTicks;\n    if (stepSize) {\n      maxTicks = Math.ceil(this.max / stepSize) - Math.floor(this.min / stepSize) + 1;\n      if (maxTicks > 1000) {\n        console.warn(`scales.${this.id}.ticks.stepSize: ${stepSize} would result generating up to ${maxTicks} ticks. Limiting to 1000.`);\n        maxTicks = 1000;\n      }\n    } else {\n      maxTicks = this.computeTickLimit();\n      maxTicksLimit = maxTicksLimit || 11;\n    }\n    if (maxTicksLimit) {\n      maxTicks = Math.min(maxTicksLimit, maxTicks);\n    }\n    return maxTicks;\n  }\n  computeTickLimit() {\n    return Number.POSITIVE_INFINITY;\n  }\n  buildTicks() {\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n    let maxTicks = this.getTickLimit();\n    maxTicks = Math.max(2, maxTicks);\n    const numericGeneratorOptions = {\n      maxTicks,\n      bounds: opts.bounds,\n      min: opts.min,\n      max: opts.max,\n      precision: tickOpts.precision,\n      step: tickOpts.stepSize,\n      count: tickOpts.count,\n      maxDigits: this._maxDigits(),\n      horizontal: this.isHorizontal(),\n      minRotation: tickOpts.minRotation || 0,\n      includeBounds: tickOpts.includeBounds !== false\n    };\n    const dataRange = this._range || this;\n    const ticks = generateTicks$1(numericGeneratorOptions, dataRange);\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n    if (opts.reverse) {\n      ticks.reverse();\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n    return ticks;\n  }\n  configure() {\n    const ticks = this.ticks;\n    let start = this.min;\n    let end = this.max;\n    super.configure();\n    if (this.options.offset && ticks.length) {\n      const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n      start -= offset;\n      end += offset;\n    }\n    this._startValue = start;\n    this._endValue = end;\n    this._valueRange = end - start;\n  }\n  getLabelForValue(value) {\n    return formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n}\n\nclass LinearScale extends LinearScaleBase {\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(true);\n    this.min = isNumberFinite(min) ? min : 0;\n    this.max = isNumberFinite(max) ? max : 1;\n    this.handleTickRangeOptions();\n  }\n  computeTickLimit() {\n    const horizontal = this.isHorizontal();\n    const length = horizontal ? this.width : this.height;\n    const minRotation = toRadians(this.options.ticks.minRotation);\n    const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n    const tickFont = this._resolveTickFontOptions(0);\n    return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n  }\n  getPixelForValue(value) {\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n  getValueForPixel(pixel) {\n    return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n  }\n}\nLinearScale.id = 'linear';\nLinearScale.defaults = {\n  ticks: {\n    callback: Ticks.formatters.numeric\n  }\n};\n\nfunction isMajor(tickVal) {\n  const remain = tickVal / (Math.pow(10, Math.floor(log10(tickVal))));\n  return remain === 1;\n}\nfunction generateTicks(generationOptions, dataRange) {\n  const endExp = Math.floor(log10(dataRange.max));\n  const endSignificand = Math.ceil(dataRange.max / Math.pow(10, endExp));\n  const ticks = [];\n  let tickVal = finiteOrDefault(generationOptions.min, Math.pow(10, Math.floor(log10(dataRange.min))));\n  let exp = Math.floor(log10(tickVal));\n  let significand = Math.floor(tickVal / Math.pow(10, exp));\n  let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n  do {\n    ticks.push({value: tickVal, major: isMajor(tickVal)});\n    ++significand;\n    if (significand === 10) {\n      significand = 1;\n      ++exp;\n      precision = exp >= 0 ? 1 : precision;\n    }\n    tickVal = Math.round(significand * Math.pow(10, exp) * precision) / precision;\n  } while (exp < endExp || (exp === endExp && significand < endSignificand));\n  const lastTick = finiteOrDefault(generationOptions.max, tickVal);\n  ticks.push({value: lastTick, major: isMajor(tickVal)});\n  return ticks;\n}\nclass LogarithmicScale extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this.start = undefined;\n    this.end = undefined;\n    this._startValue = undefined;\n    this._valueRange = 0;\n  }\n  parse(raw, index) {\n    const value = LinearScaleBase.prototype.parse.apply(this, [raw, index]);\n    if (value === 0) {\n      this._zero = true;\n      return undefined;\n    }\n    return isNumberFinite(value) && value > 0 ? value : null;\n  }\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(true);\n    this.min = isNumberFinite(min) ? Math.max(0, min) : null;\n    this.max = isNumberFinite(max) ? Math.max(0, max) : null;\n    if (this.options.beginAtZero) {\n      this._zero = true;\n    }\n    this.handleTickRangeOptions();\n  }\n  handleTickRangeOptions() {\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let min = this.min;\n    let max = this.max;\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n    const exp = (v, m) => Math.pow(10, Math.floor(log10(v)) + m);\n    if (min === max) {\n      if (min <= 0) {\n        setMin(1);\n        setMax(10);\n      } else {\n        setMin(exp(min, -1));\n        setMax(exp(max, +1));\n      }\n    }\n    if (min <= 0) {\n      setMin(exp(max, -1));\n    }\n    if (max <= 0) {\n      setMax(exp(min, +1));\n    }\n    if (this._zero && this.min !== this._suggestedMin && min === exp(this.min, 0)) {\n      setMin(exp(min, -1));\n    }\n    this.min = min;\n    this.max = max;\n  }\n  buildTicks() {\n    const opts = this.options;\n    const generationOptions = {\n      min: this._userMin,\n      max: this._userMax\n    };\n    const ticks = generateTicks(generationOptions, this);\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n    if (opts.reverse) {\n      ticks.reverse();\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n    return ticks;\n  }\n  getLabelForValue(value) {\n    return value === undefined\n      ? '0'\n      : formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n  configure() {\n    const start = this.min;\n    super.configure();\n    this._startValue = log10(start);\n    this._valueRange = log10(this.max) - log10(start);\n  }\n  getPixelForValue(value) {\n    if (value === undefined || value === 0) {\n      value = this.min;\n    }\n    if (value === null || isNaN(value)) {\n      return NaN;\n    }\n    return this.getPixelForDecimal(value === this.min\n      ? 0\n      : (log10(value) - this._startValue) / this._valueRange);\n  }\n  getValueForPixel(pixel) {\n    const decimal = this.getDecimalForPixel(pixel);\n    return Math.pow(10, this._startValue + decimal * this._valueRange);\n  }\n}\nLogarithmicScale.id = 'logarithmic';\nLogarithmicScale.defaults = {\n  ticks: {\n    callback: Ticks.formatters.logarithmic,\n    major: {\n      enabled: true\n    }\n  }\n};\n\nfunction getTickBackdropHeight(opts) {\n  const tickOpts = opts.ticks;\n  if (tickOpts.display && opts.display) {\n    const padding = toPadding(tickOpts.backdropPadding);\n    return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n  }\n  return 0;\n}\nfunction measureLabelSize(ctx, font, label) {\n  label = isArray(label) ? label : [label];\n  return {\n    w: _longestText(ctx, font.string, label),\n    h: label.length * font.lineHeight\n  };\n}\nfunction determineLimits(angle, pos, size, min, max) {\n  if (angle === min || angle === max) {\n    return {\n      start: pos - (size / 2),\n      end: pos + (size / 2)\n    };\n  } else if (angle < min || angle > max) {\n    return {\n      start: pos - size,\n      end: pos\n    };\n  }\n  return {\n    start: pos,\n    end: pos + size\n  };\n}\nfunction fitWithPointLabels(scale) {\n  const orig = {\n    l: scale.left + scale._padding.left,\n    r: scale.right - scale._padding.right,\n    t: scale.top + scale._padding.top,\n    b: scale.bottom - scale._padding.bottom\n  };\n  const limits = Object.assign({}, orig);\n  const labelSizes = [];\n  const padding = [];\n  const valueCount = scale._pointLabels.length;\n  const pointLabelOpts = scale.options.pointLabels;\n  const additionalAngle = pointLabelOpts.centerPointLabels ? PI / valueCount : 0;\n  for (let i = 0; i < valueCount; i++) {\n    const opts = pointLabelOpts.setContext(scale.getPointLabelContext(i));\n    padding[i] = opts.padding;\n    const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i], additionalAngle);\n    const plFont = toFont(opts.font);\n    const textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n    labelSizes[i] = textSize;\n    const angleRadians = _normalizeAngle(scale.getIndexAngle(i) + additionalAngle);\n    const angle = Math.round(toDegrees(angleRadians));\n    const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n    const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n    updateLimits(limits, orig, angleRadians, hLimits, vLimits);\n  }\n  scale.setCenterPoint(\n    orig.l - limits.l,\n    limits.r - orig.r,\n    orig.t - limits.t,\n    limits.b - orig.b\n  );\n  scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\nfunction updateLimits(limits, orig, angle, hLimits, vLimits) {\n  const sin = Math.abs(Math.sin(angle));\n  const cos = Math.abs(Math.cos(angle));\n  let x = 0;\n  let y = 0;\n  if (hLimits.start < orig.l) {\n    x = (orig.l - hLimits.start) / sin;\n    limits.l = Math.min(limits.l, orig.l - x);\n  } else if (hLimits.end > orig.r) {\n    x = (hLimits.end - orig.r) / sin;\n    limits.r = Math.max(limits.r, orig.r + x);\n  }\n  if (vLimits.start < orig.t) {\n    y = (orig.t - vLimits.start) / cos;\n    limits.t = Math.min(limits.t, orig.t - y);\n  } else if (vLimits.end > orig.b) {\n    y = (vLimits.end - orig.b) / cos;\n    limits.b = Math.max(limits.b, orig.b + y);\n  }\n}\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n  const items = [];\n  const valueCount = scale._pointLabels.length;\n  const opts = scale.options;\n  const extra = getTickBackdropHeight(opts) / 2;\n  const outerDistance = scale.drawingArea;\n  const additionalAngle = opts.pointLabels.centerPointLabels ? PI / valueCount : 0;\n  for (let i = 0; i < valueCount; i++) {\n    const pointLabelPosition = scale.getPointPosition(i, outerDistance + extra + padding[i], additionalAngle);\n    const angle = Math.round(toDegrees(_normalizeAngle(pointLabelPosition.angle + HALF_PI)));\n    const size = labelSizes[i];\n    const y = yForAngle(pointLabelPosition.y, size.h, angle);\n    const textAlign = getTextAlignForAngle(angle);\n    const left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n    items.push({\n      x: pointLabelPosition.x,\n      y,\n      textAlign,\n      left,\n      top: y,\n      right: left + size.w,\n      bottom: y + size.h\n    });\n  }\n  return items;\n}\nfunction getTextAlignForAngle(angle) {\n  if (angle === 0 || angle === 180) {\n    return 'center';\n  } else if (angle < 180) {\n    return 'left';\n  }\n  return 'right';\n}\nfunction leftForTextAlign(x, w, align) {\n  if (align === 'right') {\n    x -= w;\n  } else if (align === 'center') {\n    x -= (w / 2);\n  }\n  return x;\n}\nfunction yForAngle(y, h, angle) {\n  if (angle === 90 || angle === 270) {\n    y -= (h / 2);\n  } else if (angle > 270 || angle < 90) {\n    y -= h;\n  }\n  return y;\n}\nfunction drawPointLabels(scale, labelCount) {\n  const {ctx, options: {pointLabels}} = scale;\n  for (let i = labelCount - 1; i >= 0; i--) {\n    const optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\n    const plFont = toFont(optsAtIndex.font);\n    const {x, y, textAlign, left, top, right, bottom} = scale._pointLabelItems[i];\n    const {backdropColor} = optsAtIndex;\n    if (!isNullOrUndef(backdropColor)) {\n      const padding = toPadding(optsAtIndex.backdropPadding);\n      ctx.fillStyle = backdropColor;\n      ctx.fillRect(left - padding.left, top - padding.top, right - left + padding.width, bottom - top + padding.height);\n    }\n    renderText(\n      ctx,\n      scale._pointLabels[i],\n      x,\n      y + (plFont.lineHeight / 2),\n      plFont,\n      {\n        color: optsAtIndex.color,\n        textAlign: textAlign,\n        textBaseline: 'middle'\n      }\n    );\n  }\n}\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n  const {ctx} = scale;\n  if (circular) {\n    ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n  } else {\n    let pointPosition = scale.getPointPosition(0, radius);\n    ctx.moveTo(pointPosition.x, pointPosition.y);\n    for (let i = 1; i < labelCount; i++) {\n      pointPosition = scale.getPointPosition(i, radius);\n      ctx.lineTo(pointPosition.x, pointPosition.y);\n    }\n  }\n}\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount) {\n  const ctx = scale.ctx;\n  const circular = gridLineOpts.circular;\n  const {color, lineWidth} = gridLineOpts;\n  if ((!circular && !labelCount) || !color || !lineWidth || radius < 0) {\n    return;\n  }\n  ctx.save();\n  ctx.strokeStyle = color;\n  ctx.lineWidth = lineWidth;\n  ctx.setLineDash(gridLineOpts.borderDash);\n  ctx.lineDashOffset = gridLineOpts.borderDashOffset;\n  ctx.beginPath();\n  pathRadiusLine(scale, radius, circular, labelCount);\n  ctx.closePath();\n  ctx.stroke();\n  ctx.restore();\n}\nfunction createPointLabelContext(parent, index, label) {\n  return createContext(parent, {\n    label,\n    index,\n    type: 'pointLabel'\n  });\n}\nclass RadialLinearScale extends LinearScaleBase {\n  constructor(cfg) {\n    super(cfg);\n    this.xCenter = undefined;\n    this.yCenter = undefined;\n    this.drawingArea = undefined;\n    this._pointLabels = [];\n    this._pointLabelItems = [];\n  }\n  setDimensions() {\n    const padding = this._padding = toPadding(getTickBackdropHeight(this.options) / 2);\n    const w = this.width = this.maxWidth - padding.width;\n    const h = this.height = this.maxHeight - padding.height;\n    this.xCenter = Math.floor(this.left + w / 2 + padding.left);\n    this.yCenter = Math.floor(this.top + h / 2 + padding.top);\n    this.drawingArea = Math.floor(Math.min(w, h) / 2);\n  }\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(false);\n    this.min = isNumberFinite(min) && !isNaN(min) ? min : 0;\n    this.max = isNumberFinite(max) && !isNaN(max) ? max : 0;\n    this.handleTickRangeOptions();\n  }\n  computeTickLimit() {\n    return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n  }\n  generateTickLabels(ticks) {\n    LinearScaleBase.prototype.generateTickLabels.call(this, ticks);\n    this._pointLabels = this.getLabels()\n      .map((value, index) => {\n        const label = callback(this.options.pointLabels.callback, [value, index], this);\n        return label || label === 0 ? label : '';\n      })\n      .filter((v, i) => this.chart.getDataVisibility(i));\n  }\n  fit() {\n    const opts = this.options;\n    if (opts.display && opts.pointLabels.display) {\n      fitWithPointLabels(this);\n    } else {\n      this.setCenterPoint(0, 0, 0, 0);\n    }\n  }\n  setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n    this.xCenter += Math.floor((leftMovement - rightMovement) / 2);\n    this.yCenter += Math.floor((topMovement - bottomMovement) / 2);\n    this.drawingArea -= Math.min(this.drawingArea / 2, Math.max(leftMovement, rightMovement, topMovement, bottomMovement));\n  }\n  getIndexAngle(index) {\n    const angleMultiplier = TAU / (this._pointLabels.length || 1);\n    const startAngle = this.options.startAngle || 0;\n    return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n  }\n  getDistanceFromCenterForValue(value) {\n    if (isNullOrUndef(value)) {\n      return NaN;\n    }\n    const scalingFactor = this.drawingArea / (this.max - this.min);\n    if (this.options.reverse) {\n      return (this.max - value) * scalingFactor;\n    }\n    return (value - this.min) * scalingFactor;\n  }\n  getValueForDistanceFromCenter(distance) {\n    if (isNullOrUndef(distance)) {\n      return NaN;\n    }\n    const scaledDistance = distance / (this.drawingArea / (this.max - this.min));\n    return this.options.reverse ? this.max - scaledDistance : this.min + scaledDistance;\n  }\n  getPointLabelContext(index) {\n    const pointLabels = this._pointLabels || [];\n    if (index >= 0 && index < pointLabels.length) {\n      const pointLabel = pointLabels[index];\n      return createPointLabelContext(this.getContext(), index, pointLabel);\n    }\n  }\n  getPointPosition(index, distanceFromCenter, additionalAngle = 0) {\n    const angle = this.getIndexAngle(index) - HALF_PI + additionalAngle;\n    return {\n      x: Math.cos(angle) * distanceFromCenter + this.xCenter,\n      y: Math.sin(angle) * distanceFromCenter + this.yCenter,\n      angle\n    };\n  }\n  getPointPositionForValue(index, value) {\n    return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n  }\n  getBasePosition(index) {\n    return this.getPointPositionForValue(index || 0, this.getBaseValue());\n  }\n  getPointLabelPosition(index) {\n    const {left, top, right, bottom} = this._pointLabelItems[index];\n    return {\n      left,\n      top,\n      right,\n      bottom,\n    };\n  }\n  drawBackground() {\n    const {backgroundColor, grid: {circular}} = this.options;\n    if (backgroundColor) {\n      const ctx = this.ctx;\n      ctx.save();\n      ctx.beginPath();\n      pathRadiusLine(this, this.getDistanceFromCenterForValue(this._endValue), circular, this._pointLabels.length);\n      ctx.closePath();\n      ctx.fillStyle = backgroundColor;\n      ctx.fill();\n      ctx.restore();\n    }\n  }\n  drawGrid() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const {angleLines, grid} = opts;\n    const labelCount = this._pointLabels.length;\n    let i, offset, position;\n    if (opts.pointLabels.display) {\n      drawPointLabels(this, labelCount);\n    }\n    if (grid.display) {\n      this.ticks.forEach((tick, index) => {\n        if (index !== 0) {\n          offset = this.getDistanceFromCenterForValue(tick.value);\n          const optsAtIndex = grid.setContext(this.getContext(index - 1));\n          drawRadiusLine(this, optsAtIndex, offset, labelCount);\n        }\n      });\n    }\n    if (angleLines.display) {\n      ctx.save();\n      for (i = labelCount - 1; i >= 0; i--) {\n        const optsAtIndex = angleLines.setContext(this.getPointLabelContext(i));\n        const {color, lineWidth} = optsAtIndex;\n        if (!lineWidth || !color) {\n          continue;\n        }\n        ctx.lineWidth = lineWidth;\n        ctx.strokeStyle = color;\n        ctx.setLineDash(optsAtIndex.borderDash);\n        ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n        offset = this.getDistanceFromCenterForValue(opts.ticks.reverse ? this.min : this.max);\n        position = this.getPointPosition(i, offset);\n        ctx.beginPath();\n        ctx.moveTo(this.xCenter, this.yCenter);\n        ctx.lineTo(position.x, position.y);\n        ctx.stroke();\n      }\n      ctx.restore();\n    }\n  }\n  drawBorder() {}\n  drawLabels() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n    if (!tickOpts.display) {\n      return;\n    }\n    const startAngle = this.getIndexAngle(0);\n    let offset, width;\n    ctx.save();\n    ctx.translate(this.xCenter, this.yCenter);\n    ctx.rotate(startAngle);\n    ctx.textAlign = 'center';\n    ctx.textBaseline = 'middle';\n    this.ticks.forEach((tick, index) => {\n      if (index === 0 && !opts.reverse) {\n        return;\n      }\n      const optsAtIndex = tickOpts.setContext(this.getContext(index));\n      const tickFont = toFont(optsAtIndex.font);\n      offset = this.getDistanceFromCenterForValue(this.ticks[index].value);\n      if (optsAtIndex.showLabelBackdrop) {\n        ctx.font = tickFont.string;\n        width = ctx.measureText(tick.label).width;\n        ctx.fillStyle = optsAtIndex.backdropColor;\n        const padding = toPadding(optsAtIndex.backdropPadding);\n        ctx.fillRect(\n          -width / 2 - padding.left,\n          -offset - tickFont.size / 2 - padding.top,\n          width + padding.width,\n          tickFont.size + padding.height\n        );\n      }\n      renderText(ctx, tick.label, 0, -offset, tickFont, {\n        color: optsAtIndex.color,\n      });\n    });\n    ctx.restore();\n  }\n  drawTitle() {}\n}\nRadialLinearScale.id = 'radialLinear';\nRadialLinearScale.defaults = {\n  display: true,\n  animate: true,\n  position: 'chartArea',\n  angleLines: {\n    display: true,\n    lineWidth: 1,\n    borderDash: [],\n    borderDashOffset: 0.0\n  },\n  grid: {\n    circular: false\n  },\n  startAngle: 0,\n  ticks: {\n    showLabelBackdrop: true,\n    callback: Ticks.formatters.numeric\n  },\n  pointLabels: {\n    backdropColor: undefined,\n    backdropPadding: 2,\n    display: true,\n    font: {\n      size: 10\n    },\n    callback(label) {\n      return label;\n    },\n    padding: 5,\n    centerPointLabels: false\n  }\n};\nRadialLinearScale.defaultRoutes = {\n  'angleLines.color': 'borderColor',\n  'pointLabels.color': 'color',\n  'ticks.color': 'color'\n};\nRadialLinearScale.descriptors = {\n  angleLines: {\n    _fallback: 'grid'\n  }\n};\n\nconst INTERVALS = {\n  millisecond: {common: true, size: 1, steps: 1000},\n  second: {common: true, size: 1000, steps: 60},\n  minute: {common: true, size: 60000, steps: 60},\n  hour: {common: true, size: 3600000, steps: 24},\n  day: {common: true, size: 86400000, steps: 30},\n  week: {common: false, size: 604800000, steps: 4},\n  month: {common: true, size: 2.628e9, steps: 12},\n  quarter: {common: false, size: 7.884e9, steps: 4},\n  year: {common: true, size: 3.154e10}\n};\nconst UNITS = (Object.keys(INTERVALS));\nfunction sorter(a, b) {\n  return a - b;\n}\nfunction parse(scale, input) {\n  if (isNullOrUndef(input)) {\n    return null;\n  }\n  const adapter = scale._adapter;\n  const {parser, round, isoWeekday} = scale._parseOpts;\n  let value = input;\n  if (typeof parser === 'function') {\n    value = parser(value);\n  }\n  if (!isNumberFinite(value)) {\n    value = typeof parser === 'string'\n      ? adapter.parse(value, parser)\n      : adapter.parse(value);\n  }\n  if (value === null) {\n    return null;\n  }\n  if (round) {\n    value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true)\n      ? adapter.startOf(value, 'isoWeek', isoWeekday)\n      : adapter.startOf(value, round);\n  }\n  return +value;\n}\nfunction determineUnitForAutoTicks(minUnit, min, max, capacity) {\n  const ilen = UNITS.length;\n  for (let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n    const interval = INTERVALS[UNITS[i]];\n    const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n    if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n      return UNITS[i];\n    }\n  }\n  return UNITS[ilen - 1];\n}\nfunction determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n  for (let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--) {\n    const unit = UNITS[i];\n    if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n      return unit;\n    }\n  }\n  return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\nfunction determineMajorUnit(unit) {\n  for (let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n    if (INTERVALS[UNITS[i]].common) {\n      return UNITS[i];\n    }\n  }\n}\nfunction addTick(ticks, time, timestamps) {\n  if (!timestamps) {\n    ticks[time] = true;\n  } else if (timestamps.length) {\n    const {lo, hi} = _lookup(timestamps, time);\n    const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n    ticks[timestamp] = true;\n  }\n}\nfunction setMajorTicks(scale, ticks, map, majorUnit) {\n  const adapter = scale._adapter;\n  const first = +adapter.startOf(ticks[0].value, majorUnit);\n  const last = ticks[ticks.length - 1].value;\n  let major, index;\n  for (major = first; major <= last; major = +adapter.add(major, 1, majorUnit)) {\n    index = map[major];\n    if (index >= 0) {\n      ticks[index].major = true;\n    }\n  }\n  return ticks;\n}\nfunction ticksFromTimestamps(scale, values, majorUnit) {\n  const ticks = [];\n  const map = {};\n  const ilen = values.length;\n  let i, value;\n  for (i = 0; i < ilen; ++i) {\n    value = values[i];\n    map[value] = i;\n    ticks.push({\n      value,\n      major: false\n    });\n  }\n  return (ilen === 0 || !majorUnit) ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\nclass TimeScale extends Scale {\n  constructor(props) {\n    super(props);\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n    this._unit = 'day';\n    this._majorUnit = undefined;\n    this._offsets = {};\n    this._normalized = false;\n    this._parseOpts = undefined;\n  }\n  init(scaleOpts, opts) {\n    const time = scaleOpts.time || (scaleOpts.time = {});\n    const adapter = this._adapter = new _adapters._date(scaleOpts.adapters.date);\n    mergeIf(time.displayFormats, adapter.formats());\n    this._parseOpts = {\n      parser: time.parser,\n      round: time.round,\n      isoWeekday: time.isoWeekday\n    };\n    super.init(scaleOpts);\n    this._normalized = opts.normalized;\n  }\n  parse(raw, index) {\n    if (raw === undefined) {\n      return null;\n    }\n    return parse(this, raw);\n  }\n  beforeLayout() {\n    super.beforeLayout();\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n  }\n  determineDataLimits() {\n    const options = this.options;\n    const adapter = this._adapter;\n    const unit = options.time.unit || 'day';\n    let {min, max, minDefined, maxDefined} = this.getUserBounds();\n    function _applyBounds(bounds) {\n      if (!minDefined && !isNaN(bounds.min)) {\n        min = Math.min(min, bounds.min);\n      }\n      if (!maxDefined && !isNaN(bounds.max)) {\n        max = Math.max(max, bounds.max);\n      }\n    }\n    if (!minDefined || !maxDefined) {\n      _applyBounds(this._getLabelBounds());\n      if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n        _applyBounds(this.getMinMax(false));\n      }\n    }\n    min = isNumberFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n    max = isNumberFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n    this.min = Math.min(min, max - 1);\n    this.max = Math.max(min + 1, max);\n  }\n  _getLabelBounds() {\n    const arr = this.getLabelTimestamps();\n    let min = Number.POSITIVE_INFINITY;\n    let max = Number.NEGATIVE_INFINITY;\n    if (arr.length) {\n      min = arr[0];\n      max = arr[arr.length - 1];\n    }\n    return {min, max};\n  }\n  buildTicks() {\n    const options = this.options;\n    const timeOpts = options.time;\n    const tickOpts = options.ticks;\n    const timestamps = tickOpts.source === 'labels' ? this.getLabelTimestamps() : this._generate();\n    if (options.bounds === 'ticks' && timestamps.length) {\n      this.min = this._userMin || timestamps[0];\n      this.max = this._userMax || timestamps[timestamps.length - 1];\n    }\n    const min = this.min;\n    const max = this.max;\n    const ticks = _filterBetween(timestamps, min, max);\n    this._unit = timeOpts.unit || (tickOpts.autoSkip\n      ? determineUnitForAutoTicks(timeOpts.minUnit, this.min, this.max, this._getLabelCapacity(min))\n      : determineUnitForFormatting(this, ticks.length, timeOpts.minUnit, this.min, this.max));\n    this._majorUnit = !tickOpts.major.enabled || this._unit === 'year' ? undefined\n      : determineMajorUnit(this._unit);\n    this.initOffsets(timestamps);\n    if (options.reverse) {\n      ticks.reverse();\n    }\n    return ticksFromTimestamps(this, ticks, this._majorUnit);\n  }\n  initOffsets(timestamps) {\n    let start = 0;\n    let end = 0;\n    let first, last;\n    if (this.options.offset && timestamps.length) {\n      first = this.getDecimalForValue(timestamps[0]);\n      if (timestamps.length === 1) {\n        start = 1 - first;\n      } else {\n        start = (this.getDecimalForValue(timestamps[1]) - first) / 2;\n      }\n      last = this.getDecimalForValue(timestamps[timestamps.length - 1]);\n      if (timestamps.length === 1) {\n        end = last;\n      } else {\n        end = (last - this.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n      }\n    }\n    const limit = timestamps.length < 3 ? 0.5 : 0.25;\n    start = _limitValue(start, 0, limit);\n    end = _limitValue(end, 0, limit);\n    this._offsets = {start, end, factor: 1 / (start + 1 + end)};\n  }\n  _generate() {\n    const adapter = this._adapter;\n    const min = this.min;\n    const max = this.max;\n    const options = this.options;\n    const timeOpts = options.time;\n    const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, this._getLabelCapacity(min));\n    const stepSize = valueOrDefault(timeOpts.stepSize, 1);\n    const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n    const hasWeekday = isNumber(weekday) || weekday === true;\n    const ticks = {};\n    let first = min;\n    let time, count;\n    if (hasWeekday) {\n      first = +adapter.startOf(first, 'isoWeek', weekday);\n    }\n    first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n    if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n      throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n    }\n    const timestamps = options.ticks.source === 'data' && this.getDataTimestamps();\n    for (time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++) {\n      addTick(ticks, time, timestamps);\n    }\n    if (time === max || options.bounds === 'ticks' || count === 1) {\n      addTick(ticks, time, timestamps);\n    }\n    return Object.keys(ticks).sort((a, b) => a - b).map(x => +x);\n  }\n  getLabelForValue(value) {\n    const adapter = this._adapter;\n    const timeOpts = this.options.time;\n    if (timeOpts.tooltipFormat) {\n      return adapter.format(value, timeOpts.tooltipFormat);\n    }\n    return adapter.format(value, timeOpts.displayFormats.datetime);\n  }\n  _tickFormatFunction(time, index, ticks, format) {\n    const options = this.options;\n    const formats = options.time.displayFormats;\n    const unit = this._unit;\n    const majorUnit = this._majorUnit;\n    const minorFormat = unit && formats[unit];\n    const majorFormat = majorUnit && formats[majorUnit];\n    const tick = ticks[index];\n    const major = majorUnit && majorFormat && tick && tick.major;\n    const label = this._adapter.format(time, format || (major ? majorFormat : minorFormat));\n    const formatter = options.ticks.callback;\n    return formatter ? callback(formatter, [label, index, ticks], this) : label;\n  }\n  generateTickLabels(ticks) {\n    let i, ilen, tick;\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      tick.label = this._tickFormatFunction(tick.value, i, ticks);\n    }\n  }\n  getDecimalForValue(value) {\n    return value === null ? NaN : (value - this.min) / (this.max - this.min);\n  }\n  getPixelForValue(value) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForValue(value);\n    return this.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n  }\n  getValueForPixel(pixel) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return this.min + pos * (this.max - this.min);\n  }\n  _getLabelSize(label) {\n    const ticksOpts = this.options.ticks;\n    const tickLabelWidth = this.ctx.measureText(label).width;\n    const angle = toRadians(this.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n    const cosRotation = Math.cos(angle);\n    const sinRotation = Math.sin(angle);\n    const tickFontSize = this._resolveTickFontOptions(0).size;\n    return {\n      w: (tickLabelWidth * cosRotation) + (tickFontSize * sinRotation),\n      h: (tickLabelWidth * sinRotation) + (tickFontSize * cosRotation)\n    };\n  }\n  _getLabelCapacity(exampleTime) {\n    const timeOpts = this.options.time;\n    const displayFormats = timeOpts.displayFormats;\n    const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n    const exampleLabel = this._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(this, [exampleTime], this._majorUnit), format);\n    const size = this._getLabelSize(exampleLabel);\n    const capacity = Math.floor(this.isHorizontal() ? this.width / size.w : this.height / size.h) - 1;\n    return capacity > 0 ? capacity : 1;\n  }\n  getDataTimestamps() {\n    let timestamps = this._cache.data || [];\n    let i, ilen;\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const metas = this.getMatchingVisibleMetas();\n    if (this._normalized && metas.length) {\n      return (this._cache.data = metas[0].controller.getAllParsedValues(this));\n    }\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(this));\n    }\n    return (this._cache.data = this.normalize(timestamps));\n  }\n  getLabelTimestamps() {\n    const timestamps = this._cache.labels || [];\n    let i, ilen;\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const labels = this.getLabels();\n    for (i = 0, ilen = labels.length; i < ilen; ++i) {\n      timestamps.push(parse(this, labels[i]));\n    }\n    return (this._cache.labels = this._normalized ? timestamps : this.normalize(timestamps));\n  }\n  normalize(values) {\n    return _arrayUnique(values.sort(sorter));\n  }\n}\nTimeScale.id = 'time';\nTimeScale.defaults = {\n  bounds: 'data',\n  adapters: {},\n  time: {\n    parser: false,\n    unit: false,\n    round: false,\n    isoWeekday: false,\n    minUnit: 'millisecond',\n    displayFormats: {}\n  },\n  ticks: {\n    source: 'auto',\n    major: {\n      enabled: false\n    }\n  }\n};\n\nfunction interpolate(table, val, reverse) {\n  let lo = 0;\n  let hi = table.length - 1;\n  let prevSource, nextSource, prevTarget, nextTarget;\n  if (reverse) {\n    if (val >= table[lo].pos && val <= table[hi].pos) {\n      ({lo, hi} = _lookupByKey(table, 'pos', val));\n    }\n    ({pos: prevSource, time: prevTarget} = table[lo]);\n    ({pos: nextSource, time: nextTarget} = table[hi]);\n  } else {\n    if (val >= table[lo].time && val <= table[hi].time) {\n      ({lo, hi} = _lookupByKey(table, 'time', val));\n    }\n    ({time: prevSource, pos: prevTarget} = table[lo]);\n    ({time: nextSource, pos: nextTarget} = table[hi]);\n  }\n  const span = nextSource - prevSource;\n  return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\nclass TimeSeriesScale extends TimeScale {\n  constructor(props) {\n    super(props);\n    this._table = [];\n    this._minPos = undefined;\n    this._tableRange = undefined;\n  }\n  initOffsets() {\n    const timestamps = this._getTimestampsForTable();\n    const table = this._table = this.buildLookupTable(timestamps);\n    this._minPos = interpolate(table, this.min);\n    this._tableRange = interpolate(table, this.max) - this._minPos;\n    super.initOffsets(timestamps);\n  }\n  buildLookupTable(timestamps) {\n    const {min, max} = this;\n    const items = [];\n    const table = [];\n    let i, ilen, prev, curr, next;\n    for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n      curr = timestamps[i];\n      if (curr >= min && curr <= max) {\n        items.push(curr);\n      }\n    }\n    if (items.length < 2) {\n      return [\n        {time: min, pos: 0},\n        {time: max, pos: 1}\n      ];\n    }\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      next = items[i + 1];\n      prev = items[i - 1];\n      curr = items[i];\n      if (Math.round((next + prev) / 2) !== curr) {\n        table.push({time: curr, pos: i / (ilen - 1)});\n      }\n    }\n    return table;\n  }\n  _getTimestampsForTable() {\n    let timestamps = this._cache.all || [];\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const data = this.getDataTimestamps();\n    const label = this.getLabelTimestamps();\n    if (data.length && label.length) {\n      timestamps = this.normalize(data.concat(label));\n    } else {\n      timestamps = data.length ? data : label;\n    }\n    timestamps = this._cache.all = timestamps;\n    return timestamps;\n  }\n  getDecimalForValue(value) {\n    return (interpolate(this._table, value) - this._minPos) / this._tableRange;\n  }\n  getValueForPixel(pixel) {\n    const offsets = this._offsets;\n    const decimal = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return interpolate(this._table, decimal * this._tableRange + this._minPos, true);\n  }\n}\nTimeSeriesScale.id = 'timeseries';\nTimeSeriesScale.defaults = TimeScale.defaults;\n\nvar scales = /*#__PURE__*/Object.freeze({\n__proto__: null,\nCategoryScale: CategoryScale,\nLinearScale: LinearScale,\nLogarithmicScale: LogarithmicScale,\nRadialLinearScale: RadialLinearScale,\nTimeScale: TimeScale,\nTimeSeriesScale: TimeSeriesScale\n});\n\nChart.register(controllers, scales, elements, plugins);\nChart.helpers = {...helpers};\nChart._adapters = _adapters;\nChart.Animation = Animation;\nChart.Animations = Animations;\nChart.animator = animator;\nChart.controllers = registry.controllers.items;\nChart.DatasetController = DatasetController;\nChart.Element = Element;\nChart.elements = elements;\nChart.Interaction = Interaction;\nChart.layouts = layouts;\nChart.platforms = platforms;\nChart.Scale = Scale;\nChart.Ticks = Ticks;\nObject.assign(Chart, controllers, scales, elements, plugins, platforms);\nChart.Chart = Chart;\nif (typeof window !== 'undefined') {\n  window.Chart = Chart;\n}\n\nreturn Chart;\n\n}));\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}