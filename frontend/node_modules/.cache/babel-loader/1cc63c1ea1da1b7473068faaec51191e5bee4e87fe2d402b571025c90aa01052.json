{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SETUP\\\\Desktop\\\\yap-t carbonsync ai\\\\frontend\\\\src\\\\components\\\\ForecastChart.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport './ForecastChart.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ForecastChart = ({\n  data,\n  forecast,\n  optimizedForecast,\n  impacts\n}) => {\n  _s();\n  const chartRef = useRef(null);\n  useEffect(() => {\n    if (!forecast || !chartRef.current) return;\n\n    // Clear previous chart\n    chartRef.current.innerHTML = '';\n\n    // Create a simple SVG chart\n    const createChart = () => {\n      const container = chartRef.current;\n\n      // Process data to ensure one point per month\n      const processedData = processMonthlyData(data);\n      const processedForecast = processForecastData(forecast);\n      const processedOptimized = optimizedForecast ? processForecastData(optimizedForecast) : [];\n\n      // Find min and max values for scaling\n      const allValues = [...processedData.map(d => d.emissions), ...processedForecast.map(d => d.emissions), ...processedForecast.map(d => d.upper), ...processedForecast.map(d => d.lower), ...processedOptimized.map(d => d.emissions)].filter(v => v !== null && v !== undefined);\n      const minValue = Math.min(...allValues) * 0.9;\n      const maxValue = Math.max(...allValues) * 1.1;\n\n      // Combine all months for x-axis\n      const allMonths = [...processedData.map(d => d.monthLabel), ...processedForecast.map(d => d.monthLabel), ...processedOptimized.map(d => d.monthLabel)];\n\n      // Remove duplicates and sort\n      const uniqueMonths = Array.from(new Set(allMonths)).sort();\n\n      // Chart dimensions\n      const chartWidth = 1200;\n      const chartHeight = 600;\n      const marginLeft = 120;\n      const marginRight = 60;\n      const marginTop = 60;\n      const marginBottom = 150; // Increased bottom margin for labels\n\n      const graphWidth = chartWidth - marginLeft - marginRight;\n      const graphHeight = chartHeight - marginTop - marginBottom;\n\n      // Create SVG element\n      const svg = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n      svg.setAttribute('width', chartWidth);\n      svg.setAttribute('height', chartHeight);\n      svg.style.display = 'block';\n      svg.style.margin = '0 auto';\n      svg.style.background = 'rgba(0, 0, 0, 0.2)';\n      svg.style.borderRadius = '10px';\n\n      // Add title\n      const title = document.createElementNS('http://www.w3.org/2000/svg', 'text');\n      title.setAttribute('x', chartWidth / 2);\n      title.setAttribute('y', 30);\n      title.setAttribute('text-anchor', 'middle');\n      title.setAttribute('font-family', 'Orbitron, sans-serif');\n      title.setAttribute('font-size', '22px');\n      title.setAttribute('fill', '#FFFFFF');\n      title.textContent = 'Monthly Carbon Emissions Forecast';\n      svg.appendChild(title);\n\n      // Create group for graph\n      const graph = document.createElementNS('http://www.w3.org/2000/svg', 'g');\n      graph.setAttribute('transform', `translate(${marginLeft}, ${marginTop})`);\n      svg.appendChild(graph);\n\n      // Helper function to convert data point to position\n      const getX = index => index / (uniqueMonths.length - 1) * graphWidth;\n      const getY = value => graphHeight - (value - minValue) / (maxValue - minValue) * graphHeight;\n\n      // Draw x and y axes\n      const xAxis = document.createElementNS('http://www.w3.org/2000/svg', 'line');\n      xAxis.setAttribute('x1', 0);\n      xAxis.setAttribute('y1', graphHeight);\n      xAxis.setAttribute('x2', graphWidth);\n      xAxis.setAttribute('y2', graphHeight);\n      xAxis.setAttribute('stroke', '#FFFFFF');\n      xAxis.setAttribute('stroke-width', '2');\n      graph.appendChild(xAxis);\n      const yAxis = document.createElementNS('http://www.w3.org/2000/svg', 'line');\n      yAxis.setAttribute('x1', 0);\n      yAxis.setAttribute('y1', 0);\n      yAxis.setAttribute('x2', 0);\n      yAxis.setAttribute('y2', graphHeight);\n      yAxis.setAttribute('stroke', '#FFFFFF');\n      yAxis.setAttribute('stroke-width', '2');\n      graph.appendChild(yAxis);\n\n      // Draw x-axis labels\n      uniqueMonths.forEach((month, index) => {\n        const x = getX(index);\n\n        // Draw tick\n        const tick = document.createElementNS('http://www.w3.org/2000/svg', 'line');\n        tick.setAttribute('x1', x);\n        tick.setAttribute('y1', graphHeight);\n        tick.setAttribute('x2', x);\n        tick.setAttribute('y2', graphHeight + 10);\n        tick.setAttribute('stroke', '#FFFFFF');\n        tick.setAttribute('stroke-width', '2');\n        graph.appendChild(tick);\n\n        // Draw label - only show every other month if there are many months\n        if (uniqueMonths.length <= 12 || index % 2 === 0) {\n          const label = document.createElementNS('http://www.w3.org/2000/svg', 'text');\n          label.setAttribute('x', x);\n          label.setAttribute('y', graphHeight + 30);\n          label.setAttribute('text-anchor', 'middle');\n          label.setAttribute('font-family', 'Roboto, sans-serif');\n          label.setAttribute('font-size', '14px');\n          label.setAttribute('fill', '#FFFFFF');\n          label.setAttribute('transform', `rotate(45, ${x}, ${graphHeight + 30})`);\n\n          // Shorten month labels if too many\n          let displayText = month;\n          if (uniqueMonths.length > 12) {\n            const parts = month.split(' ');\n            displayText = parts[0].substring(0, 3) + ' ' + parts[1];\n          }\n          label.textContent = displayText;\n          graph.appendChild(label);\n        }\n      });\n\n      // Draw y-axis labels\n      const yTicks = 5;\n      for (let i = 0; i <= yTicks; i++) {\n        const value = minValue + (maxValue - minValue) * (i / yTicks);\n        const y = getY(value);\n\n        // Draw tick\n        const tick = document.createElementNS('http://www.w3.org/2000/svg', 'line');\n        tick.setAttribute('x1', -10);\n        tick.setAttribute('y1', y);\n        tick.setAttribute('x2', 0);\n        tick.setAttribute('y2', y);\n        tick.setAttribute('stroke', '#FFFFFF');\n        tick.setAttribute('stroke-width', '2');\n        graph.appendChild(tick);\n\n        // Draw label\n        const label = document.createElementNS('http://www.w3.org/2000/svg', 'text');\n        label.setAttribute('x', -15);\n        label.setAttribute('y', y + 5);\n        label.setAttribute('text-anchor', 'end');\n        label.setAttribute('font-family', 'Roboto, sans-serif');\n        label.setAttribute('font-size', '14px');\n        label.setAttribute('fill', '#FFFFFF');\n        label.textContent = value.toFixed(1);\n        graph.appendChild(label);\n\n        // Draw grid line\n        const gridLine = document.createElementNS('http://www.w3.org/2000/svg', 'line');\n        gridLine.setAttribute('x1', 0);\n        gridLine.setAttribute('y1', y);\n        gridLine.setAttribute('x2', graphWidth);\n        gridLine.setAttribute('y2', y);\n        gridLine.setAttribute('stroke', 'rgba(255, 255, 255, 0.1)');\n        gridLine.setAttribute('stroke-width', '1');\n        graph.appendChild(gridLine);\n      }\n\n      // Draw axis titles\n      const xTitle = document.createElementNS('http://www.w3.org/2000/svg', 'text');\n      xTitle.setAttribute('x', graphWidth / 2);\n      xTitle.setAttribute('y', graphHeight + 70);\n      xTitle.setAttribute('text-anchor', 'middle');\n      xTitle.setAttribute('font-family', 'Orbitron, sans-serif');\n      xTitle.setAttribute('font-size', '16px');\n      xTitle.setAttribute('fill', '#FFFFFF');\n      xTitle.textContent = 'Month';\n      graph.appendChild(xTitle);\n      const yTitle = document.createElementNS('http://www.w3.org/2000/svg', 'text');\n      yTitle.setAttribute('transform', `rotate(-90, -70, ${graphHeight / 2})`);\n      yTitle.setAttribute('x', -70);\n      yTitle.setAttribute('y', graphHeight / 2);\n      yTitle.setAttribute('text-anchor', 'middle');\n      yTitle.setAttribute('font-family', 'Orbitron, sans-serif');\n      yTitle.setAttribute('font-size', '16px');\n      yTitle.setAttribute('fill', '#FFFFFF');\n      yTitle.textContent = 'Emissions (tons CO2e)';\n      graph.appendChild(yTitle);\n\n      // Draw data lines and points\n\n      // Draw actual data\n      if (processedData.length > 0) {\n        // Draw line\n        let pathD = '';\n        processedData.forEach((point, i) => {\n          const monthIndex = uniqueMonths.indexOf(point.monthLabel);\n          if (monthIndex !== -1) {\n            const x = getX(monthIndex);\n            const y = getY(point.emissions);\n            if (i === 0) {\n              pathD = `M ${x} ${y}`;\n            } else {\n              pathD += ` L ${x} ${y}`;\n            }\n          }\n        });\n        const actualPath = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n        actualPath.setAttribute('d', pathD);\n        actualPath.setAttribute('fill', 'none');\n        actualPath.setAttribute('stroke', '#00FFFF');\n        actualPath.setAttribute('stroke-width', '3');\n        graph.appendChild(actualPath);\n\n        // Draw points\n        processedData.forEach(point => {\n          const monthIndex = uniqueMonths.indexOf(point.monthLabel);\n          if (monthIndex !== -1) {\n            const x = getX(monthIndex);\n            const y = getY(point.emissions);\n            const circle = document.createElementNS('http://www.w3.org/2000/svg', 'circle');\n            circle.setAttribute('cx', x);\n            circle.setAttribute('cy', y);\n            circle.setAttribute('r', '8');\n            circle.setAttribute('fill', '#00FFFF');\n            circle.setAttribute('stroke', '#000000');\n            circle.setAttribute('stroke-width', '2');\n\n            // Add tooltip data\n            circle.setAttribute('data-month', point.monthLabel);\n            circle.setAttribute('data-value', point.emissions.toFixed(2));\n            circle.setAttribute('data-type', 'Actual');\n\n            // Add hover effect\n            circle.addEventListener('mouseover', showTooltip);\n            circle.addEventListener('mouseout', hideTooltip);\n            graph.appendChild(circle);\n          }\n        });\n      }\n\n      // Draw forecast data\n      if (processedForecast.length > 0) {\n        // Draw confidence interval\n        let upperPathD = '';\n        let lowerPathD = '';\n        processedForecast.forEach((point, i) => {\n          const monthIndex = uniqueMonths.indexOf(point.monthLabel);\n          if (monthIndex !== -1) {\n            const x = getX(monthIndex);\n            const upperY = getY(point.upper);\n            const lowerY = getY(point.lower);\n            if (i === 0) {\n              upperPathD = `M ${x} ${upperY}`;\n              lowerPathD = `M ${x} ${lowerY}`;\n            } else {\n              upperPathD += ` L ${x} ${upperY}`;\n              lowerPathD += ` L ${x} ${lowerY}`;\n            }\n          }\n        });\n\n        // Draw upper bound\n        const upperPath = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n        upperPath.setAttribute('d', upperPathD);\n        upperPath.setAttribute('fill', 'none');\n        upperPath.setAttribute('stroke', 'rgba(255, 0, 255, 0.3)');\n        upperPath.setAttribute('stroke-width', '2');\n        upperPath.setAttribute('stroke-dasharray', '5,5');\n        graph.appendChild(upperPath);\n\n        // Draw lower bound\n        const lowerPath = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n        lowerPath.setAttribute('d', lowerPathD);\n        lowerPath.setAttribute('fill', 'none');\n        lowerPath.setAttribute('stroke', 'rgba(255, 0, 255, 0.3)');\n        lowerPath.setAttribute('stroke-width', '2');\n        lowerPath.setAttribute('stroke-dasharray', '5,5');\n        graph.appendChild(lowerPath);\n\n        // Fill confidence interval\n        const confidencePath = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n        confidencePath.setAttribute('d', `${upperPathD} L ${getX(uniqueMonths.indexOf(processedForecast[processedForecast.length - 1].monthLabel))} ${getY(processedForecast[processedForecast.length - 1].lower)} ${lowerPathD.replace('M', 'L')} Z`);\n        confidencePath.setAttribute('fill', 'rgba(255, 0, 255, 0.1)');\n        confidencePath.setAttribute('stroke', 'none');\n        graph.insertBefore(confidencePath, upperPath);\n\n        // Draw forecast line\n        let pathD = '';\n        processedForecast.forEach((point, i) => {\n          const monthIndex = uniqueMonths.indexOf(point.monthLabel);\n          if (monthIndex !== -1) {\n            const x = getX(monthIndex);\n            const y = getY(point.emissions);\n            if (i === 0) {\n              pathD = `M ${x} ${y}`;\n            } else {\n              pathD += ` L ${x} ${y}`;\n            }\n          }\n        });\n        const forecastPath = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n        forecastPath.setAttribute('d', pathD);\n        forecastPath.setAttribute('fill', 'none');\n        forecastPath.setAttribute('stroke', '#FF00FF');\n        forecastPath.setAttribute('stroke-width', '3');\n        graph.appendChild(forecastPath);\n\n        // Draw points\n        processedForecast.forEach(point => {\n          const monthIndex = uniqueMonths.indexOf(point.monthLabel);\n          if (monthIndex !== -1) {\n            const x = getX(monthIndex);\n            const y = getY(point.emissions);\n            const circle = document.createElementNS('http://www.w3.org/2000/svg', 'circle');\n            circle.setAttribute('cx', x);\n            circle.setAttribute('cy', y);\n            circle.setAttribute('r', '8');\n            circle.setAttribute('fill', '#FF00FF');\n            circle.setAttribute('stroke', '#000000');\n            circle.setAttribute('stroke-width', '2');\n\n            // Add tooltip data\n            circle.setAttribute('data-month', point.monthLabel);\n            circle.setAttribute('data-value', point.emissions.toFixed(2));\n            circle.setAttribute('data-type', 'Forecast');\n\n            // Add hover effect\n            circle.addEventListener('mouseover', showTooltip);\n            circle.addEventListener('mouseout', hideTooltip);\n            graph.appendChild(circle);\n          }\n        });\n      }\n\n      // Draw optimized forecast data\n      if (processedOptimized.length > 0) {\n        // Draw line\n        let pathD = '';\n        processedOptimized.forEach((point, i) => {\n          const monthIndex = uniqueMonths.indexOf(point.monthLabel);\n          if (monthIndex !== -1) {\n            const x = getX(monthIndex);\n            const y = getY(point.emissions);\n            if (i === 0) {\n              pathD = `M ${x} ${y}`;\n            } else {\n              pathD += ` L ${x} ${y}`;\n            }\n          }\n        });\n        const optimizedPath = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n        optimizedPath.setAttribute('d', pathD);\n        optimizedPath.setAttribute('fill', 'none');\n        optimizedPath.setAttribute('stroke', '#00FF00');\n        optimizedPath.setAttribute('stroke-width', '3');\n        optimizedPath.setAttribute('stroke-dasharray', '5,5');\n        graph.appendChild(optimizedPath);\n\n        // Draw points\n        processedOptimized.forEach(point => {\n          const monthIndex = uniqueMonths.indexOf(point.monthLabel);\n          if (monthIndex !== -1) {\n            const x = getX(monthIndex);\n            const y = getY(point.emissions);\n            const circle = document.createElementNS('http://www.w3.org/2000/svg', 'circle');\n            circle.setAttribute('cx', x);\n            circle.setAttribute('cy', y);\n            circle.setAttribute('r', '8');\n            circle.setAttribute('fill', '#00FF00');\n            circle.setAttribute('stroke', '#000000');\n            circle.setAttribute('stroke-width', '2');\n\n            // Add tooltip data\n            circle.setAttribute('data-month', point.monthLabel);\n            circle.setAttribute('data-value', point.emissions.toFixed(2));\n            circle.setAttribute('data-type', 'Optimized');\n\n            // Add hover effect\n            circle.addEventListener('mouseover', showTooltip);\n            circle.addEventListener('mouseout', hideTooltip);\n            graph.appendChild(circle);\n          }\n        });\n      }\n\n      // Create legend\n      const legendGroup = document.createElementNS('http://www.w3.org/2000/svg', 'g');\n      legendGroup.setAttribute('transform', `translate(${marginLeft + 20}, ${marginTop - 30})`);\n      const legendItems = [{\n        label: 'Actual Emissions',\n        color: '#00FFFF'\n      }, {\n        label: 'Forecast Emissions',\n        color: '#FF00FF'\n      }, {\n        label: 'Optimized Emissions',\n        color: '#00FF00'\n      }];\n      legendItems.forEach((item, index) => {\n        const x = index * 200; // Increased spacing between legend items\n\n        // Draw color box\n        const rect = document.createElementNS('http://www.w3.org/2000/svg', 'rect');\n        rect.setAttribute('x', x);\n        rect.setAttribute('y', 0);\n        rect.setAttribute('width', 15);\n        rect.setAttribute('height', 15);\n        rect.setAttribute('fill', item.color);\n        rect.setAttribute('stroke', '#000000');\n        rect.setAttribute('stroke-width', '1');\n        legendGroup.appendChild(rect);\n\n        // Draw label\n        const text = document.createElementNS('http://www.w3.org/2000/svg', 'text');\n        text.setAttribute('x', x + 20);\n        text.setAttribute('y', 12);\n        text.setAttribute('font-family', 'Roboto, sans-serif');\n        text.setAttribute('font-size', '12px');\n        text.setAttribute('fill', '#FFFFFF');\n        text.textContent = item.label;\n        legendGroup.appendChild(text);\n      });\n      svg.appendChild(legendGroup);\n\n      // Create tooltip\n      const tooltip = document.createElement('div');\n      tooltip.className = 'chart-tooltip';\n      tooltip.style.display = 'none';\n      tooltip.style.position = 'absolute';\n      tooltip.style.backgroundColor = 'rgba(0, 0, 0, 0.8)';\n      tooltip.style.color = '#FFFFFF';\n      tooltip.style.padding = '10px';\n      tooltip.style.borderRadius = '5px';\n      tooltip.style.pointerEvents = 'none';\n      tooltip.style.zIndex = '1000';\n      tooltip.style.fontFamily = 'Roboto, sans-serif';\n      tooltip.style.fontSize = '12px';\n      tooltip.style.border = '1px solid rgba(0, 255, 255, 0.5)';\n      tooltip.style.boxShadow = '0 0 10px rgba(0, 0, 0, 0.5)';\n      document.body.appendChild(tooltip);\n\n      // Tooltip functions\n      function showTooltip(event) {\n        const circle = event.target;\n        const month = circle.getAttribute('data-month');\n        const value = circle.getAttribute('data-value');\n        const type = circle.getAttribute('data-type');\n        tooltip.innerHTML = `\n          <div style=\"font-weight: bold; margin-bottom: 5px; color: #00FFFF;\">${month}</div>\n          <div>${type} Emissions: ${value} tons CO2e</div>\n        `;\n        tooltip.style.display = 'block';\n\n        // Position tooltip near the point but avoid edges\n        const rect = svg.getBoundingClientRect();\n        const circleRect = circle.getBoundingClientRect();\n\n        // Calculate position to avoid going off-screen\n        let leftPos = circleRect.left + window.scrollX + 10;\n        let topPos = circleRect.top + window.scrollY - 40;\n\n        // Adjust if tooltip would go off right edge\n        if (leftPos + 200 > window.innerWidth) {\n          leftPos = circleRect.left + window.scrollX - 210;\n        }\n\n        // Adjust if tooltip would go off top edge\n        if (topPos < 10) {\n          topPos = circleRect.top + window.scrollY + 20;\n        }\n        tooltip.style.left = `${leftPos}px`;\n        tooltip.style.top = `${topPos}px`;\n\n        // Highlight the point\n        circle.setAttribute('r', '10');\n      }\n      function hideTooltip(event) {\n        tooltip.style.display = 'none';\n\n        // Reset point size\n        event.target.setAttribute('r', '8');\n      }\n\n      // Add the SVG to the container\n      container.appendChild(svg);\n\n      // Clean up tooltip when component unmounts\n      return () => {\n        if (tooltip && tooltip.parentNode) {\n          tooltip.parentNode.removeChild(tooltip);\n        }\n      };\n    };\n\n    // Create the chart\n    const cleanup = createChart();\n\n    // Add impact factors section if available\n    if (impacts && Object.keys(impacts).length > 0) {\n      const impactSection = document.createElement('div');\n      impactSection.className = 'impact-factors';\n      const impactTitle = document.createElement('h4');\n      impactTitle.textContent = 'Key Impact Factors';\n      impactSection.appendChild(impactTitle);\n      const impactList = document.createElement('div');\n      impactList.className = 'impact-list';\n\n      // Sort impacts by score\n      const sortedImpacts = Object.entries(impacts).sort((a, b) => Math.abs(b[1].impact_score) - Math.abs(a[1].impact_score)).slice(0, 3);\n      sortedImpacts.forEach(([factor, data], index) => {\n        let factorName = factor;\n        if (factor === 'energy_use') factorName = 'Energy Use';\n        if (factor === 'transport') factorName = 'Transport';\n        if (factor === 'waste') factorName = 'Waste';\n        if (factor === 'water') factorName = 'Water';\n        if (factor === 'fuel') factorName = 'Fuel';\n        if (factor === 'grid_intensity') factorName = 'Grid Intensity';\n        const impactItem = document.createElement('div');\n        impactItem.className = 'impact-item';\n        const impactRank = document.createElement('div');\n        impactRank.className = 'impact-rank';\n        impactRank.textContent = index + 1;\n        const impactInfo = document.createElement('div');\n        impactInfo.className = 'impact-info';\n        const impactName = document.createElement('div');\n        impactName.className = 'impact-name';\n        impactName.textContent = factorName;\n        const impactScore = document.createElement('div');\n        impactScore.className = 'impact-score';\n        const impactValue = document.createElement('span');\n        impactValue.className = 'impact-value';\n        impactValue.textContent = Math.abs(data.impact_score).toFixed(2);\n        impactScore.textContent = 'Impact Score: ';\n        impactScore.appendChild(impactValue);\n        impactInfo.appendChild(impactName);\n        impactInfo.appendChild(impactScore);\n        impactItem.appendChild(impactRank);\n        impactItem.appendChild(impactInfo);\n        impactList.appendChild(impactItem);\n      });\n      impactSection.appendChild(impactList);\n      chartRef.current.appendChild(impactSection);\n    }\n\n    // Add forecast data table below the chart\n    if (forecast && forecast.length > 0) {\n      const tableContainer = document.createElement('div');\n      tableContainer.className = 'forecast-table-container';\n      tableContainer.style.marginTop = '30px';\n      tableContainer.style.width = '100%';\n      tableContainer.style.overflowX = 'auto';\n      const table = document.createElement('table');\n      table.className = 'forecast-table';\n      table.style.width = '100%';\n      table.style.borderCollapse = 'collapse';\n      table.style.color = '#FFFFFF';\n      table.style.fontFamily = 'Roboto, sans-serif';\n      table.style.fontSize = '14px';\n      table.style.textAlign = 'center';\n\n      // Create table header\n      const thead = document.createElement('thead');\n      const headerRow = document.createElement('tr');\n      const headers = ['Month', 'Predicted Emissions', 'Lower Bound', 'Upper Bound'];\n      if (optimizedForecast && optimizedForecast.length > 0) {\n        headers.push('Optimized Emissions', 'Potential Savings');\n      }\n      headers.forEach(header => {\n        const th = document.createElement('th');\n        th.textContent = header;\n        th.style.padding = '10px';\n        th.style.borderBottom = '1px solid rgba(0, 255, 255, 0.3)';\n        th.style.backgroundColor = 'rgba(0, 0, 0, 0.3)';\n        headerRow.appendChild(th);\n      });\n      thead.appendChild(headerRow);\n      table.appendChild(thead);\n\n      // Create table body\n      const tbody = document.createElement('tbody');\n\n      // Process forecast data for table\n      const tableData = processForecastData(forecast);\n      const optimizedData = optimizedForecast ? processForecastData(optimizedForecast) : [];\n      tableData.forEach((item, index) => {\n        const row = document.createElement('tr');\n        row.style.backgroundColor = index % 2 === 0 ? 'rgba(0, 0, 0, 0.2)' : 'rgba(0, 0, 0, 0.1)';\n\n        // Month\n        const monthCell = document.createElement('td');\n        monthCell.textContent = item.monthLabel;\n        monthCell.style.padding = '8px';\n        row.appendChild(monthCell);\n\n        // Predicted Emissions\n        const emissionsCell = document.createElement('td');\n        emissionsCell.textContent = item.emissions.toFixed(2);\n        emissionsCell.style.padding = '8px';\n        row.appendChild(emissionsCell);\n\n        // Lower Bound\n        const lowerCell = document.createElement('td');\n        lowerCell.textContent = item.lower.toFixed(2);\n        lowerCell.style.padding = '8px';\n        row.appendChild(lowerCell);\n\n        // Upper Bound\n        const upperCell = document.createElement('td');\n        upperCell.textContent = item.upper.toFixed(2);\n        upperCell.style.padding = '8px';\n        row.appendChild(upperCell);\n\n        // Add optimized data if available\n        if (optimizedData.length > 0) {\n          const optimizedItem = optimizedData[index];\n\n          // Optimized Emissions\n          const optimizedCell = document.createElement('td');\n          optimizedCell.textContent = optimizedItem.emissions.toFixed(2);\n          optimizedCell.style.padding = '8px';\n          optimizedCell.style.color = '#00FF00';\n          row.appendChild(optimizedCell);\n\n          // Potential Savings\n          const savingsCell = document.createElement('td');\n          const savings = item.emissions - optimizedItem.emissions;\n          savingsCell.textContent = savings.toFixed(2);\n          savingsCell.style.padding = '8px';\n          savingsCell.style.color = savings > 0 ? '#00FF00' : '#FF0000';\n          row.appendChild(savingsCell);\n        }\n        tbody.appendChild(row);\n      });\n      table.appendChild(tbody);\n      tableContainer.appendChild(table);\n      chartRef.current.appendChild(tableContainer);\n    }\n\n    // Return cleanup function\n    return cleanup;\n  }, [data, forecast, optimizedForecast, impacts]);\n\n  // Process actual data to ensure one point per month\n  const processMonthlyData = data => {\n    if (!data || data.length === 0) return [];\n\n    // Group by month\n    const monthlyData = {};\n    data.forEach(item => {\n      if (!item.date || !item.emissions) return;\n      const date = new Date(item.date);\n      const monthKey = `${date.getFullYear()}-${String(date.getMonth() + 1).padStart(2, '0')}`;\n      if (!monthlyData[monthKey]) {\n        monthlyData[monthKey] = {\n          month: monthKey,\n          monthLabel: `${date.toLocaleString('default', {\n            month: 'long'\n          })} ${date.getFullYear()}`,\n          emissions: 0\n        };\n      }\n      monthlyData[monthKey].emissions += parseFloat(item.emissions) || 0;\n    });\n\n    // Convert to array and sort by month\n    return Object.values(monthlyData).sort((a, b) => a.month.localeCompare(b.month));\n  };\n\n  // Process forecast data\n  const processForecastData = forecastData => {\n    if (!forecastData || forecastData.length === 0) return [];\n    return forecastData.map(item => {\n      const date = new Date(item.ds);\n      return {\n        month: `${date.getFullYear()}-${String(date.getMonth() + 1).padStart(2, '0')}`,\n        monthLabel: `${date.toLocaleString('default', {\n          month: 'long'\n        })} ${date.getFullYear()}`,\n        emissions: item.predicted_emissions,\n        upper: item.upper_bound,\n        lower: item.lower_bound\n      };\n    }).sort((a, b) => a.month.localeCompare(b.month));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"forecast-chart-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: chartRef,\n      className: \"chart-area\",\n      style: {\n        minHeight: '600px'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 740,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 739,\n    columnNumber: 5\n  }, this);\n};\n_s(ForecastChart, \"X+1SfQQ6xefXNU27aQW843M7cTw=\");\n_c = ForecastChart;\nexport default ForecastChart;\nvar _c;\n$RefreshReg$(_c, \"ForecastChart\");","map":{"version":3,"names":["React","useEffect","useRef","jsxDEV","_jsxDEV","ForecastChart","data","forecast","optimizedForecast","impacts","_s","chartRef","current","innerHTML","createChart","container","processedData","processMonthlyData","processedForecast","processForecastData","processedOptimized","allValues","map","d","emissions","upper","lower","filter","v","undefined","minValue","Math","min","maxValue","max","allMonths","monthLabel","uniqueMonths","Array","from","Set","sort","chartWidth","chartHeight","marginLeft","marginRight","marginTop","marginBottom","graphWidth","graphHeight","svg","document","createElementNS","setAttribute","style","display","margin","background","borderRadius","title","textContent","appendChild","graph","getX","index","length","getY","value","xAxis","yAxis","forEach","month","x","tick","label","displayText","parts","split","substring","yTicks","i","y","toFixed","gridLine","xTitle","yTitle","pathD","point","monthIndex","indexOf","actualPath","circle","addEventListener","showTooltip","hideTooltip","upperPathD","lowerPathD","upperY","lowerY","upperPath","lowerPath","confidencePath","replace","insertBefore","forecastPath","optimizedPath","legendGroup","legendItems","color","item","rect","text","tooltip","createElement","className","position","backgroundColor","padding","pointerEvents","zIndex","fontFamily","fontSize","border","boxShadow","body","event","target","getAttribute","type","getBoundingClientRect","circleRect","leftPos","left","window","scrollX","topPos","top","scrollY","innerWidth","parentNode","removeChild","cleanup","Object","keys","impactSection","impactTitle","impactList","sortedImpacts","entries","a","b","abs","impact_score","slice","factor","factorName","impactItem","impactRank","impactInfo","impactName","impactScore","impactValue","tableContainer","width","overflowX","table","borderCollapse","textAlign","thead","headerRow","headers","push","header","th","borderBottom","tbody","tableData","optimizedData","row","monthCell","emissionsCell","lowerCell","upperCell","optimizedItem","optimizedCell","savingsCell","savings","monthlyData","date","Date","monthKey","getFullYear","String","getMonth","padStart","toLocaleString","parseFloat","values","localeCompare","forecastData","ds","predicted_emissions","upper_bound","lower_bound","children","ref","minHeight","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/SETUP/Desktop/yap-t carbonsync ai/frontend/src/components/ForecastChart.js"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport './ForecastChart.css';\n\nconst ForecastChart = ({ data, forecast, optimizedForecast, impacts }) => {\n  const chartRef = useRef(null);\n\n  useEffect(() => {\n    if (!forecast || !chartRef.current) return;\n    \n    // Clear previous chart\n    chartRef.current.innerHTML = '';\n    \n    // Create a simple SVG chart\n    const createChart = () => {\n      const container = chartRef.current;\n      \n      // Process data to ensure one point per month\n      const processedData = processMonthlyData(data);\n      const processedForecast = processForecastData(forecast);\n      const processedOptimized = optimizedForecast ? processForecastData(optimizedForecast) : [];\n      \n      // Find min and max values for scaling\n      const allValues = [\n        ...processedData.map(d => d.emissions),\n        ...processedForecast.map(d => d.emissions),\n        ...processedForecast.map(d => d.upper),\n        ...processedForecast.map(d => d.lower),\n        ...processedOptimized.map(d => d.emissions)\n      ].filter(v => v !== null && v !== undefined);\n      \n      const minValue = Math.min(...allValues) * 0.9;\n      const maxValue = Math.max(...allValues) * 1.1;\n      \n      // Combine all months for x-axis\n      const allMonths = [\n        ...processedData.map(d => d.monthLabel),\n        ...processedForecast.map(d => d.monthLabel),\n        ...processedOptimized.map(d => d.monthLabel)\n      ];\n      \n      // Remove duplicates and sort\n      const uniqueMonths = Array.from(new Set(allMonths)).sort();\n      \n      // Chart dimensions\n      const chartWidth = 1200;\n      const chartHeight = 600;\n      const marginLeft = 120;\n      const marginRight = 60;\n      const marginTop = 60;\n      const marginBottom = 150; // Increased bottom margin for labels\n      \n      const graphWidth = chartWidth - marginLeft - marginRight;\n      const graphHeight = chartHeight - marginTop - marginBottom;\n      \n      // Create SVG element\n      const svg = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n      svg.setAttribute('width', chartWidth);\n      svg.setAttribute('height', chartHeight);\n      svg.style.display = 'block';\n      svg.style.margin = '0 auto';\n      svg.style.background = 'rgba(0, 0, 0, 0.2)';\n      svg.style.borderRadius = '10px';\n      \n      // Add title\n      const title = document.createElementNS('http://www.w3.org/2000/svg', 'text');\n      title.setAttribute('x', chartWidth / 2);\n      title.setAttribute('y', 30);\n      title.setAttribute('text-anchor', 'middle');\n      title.setAttribute('font-family', 'Orbitron, sans-serif');\n      title.setAttribute('font-size', '22px');\n      title.setAttribute('fill', '#FFFFFF');\n      title.textContent = 'Monthly Carbon Emissions Forecast';\n      svg.appendChild(title);\n      \n      // Create group for graph\n      const graph = document.createElementNS('http://www.w3.org/2000/svg', 'g');\n      graph.setAttribute('transform', `translate(${marginLeft}, ${marginTop})`);\n      svg.appendChild(graph);\n      \n      // Helper function to convert data point to position\n      const getX = (index) => (index / (uniqueMonths.length - 1)) * graphWidth;\n      const getY = (value) => graphHeight - ((value - minValue) / (maxValue - minValue)) * graphHeight;\n      \n      // Draw x and y axes\n      const xAxis = document.createElementNS('http://www.w3.org/2000/svg', 'line');\n      xAxis.setAttribute('x1', 0);\n      xAxis.setAttribute('y1', graphHeight);\n      xAxis.setAttribute('x2', graphWidth);\n      xAxis.setAttribute('y2', graphHeight);\n      xAxis.setAttribute('stroke', '#FFFFFF');\n      xAxis.setAttribute('stroke-width', '2');\n      graph.appendChild(xAxis);\n      \n      const yAxis = document.createElementNS('http://www.w3.org/2000/svg', 'line');\n      yAxis.setAttribute('x1', 0);\n      yAxis.setAttribute('y1', 0);\n      yAxis.setAttribute('x2', 0);\n      yAxis.setAttribute('y2', graphHeight);\n      yAxis.setAttribute('stroke', '#FFFFFF');\n      yAxis.setAttribute('stroke-width', '2');\n      graph.appendChild(yAxis);\n      \n      // Draw x-axis labels\n      uniqueMonths.forEach((month, index) => {\n        const x = getX(index);\n        \n        // Draw tick\n        const tick = document.createElementNS('http://www.w3.org/2000/svg', 'line');\n        tick.setAttribute('x1', x);\n        tick.setAttribute('y1', graphHeight);\n        tick.setAttribute('x2', x);\n        tick.setAttribute('y2', graphHeight + 10);\n        tick.setAttribute('stroke', '#FFFFFF');\n        tick.setAttribute('stroke-width', '2');\n        graph.appendChild(tick);\n        \n        // Draw label - only show every other month if there are many months\n        if (uniqueMonths.length <= 12 || index % 2 === 0) {\n          const label = document.createElementNS('http://www.w3.org/2000/svg', 'text');\n          label.setAttribute('x', x);\n          label.setAttribute('y', graphHeight + 30);\n          label.setAttribute('text-anchor', 'middle');\n          label.setAttribute('font-family', 'Roboto, sans-serif');\n          label.setAttribute('font-size', '14px');\n          label.setAttribute('fill', '#FFFFFF');\n          label.setAttribute('transform', `rotate(45, ${x}, ${graphHeight + 30})`);\n          \n          // Shorten month labels if too many\n          let displayText = month;\n          if (uniqueMonths.length > 12) {\n            const parts = month.split(' ');\n            displayText = parts[0].substring(0, 3) + ' ' + parts[1];\n          }\n          \n          label.textContent = displayText;\n          graph.appendChild(label);\n        }\n      });\n      \n      // Draw y-axis labels\n      const yTicks = 5;\n      for (let i = 0; i <= yTicks; i++) {\n        const value = minValue + ((maxValue - minValue) * (i / yTicks));\n        const y = getY(value);\n        \n        // Draw tick\n        const tick = document.createElementNS('http://www.w3.org/2000/svg', 'line');\n        tick.setAttribute('x1', -10);\n        tick.setAttribute('y1', y);\n        tick.setAttribute('x2', 0);\n        tick.setAttribute('y2', y);\n        tick.setAttribute('stroke', '#FFFFFF');\n        tick.setAttribute('stroke-width', '2');\n        graph.appendChild(tick);\n        \n        // Draw label\n        const label = document.createElementNS('http://www.w3.org/2000/svg', 'text');\n        label.setAttribute('x', -15);\n        label.setAttribute('y', y + 5);\n        label.setAttribute('text-anchor', 'end');\n        label.setAttribute('font-family', 'Roboto, sans-serif');\n        label.setAttribute('font-size', '14px');\n        label.setAttribute('fill', '#FFFFFF');\n        label.textContent = value.toFixed(1);\n        graph.appendChild(label);\n        \n        // Draw grid line\n        const gridLine = document.createElementNS('http://www.w3.org/2000/svg', 'line');\n        gridLine.setAttribute('x1', 0);\n        gridLine.setAttribute('y1', y);\n        gridLine.setAttribute('x2', graphWidth);\n        gridLine.setAttribute('y2', y);\n        gridLine.setAttribute('stroke', 'rgba(255, 255, 255, 0.1)');\n        gridLine.setAttribute('stroke-width', '1');\n        graph.appendChild(gridLine);\n      }\n      \n      // Draw axis titles\n      const xTitle = document.createElementNS('http://www.w3.org/2000/svg', 'text');\n      xTitle.setAttribute('x', graphWidth / 2);\n      xTitle.setAttribute('y', graphHeight + 70);\n      xTitle.setAttribute('text-anchor', 'middle');\n      xTitle.setAttribute('font-family', 'Orbitron, sans-serif');\n      xTitle.setAttribute('font-size', '16px');\n      xTitle.setAttribute('fill', '#FFFFFF');\n      xTitle.textContent = 'Month';\n      graph.appendChild(xTitle);\n      \n      const yTitle = document.createElementNS('http://www.w3.org/2000/svg', 'text');\n      yTitle.setAttribute('transform', `rotate(-90, -70, ${graphHeight / 2})`);\n      yTitle.setAttribute('x', -70);\n      yTitle.setAttribute('y', graphHeight / 2);\n      yTitle.setAttribute('text-anchor', 'middle');\n      yTitle.setAttribute('font-family', 'Orbitron, sans-serif');\n      yTitle.setAttribute('font-size', '16px');\n      yTitle.setAttribute('fill', '#FFFFFF');\n      yTitle.textContent = 'Emissions (tons CO2e)';\n      graph.appendChild(yTitle);\n      \n      // Draw data lines and points\n      \n      // Draw actual data\n      if (processedData.length > 0) {\n        // Draw line\n        let pathD = '';\n        processedData.forEach((point, i) => {\n          const monthIndex = uniqueMonths.indexOf(point.monthLabel);\n          if (monthIndex !== -1) {\n            const x = getX(monthIndex);\n            const y = getY(point.emissions);\n            \n            if (i === 0) {\n              pathD = `M ${x} ${y}`;\n            } else {\n              pathD += ` L ${x} ${y}`;\n            }\n          }\n        });\n        \n        const actualPath = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n        actualPath.setAttribute('d', pathD);\n        actualPath.setAttribute('fill', 'none');\n        actualPath.setAttribute('stroke', '#00FFFF');\n        actualPath.setAttribute('stroke-width', '3');\n        graph.appendChild(actualPath);\n        \n        // Draw points\n        processedData.forEach(point => {\n          const monthIndex = uniqueMonths.indexOf(point.monthLabel);\n          if (monthIndex !== -1) {\n            const x = getX(monthIndex);\n            const y = getY(point.emissions);\n            \n            const circle = document.createElementNS('http://www.w3.org/2000/svg', 'circle');\n            circle.setAttribute('cx', x);\n            circle.setAttribute('cy', y);\n            circle.setAttribute('r', '8');\n            circle.setAttribute('fill', '#00FFFF');\n            circle.setAttribute('stroke', '#000000');\n            circle.setAttribute('stroke-width', '2');\n            \n            // Add tooltip data\n            circle.setAttribute('data-month', point.monthLabel);\n            circle.setAttribute('data-value', point.emissions.toFixed(2));\n            circle.setAttribute('data-type', 'Actual');\n            \n            // Add hover effect\n            circle.addEventListener('mouseover', showTooltip);\n            circle.addEventListener('mouseout', hideTooltip);\n            \n            graph.appendChild(circle);\n          }\n        });\n      }\n      \n      // Draw forecast data\n      if (processedForecast.length > 0) {\n        // Draw confidence interval\n        let upperPathD = '';\n        let lowerPathD = '';\n        \n        processedForecast.forEach((point, i) => {\n          const monthIndex = uniqueMonths.indexOf(point.monthLabel);\n          if (monthIndex !== -1) {\n            const x = getX(monthIndex);\n            const upperY = getY(point.upper);\n            const lowerY = getY(point.lower);\n            \n            if (i === 0) {\n              upperPathD = `M ${x} ${upperY}`;\n              lowerPathD = `M ${x} ${lowerY}`;\n            } else {\n              upperPathD += ` L ${x} ${upperY}`;\n              lowerPathD += ` L ${x} ${lowerY}`;\n            }\n          }\n        });\n        \n        // Draw upper bound\n        const upperPath = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n        upperPath.setAttribute('d', upperPathD);\n        upperPath.setAttribute('fill', 'none');\n        upperPath.setAttribute('stroke', 'rgba(255, 0, 255, 0.3)');\n        upperPath.setAttribute('stroke-width', '2');\n        upperPath.setAttribute('stroke-dasharray', '5,5');\n        graph.appendChild(upperPath);\n        \n        // Draw lower bound\n        const lowerPath = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n        lowerPath.setAttribute('d', lowerPathD);\n        lowerPath.setAttribute('fill', 'none');\n        lowerPath.setAttribute('stroke', 'rgba(255, 0, 255, 0.3)');\n        lowerPath.setAttribute('stroke-width', '2');\n        lowerPath.setAttribute('stroke-dasharray', '5,5');\n        graph.appendChild(lowerPath);\n        \n        // Fill confidence interval\n        const confidencePath = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n        confidencePath.setAttribute('d', `${upperPathD} L ${getX(uniqueMonths.indexOf(processedForecast[processedForecast.length-1].monthLabel))} ${getY(processedForecast[processedForecast.length-1].lower)} ${lowerPathD.replace('M', 'L')} Z`);\n        confidencePath.setAttribute('fill', 'rgba(255, 0, 255, 0.1)');\n        confidencePath.setAttribute('stroke', 'none');\n        graph.insertBefore(confidencePath, upperPath);\n        \n        // Draw forecast line\n        let pathD = '';\n        processedForecast.forEach((point, i) => {\n          const monthIndex = uniqueMonths.indexOf(point.monthLabel);\n          if (monthIndex !== -1) {\n            const x = getX(monthIndex);\n            const y = getY(point.emissions);\n            \n            if (i === 0) {\n              pathD = `M ${x} ${y}`;\n            } else {\n              pathD += ` L ${x} ${y}`;\n            }\n          }\n        });\n        \n        const forecastPath = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n        forecastPath.setAttribute('d', pathD);\n        forecastPath.setAttribute('fill', 'none');\n        forecastPath.setAttribute('stroke', '#FF00FF');\n        forecastPath.setAttribute('stroke-width', '3');\n        graph.appendChild(forecastPath);\n        \n        // Draw points\n        processedForecast.forEach(point => {\n          const monthIndex = uniqueMonths.indexOf(point.monthLabel);\n          if (monthIndex !== -1) {\n            const x = getX(monthIndex);\n            const y = getY(point.emissions);\n            \n            const circle = document.createElementNS('http://www.w3.org/2000/svg', 'circle');\n            circle.setAttribute('cx', x);\n            circle.setAttribute('cy', y);\n            circle.setAttribute('r', '8');\n            circle.setAttribute('fill', '#FF00FF');\n            circle.setAttribute('stroke', '#000000');\n            circle.setAttribute('stroke-width', '2');\n            \n            // Add tooltip data\n            circle.setAttribute('data-month', point.monthLabel);\n            circle.setAttribute('data-value', point.emissions.toFixed(2));\n            circle.setAttribute('data-type', 'Forecast');\n            \n            // Add hover effect\n            circle.addEventListener('mouseover', showTooltip);\n            circle.addEventListener('mouseout', hideTooltip);\n            \n            graph.appendChild(circle);\n          }\n        });\n      }\n      \n      // Draw optimized forecast data\n      if (processedOptimized.length > 0) {\n        // Draw line\n        let pathD = '';\n        processedOptimized.forEach((point, i) => {\n          const monthIndex = uniqueMonths.indexOf(point.monthLabel);\n          if (monthIndex !== -1) {\n            const x = getX(monthIndex);\n            const y = getY(point.emissions);\n            \n            if (i === 0) {\n              pathD = `M ${x} ${y}`;\n            } else {\n              pathD += ` L ${x} ${y}`;\n            }\n          }\n        });\n        \n        const optimizedPath = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n        optimizedPath.setAttribute('d', pathD);\n        optimizedPath.setAttribute('fill', 'none');\n        optimizedPath.setAttribute('stroke', '#00FF00');\n        optimizedPath.setAttribute('stroke-width', '3');\n        optimizedPath.setAttribute('stroke-dasharray', '5,5');\n        graph.appendChild(optimizedPath);\n        \n        // Draw points\n        processedOptimized.forEach(point => {\n          const monthIndex = uniqueMonths.indexOf(point.monthLabel);\n          if (monthIndex !== -1) {\n            const x = getX(monthIndex);\n            const y = getY(point.emissions);\n            \n            const circle = document.createElementNS('http://www.w3.org/2000/svg', 'circle');\n            circle.setAttribute('cx', x);\n            circle.setAttribute('cy', y);\n            circle.setAttribute('r', '8');\n            circle.setAttribute('fill', '#00FF00');\n            circle.setAttribute('stroke', '#000000');\n            circle.setAttribute('stroke-width', '2');\n            \n            // Add tooltip data\n            circle.setAttribute('data-month', point.monthLabel);\n            circle.setAttribute('data-value', point.emissions.toFixed(2));\n            circle.setAttribute('data-type', 'Optimized');\n            \n            // Add hover effect\n            circle.addEventListener('mouseover', showTooltip);\n            circle.addEventListener('mouseout', hideTooltip);\n            \n            graph.appendChild(circle);\n          }\n        });\n      }\n      \n      // Create legend\n      const legendGroup = document.createElementNS('http://www.w3.org/2000/svg', 'g');\n      legendGroup.setAttribute('transform', `translate(${marginLeft + 20}, ${marginTop - 30})`);\n      \n      const legendItems = [\n        { label: 'Actual Emissions', color: '#00FFFF' },\n        { label: 'Forecast Emissions', color: '#FF00FF' },\n        { label: 'Optimized Emissions', color: '#00FF00' }\n      ];\n      \n      legendItems.forEach((item, index) => {\n        const x = index * 200; // Increased spacing between legend items\n        \n        // Draw color box\n        const rect = document.createElementNS('http://www.w3.org/2000/svg', 'rect');\n        rect.setAttribute('x', x);\n        rect.setAttribute('y', 0);\n        rect.setAttribute('width', 15);\n        rect.setAttribute('height', 15);\n        rect.setAttribute('fill', item.color);\n        rect.setAttribute('stroke', '#000000');\n        rect.setAttribute('stroke-width', '1');\n        legendGroup.appendChild(rect);\n        \n        // Draw label\n        const text = document.createElementNS('http://www.w3.org/2000/svg', 'text');\n        text.setAttribute('x', x + 20);\n        text.setAttribute('y', 12);\n        text.setAttribute('font-family', 'Roboto, sans-serif');\n        text.setAttribute('font-size', '12px');\n        text.setAttribute('fill', '#FFFFFF');\n        text.textContent = item.label;\n        legendGroup.appendChild(text);\n      });\n      \n      svg.appendChild(legendGroup);\n      \n      // Create tooltip\n      const tooltip = document.createElement('div');\n      tooltip.className = 'chart-tooltip';\n      tooltip.style.display = 'none';\n      tooltip.style.position = 'absolute';\n      tooltip.style.backgroundColor = 'rgba(0, 0, 0, 0.8)';\n      tooltip.style.color = '#FFFFFF';\n      tooltip.style.padding = '10px';\n      tooltip.style.borderRadius = '5px';\n      tooltip.style.pointerEvents = 'none';\n      tooltip.style.zIndex = '1000';\n      tooltip.style.fontFamily = 'Roboto, sans-serif';\n      tooltip.style.fontSize = '12px';\n      tooltip.style.border = '1px solid rgba(0, 255, 255, 0.5)';\n      tooltip.style.boxShadow = '0 0 10px rgba(0, 0, 0, 0.5)';\n      document.body.appendChild(tooltip);\n      \n      // Tooltip functions\n      function showTooltip(event) {\n        const circle = event.target;\n        const month = circle.getAttribute('data-month');\n        const value = circle.getAttribute('data-value');\n        const type = circle.getAttribute('data-type');\n        \n        tooltip.innerHTML = `\n          <div style=\"font-weight: bold; margin-bottom: 5px; color: #00FFFF;\">${month}</div>\n          <div>${type} Emissions: ${value} tons CO2e</div>\n        `;\n        \n        tooltip.style.display = 'block';\n        \n        // Position tooltip near the point but avoid edges\n        const rect = svg.getBoundingClientRect();\n        const circleRect = circle.getBoundingClientRect();\n        \n        // Calculate position to avoid going off-screen\n        let leftPos = circleRect.left + window.scrollX + 10;\n        let topPos = circleRect.top + window.scrollY - 40;\n        \n        // Adjust if tooltip would go off right edge\n        if (leftPos + 200 > window.innerWidth) {\n          leftPos = circleRect.left + window.scrollX - 210;\n        }\n        \n        // Adjust if tooltip would go off top edge\n        if (topPos < 10) {\n          topPos = circleRect.top + window.scrollY + 20;\n        }\n        \n        tooltip.style.left = `${leftPos}px`;\n        tooltip.style.top = `${topPos}px`;\n        \n        // Highlight the point\n        circle.setAttribute('r', '10');\n      }\n      \n      function hideTooltip(event) {\n        tooltip.style.display = 'none';\n        \n        // Reset point size\n        event.target.setAttribute('r', '8');\n      }\n      \n      // Add the SVG to the container\n      container.appendChild(svg);\n      \n      // Clean up tooltip when component unmounts\n      return () => {\n        if (tooltip && tooltip.parentNode) {\n          tooltip.parentNode.removeChild(tooltip);\n        }\n      };\n    };\n    \n    // Create the chart\n    const cleanup = createChart();\n    \n    // Add impact factors section if available\n    if (impacts && Object.keys(impacts).length > 0) {\n      const impactSection = document.createElement('div');\n      impactSection.className = 'impact-factors';\n      \n      const impactTitle = document.createElement('h4');\n      impactTitle.textContent = 'Key Impact Factors';\n      impactSection.appendChild(impactTitle);\n      \n      const impactList = document.createElement('div');\n      impactList.className = 'impact-list';\n      \n      // Sort impacts by score\n      const sortedImpacts = Object.entries(impacts)\n        .sort((a, b) => Math.abs(b[1].impact_score) - Math.abs(a[1].impact_score))\n        .slice(0, 3);\n      \n      sortedImpacts.forEach(([factor, data], index) => {\n        let factorName = factor;\n        if (factor === 'energy_use') factorName = 'Energy Use';\n        if (factor === 'transport') factorName = 'Transport';\n        if (factor === 'waste') factorName = 'Waste';\n        if (factor === 'water') factorName = 'Water';\n        if (factor === 'fuel') factorName = 'Fuel';\n        if (factor === 'grid_intensity') factorName = 'Grid Intensity';\n        \n        const impactItem = document.createElement('div');\n        impactItem.className = 'impact-item';\n        \n        const impactRank = document.createElement('div');\n        impactRank.className = 'impact-rank';\n        impactRank.textContent = index + 1;\n        \n        const impactInfo = document.createElement('div');\n        impactInfo.className = 'impact-info';\n        \n        const impactName = document.createElement('div');\n        impactName.className = 'impact-name';\n        impactName.textContent = factorName;\n        \n        const impactScore = document.createElement('div');\n        impactScore.className = 'impact-score';\n        \n        const impactValue = document.createElement('span');\n        impactValue.className = 'impact-value';\n        impactValue.textContent = Math.abs(data.impact_score).toFixed(2);\n        \n        impactScore.textContent = 'Impact Score: ';\n        impactScore.appendChild(impactValue);\n        \n        impactInfo.appendChild(impactName);\n        impactInfo.appendChild(impactScore);\n        \n        impactItem.appendChild(impactRank);\n        impactItem.appendChild(impactInfo);\n        \n        impactList.appendChild(impactItem);\n      });\n      \n      impactSection.appendChild(impactList);\n      chartRef.current.appendChild(impactSection);\n    }\n    \n    // Add forecast data table below the chart\n    if (forecast && forecast.length > 0) {\n      const tableContainer = document.createElement('div');\n      tableContainer.className = 'forecast-table-container';\n      tableContainer.style.marginTop = '30px';\n      tableContainer.style.width = '100%';\n      tableContainer.style.overflowX = 'auto';\n      \n      const table = document.createElement('table');\n      table.className = 'forecast-table';\n      table.style.width = '100%';\n      table.style.borderCollapse = 'collapse';\n      table.style.color = '#FFFFFF';\n      table.style.fontFamily = 'Roboto, sans-serif';\n      table.style.fontSize = '14px';\n      table.style.textAlign = 'center';\n      \n      // Create table header\n      const thead = document.createElement('thead');\n      const headerRow = document.createElement('tr');\n      \n      const headers = ['Month', 'Predicted Emissions', 'Lower Bound', 'Upper Bound'];\n      if (optimizedForecast && optimizedForecast.length > 0) {\n        headers.push('Optimized Emissions', 'Potential Savings');\n      }\n      \n      headers.forEach(header => {\n        const th = document.createElement('th');\n        th.textContent = header;\n        th.style.padding = '10px';\n        th.style.borderBottom = '1px solid rgba(0, 255, 255, 0.3)';\n        th.style.backgroundColor = 'rgba(0, 0, 0, 0.3)';\n        headerRow.appendChild(th);\n      });\n      \n      thead.appendChild(headerRow);\n      table.appendChild(thead);\n      \n      // Create table body\n      const tbody = document.createElement('tbody');\n      \n      // Process forecast data for table\n      const tableData = processForecastData(forecast);\n      const optimizedData = optimizedForecast ? processForecastData(optimizedForecast) : [];\n      \n      tableData.forEach((item, index) => {\n        const row = document.createElement('tr');\n        row.style.backgroundColor = index % 2 === 0 ? 'rgba(0, 0, 0, 0.2)' : 'rgba(0, 0, 0, 0.1)';\n        \n        // Month\n        const monthCell = document.createElement('td');\n        monthCell.textContent = item.monthLabel;\n        monthCell.style.padding = '8px';\n        row.appendChild(monthCell);\n        \n        // Predicted Emissions\n        const emissionsCell = document.createElement('td');\n        emissionsCell.textContent = item.emissions.toFixed(2);\n        emissionsCell.style.padding = '8px';\n        row.appendChild(emissionsCell);\n        \n        // Lower Bound\n        const lowerCell = document.createElement('td');\n        lowerCell.textContent = item.lower.toFixed(2);\n        lowerCell.style.padding = '8px';\n        row.appendChild(lowerCell);\n        \n        // Upper Bound\n        const upperCell = document.createElement('td');\n        upperCell.textContent = item.upper.toFixed(2);\n        upperCell.style.padding = '8px';\n        row.appendChild(upperCell);\n        \n        // Add optimized data if available\n        if (optimizedData.length > 0) {\n          const optimizedItem = optimizedData[index];\n          \n          // Optimized Emissions\n          const optimizedCell = document.createElement('td');\n          optimizedCell.textContent = optimizedItem.emissions.toFixed(2);\n          optimizedCell.style.padding = '8px';\n          optimizedCell.style.color = '#00FF00';\n          row.appendChild(optimizedCell);\n          \n          // Potential Savings\n          const savingsCell = document.createElement('td');\n          const savings = item.emissions - optimizedItem.emissions;\n          savingsCell.textContent = savings.toFixed(2);\n          savingsCell.style.padding = '8px';\n          savingsCell.style.color = savings > 0 ? '#00FF00' : '#FF0000';\n          row.appendChild(savingsCell);\n        }\n        \n        tbody.appendChild(row);\n      });\n      \n      table.appendChild(tbody);\n      tableContainer.appendChild(table);\n      chartRef.current.appendChild(tableContainer);\n    }\n    \n    // Return cleanup function\n    return cleanup;\n  }, [data, forecast, optimizedForecast, impacts]);\n\n  // Process actual data to ensure one point per month\n  const processMonthlyData = (data) => {\n    if (!data || data.length === 0) return [];\n    \n    // Group by month\n    const monthlyData = {};\n    \n    data.forEach(item => {\n      if (!item.date || !item.emissions) return;\n      \n      const date = new Date(item.date);\n      const monthKey = `${date.getFullYear()}-${String(date.getMonth() + 1).padStart(2, '0')}`;\n      \n      if (!monthlyData[monthKey]) {\n        monthlyData[monthKey] = {\n          month: monthKey,\n          monthLabel: `${date.toLocaleString('default', { month: 'long' })} ${date.getFullYear()}`,\n          emissions: 0\n        };\n      }\n      \n      monthlyData[monthKey].emissions += parseFloat(item.emissions) || 0;\n    });\n    \n    // Convert to array and sort by month\n    return Object.values(monthlyData)\n      .sort((a, b) => a.month.localeCompare(b.month));\n  };\n  \n  // Process forecast data\n  const processForecastData = (forecastData) => {\n    if (!forecastData || forecastData.length === 0) return [];\n    \n    return forecastData.map(item => {\n      const date = new Date(item.ds);\n      return {\n        month: `${date.getFullYear()}-${String(date.getMonth() + 1).padStart(2, '0')}`,\n        monthLabel: `${date.toLocaleString('default', { month: 'long' })} ${date.getFullYear()}`,\n        emissions: item.predicted_emissions,\n        upper: item.upper_bound,\n        lower: item.lower_bound\n      };\n    }).sort((a, b) => a.month.localeCompare(b.month));\n  };\n\n  return (\n    <div className=\"forecast-chart-container\">\n      <div ref={chartRef} className=\"chart-area\" style={{ minHeight: '600px' }}></div>\n    </div>\n  );\n};\n\nexport default ForecastChart;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}