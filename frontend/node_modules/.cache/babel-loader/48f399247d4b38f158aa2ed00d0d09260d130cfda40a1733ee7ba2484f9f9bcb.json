{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SETUP\\\\Desktop\\\\yap-t carbonsync ai\\\\frontend\\\\src\\\\components\\\\TabPanel.js\";\nimport React from 'react';\nimport './TabPanel.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TabPanel = ({\n  activeTab,\n  onTabChange,\n  children\n}) => {\n  // Extract tab information from children\n  const tabs = React.Children.map(children, child => {\n    if (child && child.type === TabPanel.Tab) {\n      return {\n        id: child.props.id,\n        label: child.props.label,\n        disabled: child.props.disabled || false\n      };\n    }\n    return null;\n  }).filter(Boolean);\n\n  // Handle tab click\n  const handleTabClick = tabId => {\n    if (onTabChange && typeof onTabChange === 'function') {\n      onTabChange(tabId);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"tab-panel\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tabs\",\n      children: tabs.map(tab => /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `tab ${activeTab === tab.id ? 'active' : ''}`,\n        onClick: () => handleTabClick(tab.id),\n        disabled: tab.disabled,\n        children: tab.label\n      }, tab.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tab-content\",\n      children: React.Children.map(children, child => {\n        if (child && child.type === TabPanel.Tab && child.props.id === activeTab) {\n          return child.props.children;\n        }\n        return null;\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n\n// Tab component for children\n_c = TabPanel;\nTabPanel.Tab = ({\n  id,\n  label,\n  disabled,\n  children\n}) => {\n  // This is just a placeholder component for structure\n  // It doesn't render anything directly\n  return null;\n};\nexport default TabPanel;\nvar _c;\n$RefreshReg$(_c, \"TabPanel\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","TabPanel","activeTab","onTabChange","children","tabs","Children","map","child","type","Tab","id","props","label","disabled","filter","Boolean","handleTabClick","tabId","className","tab","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/SETUP/Desktop/yap-t carbonsync ai/frontend/src/components/TabPanel.js"],"sourcesContent":["import React from 'react';\nimport './TabPanel.css';\n\nconst TabPanel = ({ activeTab, onTabChange, children }) => {\n  // Extract tab information from children\n  const tabs = React.Children.map(children, child => {\n    if (child && child.type === TabPanel.Tab) {\n      return {\n        id: child.props.id,\n        label: child.props.label,\n        disabled: child.props.disabled || false\n      };\n    }\n    return null;\n  }).filter(Boolean);\n  \n  // Handle tab click\n  const handleTabClick = (tabId) => {\n    if (onTabChange && typeof onTabChange === 'function') {\n      onTabChange(tabId);\n    }\n  };\n  \n  return (\n    <div className=\"tab-panel\">\n      <div className=\"tabs\">\n        {tabs.map((tab) => (\n          <button\n            key={tab.id}\n            className={`tab ${activeTab === tab.id ? 'active' : ''}`}\n            onClick={() => handleTabClick(tab.id)}\n            disabled={tab.disabled}\n          >\n            {tab.label}\n          </button>\n        ))}\n      </div>\n      \n      <div className=\"tab-content\">\n        {React.Children.map(children, child => {\n          if (child && child.type === TabPanel.Tab && child.props.id === activeTab) {\n            return child.props.children;\n          }\n          return null;\n        })}\n      </div>\n    </div>\n  );\n};\n\n// Tab component for children\nTabPanel.Tab = ({ id, label, disabled, children }) => {\n  // This is just a placeholder component for structure\n  // It doesn't render anything directly\n  return null;\n};\n\nexport default TabPanel;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExB,MAAMC,QAAQ,GAAGA,CAAC;EAAEC,SAAS;EAAEC,WAAW;EAAEC;AAAS,CAAC,KAAK;EACzD;EACA,MAAMC,IAAI,GAAGP,KAAK,CAACQ,QAAQ,CAACC,GAAG,CAACH,QAAQ,EAAEI,KAAK,IAAI;IACjD,IAAIA,KAAK,IAAIA,KAAK,CAACC,IAAI,KAAKR,QAAQ,CAACS,GAAG,EAAE;MACxC,OAAO;QACLC,EAAE,EAAEH,KAAK,CAACI,KAAK,CAACD,EAAE;QAClBE,KAAK,EAAEL,KAAK,CAACI,KAAK,CAACC,KAAK;QACxBC,QAAQ,EAAEN,KAAK,CAACI,KAAK,CAACE,QAAQ,IAAI;MACpC,CAAC;IACH;IACA,OAAO,IAAI;EACb,CAAC,CAAC,CAACC,MAAM,CAACC,OAAO,CAAC;;EAElB;EACA,MAAMC,cAAc,GAAIC,KAAK,IAAK;IAChC,IAAIf,WAAW,IAAI,OAAOA,WAAW,KAAK,UAAU,EAAE;MACpDA,WAAW,CAACe,KAAK,CAAC;IACpB;EACF,CAAC;EAED,oBACElB,OAAA;IAAKmB,SAAS,EAAC,WAAW;IAAAf,QAAA,gBACxBJ,OAAA;MAAKmB,SAAS,EAAC,MAAM;MAAAf,QAAA,EAClBC,IAAI,CAACE,GAAG,CAAEa,GAAG,iBACZpB,OAAA;QAEEmB,SAAS,EAAE,OAAOjB,SAAS,KAAKkB,GAAG,CAACT,EAAE,GAAG,QAAQ,GAAG,EAAE,EAAG;QACzDU,OAAO,EAAEA,CAAA,KAAMJ,cAAc,CAACG,GAAG,CAACT,EAAE,CAAE;QACtCG,QAAQ,EAAEM,GAAG,CAACN,QAAS;QAAAV,QAAA,EAEtBgB,GAAG,CAACP;MAAK,GALLO,GAAG,CAACT,EAAE;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAML,CACT;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eAENzB,OAAA;MAAKmB,SAAS,EAAC,aAAa;MAAAf,QAAA,EACzBN,KAAK,CAACQ,QAAQ,CAACC,GAAG,CAACH,QAAQ,EAAEI,KAAK,IAAI;QACrC,IAAIA,KAAK,IAAIA,KAAK,CAACC,IAAI,KAAKR,QAAQ,CAACS,GAAG,IAAIF,KAAK,CAACI,KAAK,CAACD,EAAE,KAAKT,SAAS,EAAE;UACxE,OAAOM,KAAK,CAACI,KAAK,CAACR,QAAQ;QAC7B;QACA,OAAO,IAAI;MACb,CAAC;IAAC;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;;AAED;AAAAC,EAAA,GA/CMzB,QAAQ;AAgDdA,QAAQ,CAACS,GAAG,GAAG,CAAC;EAAEC,EAAE;EAAEE,KAAK;EAAEC,QAAQ;EAAEV;AAAS,CAAC,KAAK;EACpD;EACA;EACA,OAAO,IAAI;AACb,CAAC;AAED,eAAeH,QAAQ;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}