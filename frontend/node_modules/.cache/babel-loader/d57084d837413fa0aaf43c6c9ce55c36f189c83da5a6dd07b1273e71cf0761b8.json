{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SETUP\\\\Desktop\\\\yap-t carbonsync ai\\\\frontend\\\\src\\\\components\\\\DataTable.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback, useMemo } from 'react';\nimport { useTable } from 'react-table';\nimport './DataTable.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DataTable = ({\n  data,\n  onDataUpdate,\n  summary,\n  readOnly = false,\n  isForecasted = false\n}) => {\n  _s();\n  const [tableData, setTableData] = useState([]);\n  const [updateTimeout, setUpdateTimeout] = useState(null);\n\n  // Initialize table data when data prop changes\n  useEffect(() => {\n    if (data && data.length > 0) {\n      setTableData(data);\n    } else {\n      setTableData([]);\n    }\n  }, [data]);\n\n  // Function to update parent component with debounce\n  const updateParent = useCallback(newData => {\n    if (updateTimeout) {\n      clearTimeout(updateTimeout);\n    }\n    const timeoutId = setTimeout(() => {\n      if (onDataUpdate) {\n        onDataUpdate(newData);\n      }\n    }, 500);\n    setUpdateTimeout(timeoutId);\n  }, [onDataUpdate, updateTimeout]);\n\n  // Clean up timeout on unmount\n  useEffect(() => {\n    return () => {\n      if (updateTimeout) {\n        clearTimeout(updateTimeout);\n      }\n    };\n  }, [updateTimeout]);\n\n  // Handle cell value change\n  const handleCellChange = useCallback((rowId, columnId, value, isNumeric) => {\n    const newData = tableData.map(row => {\n      if (row.id === rowId) {\n        return {\n          ...row,\n          [columnId]: isNumeric && value !== '' ? parseFloat(value) : value\n        };\n      }\n      return row;\n    });\n    setTableData(newData);\n    updateParent(newData);\n  }, [tableData, updateParent]);\n\n  // Define columns based on data structure\n  const columns = useMemo(() => {\n    if (!tableData || tableData.length === 0) return [];\n    const firstRow = tableData[0];\n    return Object.keys(firstRow).filter(key => key !== 'id') // Exclude id from display\n    .map(key => {\n      // Determine if column is numeric\n      const isNumeric = ['energy_use', 'transport', 'waste', 'water', 'fuel', 'emissions', 'production', 'grid_intensity', 'predicted_emissions', 'lower_bound', 'upper_bound'].includes(key);\n      return {\n        Header: key.split('_').map(word => word.charAt(0).toUpperCase() + word.slice(1)).join(' '),\n        accessor: key,\n        Cell: ({\n          value,\n          row\n        }) => {\n          if (readOnly) {\n            // Format date if it's a date column\n            if (key === 'date' || key === 'ds') {\n              return new Date(value).toLocaleDateString();\n            }\n\n            // Format numeric values\n            if (isNumeric) {\n              return typeof value === 'number' ? value.toFixed(2) : value;\n            }\n            return value;\n          }\n          return /*#__PURE__*/_jsxDEV(\"input\", {\n            type: isNumeric ? 'number' : 'text',\n            value: value || '',\n            onChange: e => handleCellChange(row.original.id, key, e.target.value, isNumeric),\n            className: `cell-input ${isNumeric ? 'numeric' : ''}`,\n            disabled: readOnly\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 15\n          }, this);\n        }\n      };\n    });\n  }, [tableData, readOnly, handleCellChange]);\n\n  // Create table instance\n  const tableInstance = useTable({\n    columns,\n    data: tableData\n  });\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow\n  } = tableInstance;\n\n  // Add a new row to the table\n  const handleAddRow = useCallback(() => {\n    if (!tableData || tableData.length === 0) return;\n    const newRow = {};\n    const lastRow = tableData[tableData.length - 1];\n\n    // Initialize with empty values\n    Object.keys(lastRow).forEach(key => {\n      if (key === 'id') {\n        newRow[key] = Date.now(); // Use timestamp as unique id\n      } else if (key === 'date') {\n        // Set date to today\n        newRow[key] = new Date().toISOString().split('T')[0];\n      } else {\n        newRow[key] = '';\n      }\n    });\n    const newData = [...tableData, newRow];\n    setTableData(newData);\n    updateParent(newData);\n  }, [tableData, updateParent]);\n\n  // Delete a row from the table\n  const handleDeleteRow = useCallback(id => {\n    const newData = tableData.filter(row => row.id !== id);\n    setTableData(newData);\n    updateParent(newData);\n  }, [tableData, updateParent]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"data-table-container\",\n    children: [summary && !isForecasted && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"data-summary\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Data Summary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"summary-grid\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"summary-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"summary-label\",\n            children: \"Total Rows:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"summary-value\",\n            children: summary.total_rows\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"summary-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"summary-label\",\n            children: \"Departments:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"summary-value\",\n            children: summary.departments.join(', ')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"summary-stats\",\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"summary-table\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Metric\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 164,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Mean\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 165,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Min\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 166,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Max\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 167,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: Object.keys(summary.mean).map(key => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: key.split('_').map(word => word.charAt(0).toUpperCase() + word.slice(1)).join(' ')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 173,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: summary.mean[key].toFixed(2)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 174,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: summary.min[key].toFixed(2)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 175,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: summary.max[key].toFixed(2)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 176,\n                columnNumber: 21\n              }, this)]\n            }, key, true, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 9\n    }, this), tableData.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"table-wrapper\",\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        ...getTableProps(),\n        className: \"data-table\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: headerGroups.map(headerGroup => /*#__PURE__*/_jsxDEV(\"tr\", {\n            ...headerGroup.getHeaderGroupProps(),\n            children: [headerGroup.headers.map(column => /*#__PURE__*/_jsxDEV(\"th\", {\n              ...column.getHeaderProps(),\n              children: column.render('Header')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 21\n            }, this)), !readOnly && /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"action-column\",\n              children: \"Actions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          ...getTableBodyProps(),\n          children: rows.map(row => {\n            prepareRow(row);\n            return /*#__PURE__*/_jsxDEV(\"tr\", {\n              ...row.getRowProps(),\n              className: \"data-row\",\n              children: [row.cells.map(cell => /*#__PURE__*/_jsxDEV(\"td\", {\n                ...cell.getCellProps(),\n                className: isForecasted && cell.column.id === 'predicted_emissions' ? 'highlighted-cell' : '',\n                children: cell.render('Cell')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 208,\n                columnNumber: 23\n              }, this)), !readOnly && /*#__PURE__*/_jsxDEV(\"td\", {\n                className: \"action-column\",\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"delete-btn\",\n                  onClick: () => handleDeleteRow(row.original.id),\n                  type: \"button\",\n                  children: \"\\xD7\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 217,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 216,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 206,\n              columnNumber: 19\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"no-data\",\n      children: \"No data available. Upload a file or add data manually.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 9\n    }, this), !readOnly && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"table-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-secondary\",\n        onClick: handleAddRow,\n        type: \"button\",\n        children: \"Add Row\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 146,\n    columnNumber: 5\n  }, this);\n};\n_s(DataTable, \"vHX/V+cV554anNOAubeiXm7Gwxs=\", false, function () {\n  return [useTable];\n});\n_c = DataTable;\nexport default DataTable;\nvar _c;\n$RefreshReg$(_c, \"DataTable\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","useMemo","useTable","jsxDEV","_jsxDEV","DataTable","data","onDataUpdate","summary","readOnly","isForecasted","_s","tableData","setTableData","updateTimeout","setUpdateTimeout","length","updateParent","newData","clearTimeout","timeoutId","setTimeout","handleCellChange","rowId","columnId","value","isNumeric","map","row","id","parseFloat","columns","firstRow","Object","keys","filter","key","includes","Header","split","word","charAt","toUpperCase","slice","join","accessor","Cell","Date","toLocaleDateString","toFixed","type","onChange","e","original","target","className","disabled","fileName","_jsxFileName","lineNumber","columnNumber","tableInstance","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","handleAddRow","newRow","lastRow","forEach","now","toISOString","handleDeleteRow","children","total_rows","departments","mean","min","max","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","render","getRowProps","cells","cell","getCellProps","onClick","_c","$RefreshReg$"],"sources":["C:/Users/SETUP/Desktop/yap-t carbonsync ai/frontend/src/components/DataTable.js"],"sourcesContent":["import React, { useState, useEffect, useCallback, useMemo } from 'react';\nimport { useTable } from 'react-table';\nimport './DataTable.css';\n\nconst DataTable = ({ data, onDataUpdate, summary, readOnly = false, isForecasted = false }) => {\n  const [tableData, setTableData] = useState([]);\n  const [updateTimeout, setUpdateTimeout] = useState(null);\n  \n  // Initialize table data when data prop changes\n  useEffect(() => {\n    if (data && data.length > 0) {\n      setTableData(data);\n    } else {\n      setTableData([]);\n    }\n  }, [data]);\n\n  // Function to update parent component with debounce\n  const updateParent = useCallback((newData) => {\n    if (updateTimeout) {\n      clearTimeout(updateTimeout);\n    }\n    \n    const timeoutId = setTimeout(() => {\n      if (onDataUpdate) {\n        onDataUpdate(newData);\n      }\n    }, 500);\n    \n    setUpdateTimeout(timeoutId);\n  }, [onDataUpdate, updateTimeout]);\n\n  // Clean up timeout on unmount\n  useEffect(() => {\n    return () => {\n      if (updateTimeout) {\n        clearTimeout(updateTimeout);\n      }\n    };\n  }, [updateTimeout]);\n\n  // Handle cell value change\n  const handleCellChange = useCallback((rowId, columnId, value, isNumeric) => {\n    const newData = tableData.map(row => {\n      if (row.id === rowId) {\n        return {\n          ...row,\n          [columnId]: isNumeric && value !== '' ? parseFloat(value) : value\n        };\n      }\n      return row;\n    });\n    \n    setTableData(newData);\n    updateParent(newData);\n  }, [tableData, updateParent]);\n\n  // Define columns based on data structure\n  const columns = useMemo(() => {\n    if (!tableData || tableData.length === 0) return [];\n    \n    const firstRow = tableData[0];\n    return Object.keys(firstRow)\n      .filter(key => key !== 'id') // Exclude id from display\n      .map(key => {\n        // Determine if column is numeric\n        const isNumeric = ['energy_use', 'transport', 'waste', 'water', 'fuel', \n                           'emissions', 'production', 'grid_intensity', \n                           'predicted_emissions', 'lower_bound', 'upper_bound'].includes(key);\n        \n        return {\n          Header: key.split('_').map(word => word.charAt(0).toUpperCase() + word.slice(1)).join(' '),\n          accessor: key,\n          Cell: ({ value, row }) => {\n            if (readOnly) {\n              // Format date if it's a date column\n              if (key === 'date' || key === 'ds') {\n                return new Date(value).toLocaleDateString();\n              }\n              \n              // Format numeric values\n              if (isNumeric) {\n                return typeof value === 'number' ? value.toFixed(2) : value;\n              }\n              \n              return value;\n            }\n            \n            return (\n              <input\n                type={isNumeric ? 'number' : 'text'}\n                value={value || ''}\n                onChange={e => handleCellChange(row.original.id, key, e.target.value, isNumeric)}\n                className={`cell-input ${isNumeric ? 'numeric' : ''}`}\n                disabled={readOnly}\n              />\n            );\n          }\n        };\n      });\n  }, [tableData, readOnly, handleCellChange]);\n\n  // Create table instance\n  const tableInstance = useTable({ columns, data: tableData });\n  \n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow,\n  } = tableInstance;\n\n  // Add a new row to the table\n  const handleAddRow = useCallback(() => {\n    if (!tableData || tableData.length === 0) return;\n    \n    const newRow = {};\n    const lastRow = tableData[tableData.length - 1];\n    \n    // Initialize with empty values\n    Object.keys(lastRow).forEach(key => {\n      if (key === 'id') {\n        newRow[key] = Date.now(); // Use timestamp as unique id\n      } else if (key === 'date') {\n        // Set date to today\n        newRow[key] = new Date().toISOString().split('T')[0];\n      } else {\n        newRow[key] = '';\n      }\n    });\n    \n    const newData = [...tableData, newRow];\n    setTableData(newData);\n    updateParent(newData);\n  }, [tableData, updateParent]);\n\n  // Delete a row from the table\n  const handleDeleteRow = useCallback((id) => {\n    const newData = tableData.filter(row => row.id !== id);\n    setTableData(newData);\n    updateParent(newData);\n  }, [tableData, updateParent]);\n\n  return (\n    <div className=\"data-table-container\">\n      {summary && !isForecasted && (\n        <div className=\"data-summary\">\n          <h3>Data Summary</h3>\n          <div className=\"summary-grid\">\n            <div className=\"summary-item\">\n              <span className=\"summary-label\">Total Rows:</span>\n              <span className=\"summary-value\">{summary.total_rows}</span>\n            </div>\n            <div className=\"summary-item\">\n              <span className=\"summary-label\">Departments:</span>\n              <span className=\"summary-value\">{summary.departments.join(', ')}</span>\n            </div>\n          </div>\n          <div className=\"summary-stats\">\n            <table className=\"summary-table\">\n              <thead>\n                <tr>\n                  <th>Metric</th>\n                  <th>Mean</th>\n                  <th>Min</th>\n                  <th>Max</th>\n                </tr>\n              </thead>\n              <tbody>\n                {Object.keys(summary.mean).map(key => (\n                  <tr key={key}>\n                    <td>{key.split('_').map(word => word.charAt(0).toUpperCase() + word.slice(1)).join(' ')}</td>\n                    <td>{summary.mean[key].toFixed(2)}</td>\n                    <td>{summary.min[key].toFixed(2)}</td>\n                    <td>{summary.max[key].toFixed(2)}</td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          </div>\n        </div>\n      )}\n      \n      {tableData.length > 0 ? (\n        <div className=\"table-wrapper\">\n          <table {...getTableProps()} className=\"data-table\">\n            <thead>\n              {headerGroups.map(headerGroup => (\n                <tr {...headerGroup.getHeaderGroupProps()}>\n                  {headerGroup.headers.map(column => (\n                    <th {...column.getHeaderProps()}>\n                      {column.render('Header')}\n                    </th>\n                  ))}\n                  {!readOnly && (\n                    <th className=\"action-column\">Actions</th>\n                  )}\n                </tr>\n              ))}\n            </thead>\n            <tbody {...getTableBodyProps()}>\n              {rows.map(row => {\n                prepareRow(row);\n                return (\n                  <tr {...row.getRowProps()} className=\"data-row\">\n                    {row.cells.map(cell => (\n                      <td \n                        {...cell.getCellProps()} \n                        className={isForecasted && cell.column.id === 'predicted_emissions' ? 'highlighted-cell' : ''}\n                      >\n                        {cell.render('Cell')}\n                      </td>\n                    ))}\n                    {!readOnly && (\n                      <td className=\"action-column\">\n                        <button \n                          className=\"delete-btn\" \n                          onClick={() => handleDeleteRow(row.original.id)}\n                          type=\"button\"\n                        >\n                          ×\n                        </button>\n                      </td>\n                    )}\n                  </tr>\n                );\n              })}\n            </tbody>\n          </table>\n        </div>\n      ) : (\n        <div className=\"no-data\">No data available. Upload a file or add data manually.</div>\n      )}\n      \n      {!readOnly && (\n        <div className=\"table-actions\">\n          <button \n            className=\"btn btn-secondary\" \n            onClick={handleAddRow}\n            type=\"button\"\n          >\n            Add Row\n          </button>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default DataTable;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}