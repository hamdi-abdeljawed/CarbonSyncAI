{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SETUP\\\\Desktop\\\\yap-t carbonsync ai\\\\frontend\\\\src\\\\components\\\\OptimizationPanel.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './OptimizationPanel.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst OptimizationPanel = ({\n  suggestions,\n  savings,\n  forecast,\n  optimizedForecast,\n  impacts,\n  onOptimize\n}) => {\n  _s();\n  const [expandedSuggestion, setExpandedSuggestion] = useState(null);\n\n  // Calculate total potential savings if not provided\n  const calculateSavings = () => {\n    if (savings) return savings;\n    if (forecast && optimizedForecast && forecast.length > 0 && optimizedForecast.length > 0) {\n      let totalOriginal = 0;\n      let totalOptimized = 0;\n      for (let i = 0; i < forecast.length; i++) {\n        totalOriginal += forecast[i].predicted_emissions || 0;\n        totalOptimized += optimizedForecast[i].predicted_emissions || 0;\n      }\n      const totalSavings = totalOriginal - totalOptimized;\n      const percentageSavings = totalSavings / totalOriginal * 100;\n      return {\n        total: totalSavings,\n        percentage: percentageSavings\n      };\n    }\n    return null;\n  };\n  const calculatedSavings = calculateSavings();\n\n  // Generate default suggestions if none provided\n  const defaultSuggestions = () => {\n    if (suggestions && suggestions.length > 0) return suggestions;\n    if (impacts) {\n      const sortedImpacts = Object.entries(impacts).sort((a, b) => b[1].impact_score - a[1].impact_score);\n      return sortedImpacts.map(([factor, data]) => {\n        let factorName = factor;\n        let action = '';\n        let description = '';\n        let estimatedSaving = data.impact_score * 2; // Just an example calculation\n\n        switch (factor) {\n          case 'energy_use':\n            factorName = 'Energy Use';\n            action = 'Reduce energy consumption by 15%';\n            description = 'Implement energy-efficient lighting, optimize HVAC systems, and consider renewable energy sources to reduce overall energy consumption.';\n            break;\n          case 'transport':\n            factorName = 'Transport';\n            action = 'Optimize transportation routes';\n            description = 'Redesign logistics routes, implement fleet management systems, and consider electric vehicles to reduce transport-related emissions.';\n            break;\n          case 'waste':\n            factorName = 'Waste';\n            action = 'Implement waste reduction program';\n            description = 'Establish recycling programs, reduce packaging waste, and implement circular economy principles to minimize waste generation.';\n            break;\n          case 'water':\n            factorName = 'Water';\n            action = 'Reduce water consumption';\n            description = 'Install water-efficient fixtures, implement water recycling systems, and optimize production processes to reduce water usage.';\n            break;\n          case 'fuel':\n            factorName = 'Fuel';\n            action = 'Switch to cleaner fuel alternatives';\n            description = 'Transition to biofuels, optimize combustion processes, and implement fuel efficiency measures to reduce fuel-related emissions.';\n            break;\n          case 'grid_intensity':\n            factorName = 'Grid Intensity';\n            action = 'Shift energy usage to low-intensity periods';\n            description = 'Implement load shifting strategies, utilize energy storage, and schedule energy-intensive operations during periods of lower grid carbon intensity.';\n            break;\n          default:\n            action = `Optimize ${factorName}`;\n            description = `Implement measures to reduce emissions from ${factorName}.`;\n        }\n        return {\n          factor: factorName,\n          action,\n          description,\n          estimated_saving: estimatedSaving,\n          impact_score: data.impact_score\n        };\n      });\n    }\n    return [];\n  };\n  const generatedSuggestions = defaultSuggestions();\n  const toggleSuggestion = index => {\n    if (expandedSuggestion === index) {\n      setExpandedSuggestion(null);\n    } else {\n      setExpandedSuggestion(index);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"optimization-panel\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"card-title\",\n      children: \"Optimization Suggestions\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this), generatedSuggestions.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"suggestions-list\",\n      children: generatedSuggestions.map((suggestion, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `suggestion-item ${expandedSuggestion === index ? 'expanded' : ''}`,\n        onClick: () => toggleSuggestion(index),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"suggestion-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"suggestion-icon\",\n            style: {\n              backgroundColor: `rgba(0, 255, ${255 - index * 40}, 0.7)`\n            },\n            children: index + 1\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"suggestion-content\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"suggestion-action\",\n              children: suggestion.action\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"suggestion-saving\",\n              children: [\"Estimated saving: \", /*#__PURE__*/_jsxDEV(\"span\", {\n                children: suggestion.estimated_saving ? suggestion.estimated_saving.toFixed(2) : '0.00'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 124,\n                columnNumber: 39\n              }, this), \" tons CO2e\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"suggestion-expand-icon\",\n            children: expandedSuggestion === index ? '▼' : '▶'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 15\n        }, this), expandedSuggestion === index && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"suggestion-details\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"suggestion-description\",\n            children: suggestion.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"suggestion-impact\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"impact-label\",\n              children: \"Impact Score:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"impact-bar-container\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"impact-bar\",\n                style: {\n                  width: `${Math.min(suggestion.impact_score * 100, 100)}%`\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 136,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"impact-value\",\n              children: [(suggestion.impact_score * 100).toFixed(0), \"%\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"suggestion-implementation\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"Implementation Steps:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"ol\", {\n              children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                children: [\"Conduct assessment of current \", suggestion.factor.toLowerCase(), \" usage patterns\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 146,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                children: \"Identify key areas for improvement and set reduction targets\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 147,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                children: \"Implement recommended changes and monitor progress\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 148,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                children: \"Evaluate results and adjust strategies as needed\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 149,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 17\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"no-suggestions\",\n      children: \"No optimization suggestions available yet. Generate a forecast first.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 9\n    }, this), calculatedSavings && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"savings-summary\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"savings-title\",\n        children: \"Total Potential Savings\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"savings-value\",\n        children: [calculatedSavings.total.toFixed(2), \" tons CO2e\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"savings-percentage\",\n        children: [\"(\", calculatedSavings.percentage.toFixed(2), \"% reduction)\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 9\n    }, this), generatedSuggestions.length > 0 && !optimizedForecast && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"optimization-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-secondary\",\n        onClick: onOptimize,\n        children: \"Apply Optimizations\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 9\n    }, this), optimizedForecast && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"optimization-summary\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Optimization Summary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"summary-metrics\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"metric\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"metric-label\",\n            children: \"Total Emissions Before\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"metric-value\",\n            children: [forecast ? forecast.reduce((sum, item) => sum + (item.predicted_emissions || 0), 0).toFixed(2) : '0.00', \" tons CO2e\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"metric\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"metric-label\",\n            children: \"Total Emissions After\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"metric-value\",\n            children: [optimizedForecast ? optimizedForecast.reduce((sum, item) => sum + (item.predicted_emissions || 0), 0).toFixed(2) : '0.00', \" tons CO2e\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 108,\n    columnNumber: 5\n  }, this);\n};\n_s(OptimizationPanel, \"Wd2MYnsm8bTV/O4vNGHvwhXKk58=\");\n_c = OptimizationPanel;\nexport default OptimizationPanel;\nvar _c;\n$RefreshReg$(_c, \"OptimizationPanel\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","OptimizationPanel","suggestions","savings","forecast","optimizedForecast","impacts","onOptimize","_s","expandedSuggestion","setExpandedSuggestion","calculateSavings","length","totalOriginal","totalOptimized","i","predicted_emissions","totalSavings","percentageSavings","total","percentage","calculatedSavings","defaultSuggestions","sortedImpacts","Object","entries","sort","a","b","impact_score","map","factor","data","factorName","action","description","estimatedSaving","estimated_saving","generatedSuggestions","toggleSuggestion","index","className","children","fileName","_jsxFileName","lineNumber","columnNumber","suggestion","onClick","style","backgroundColor","toFixed","width","Math","min","toLowerCase","reduce","sum","item","_c","$RefreshReg$"],"sources":["C:/Users/SETUP/Desktop/yap-t carbonsync ai/frontend/src/components/OptimizationPanel.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './OptimizationPanel.css';\n\nconst OptimizationPanel = ({ suggestions, savings, forecast, optimizedForecast, impacts, onOptimize }) => {\n  const [expandedSuggestion, setExpandedSuggestion] = useState(null);\n  \n  // Calculate total potential savings if not provided\n  const calculateSavings = () => {\n    if (savings) return savings;\n    \n    if (forecast && optimizedForecast && forecast.length > 0 && optimizedForecast.length > 0) {\n      let totalOriginal = 0;\n      let totalOptimized = 0;\n      \n      for (let i = 0; i < forecast.length; i++) {\n        totalOriginal += forecast[i].predicted_emissions || 0;\n        totalOptimized += optimizedForecast[i].predicted_emissions || 0;\n      }\n      \n      const totalSavings = totalOriginal - totalOptimized;\n      const percentageSavings = (totalSavings / totalOriginal) * 100;\n      \n      return {\n        total: totalSavings,\n        percentage: percentageSavings\n      };\n    }\n    \n    return null;\n  };\n  \n  const calculatedSavings = calculateSavings();\n  \n  // Generate default suggestions if none provided\n  const defaultSuggestions = () => {\n    if (suggestions && suggestions.length > 0) return suggestions;\n    \n    if (impacts) {\n      const sortedImpacts = Object.entries(impacts)\n        .sort((a, b) => b[1].impact_score - a[1].impact_score);\n      \n      return sortedImpacts.map(([factor, data]) => {\n        let factorName = factor;\n        let action = '';\n        let description = '';\n        let estimatedSaving = data.impact_score * 2; // Just an example calculation\n        \n        switch(factor) {\n          case 'energy_use':\n            factorName = 'Energy Use';\n            action = 'Reduce energy consumption by 15%';\n            description = 'Implement energy-efficient lighting, optimize HVAC systems, and consider renewable energy sources to reduce overall energy consumption.';\n            break;\n          case 'transport':\n            factorName = 'Transport';\n            action = 'Optimize transportation routes';\n            description = 'Redesign logistics routes, implement fleet management systems, and consider electric vehicles to reduce transport-related emissions.';\n            break;\n          case 'waste':\n            factorName = 'Waste';\n            action = 'Implement waste reduction program';\n            description = 'Establish recycling programs, reduce packaging waste, and implement circular economy principles to minimize waste generation.';\n            break;\n          case 'water':\n            factorName = 'Water';\n            action = 'Reduce water consumption';\n            description = 'Install water-efficient fixtures, implement water recycling systems, and optimize production processes to reduce water usage.';\n            break;\n          case 'fuel':\n            factorName = 'Fuel';\n            action = 'Switch to cleaner fuel alternatives';\n            description = 'Transition to biofuels, optimize combustion processes, and implement fuel efficiency measures to reduce fuel-related emissions.';\n            break;\n          case 'grid_intensity':\n            factorName = 'Grid Intensity';\n            action = 'Shift energy usage to low-intensity periods';\n            description = 'Implement load shifting strategies, utilize energy storage, and schedule energy-intensive operations during periods of lower grid carbon intensity.';\n            break;\n          default:\n            action = `Optimize ${factorName}`;\n            description = `Implement measures to reduce emissions from ${factorName}.`;\n        }\n        \n        return {\n          factor: factorName,\n          action,\n          description,\n          estimated_saving: estimatedSaving,\n          impact_score: data.impact_score\n        };\n      });\n    }\n    \n    return [];\n  };\n  \n  const generatedSuggestions = defaultSuggestions();\n  \n  const toggleSuggestion = (index) => {\n    if (expandedSuggestion === index) {\n      setExpandedSuggestion(null);\n    } else {\n      setExpandedSuggestion(index);\n    }\n  };\n  \n  return (\n    <div className=\"optimization-panel\">\n      <h3 className=\"card-title\">Optimization Suggestions</h3>\n      \n      {generatedSuggestions.length > 0 ? (\n        <div className=\"suggestions-list\">\n          {generatedSuggestions.map((suggestion, index) => (\n            <div \n              key={index} \n              className={`suggestion-item ${expandedSuggestion === index ? 'expanded' : ''}`}\n              onClick={() => toggleSuggestion(index)}\n            >\n              <div className=\"suggestion-header\">\n                <div className=\"suggestion-icon\" style={{ backgroundColor: `rgba(0, 255, ${255 - index * 40}, 0.7)` }}>{index + 1}</div>\n                <div className=\"suggestion-content\">\n                  <div className=\"suggestion-action\">{suggestion.action}</div>\n                  <div className=\"suggestion-saving\">\n                    Estimated saving: <span>{suggestion.estimated_saving ? suggestion.estimated_saving.toFixed(2) : '0.00'}</span> tons CO2e\n                  </div>\n                </div>\n                <div className=\"suggestion-expand-icon\">{expandedSuggestion === index ? '▼' : '▶'}</div>\n              </div>\n              \n              {expandedSuggestion === index && (\n                <div className=\"suggestion-details\">\n                  <p className=\"suggestion-description\">{suggestion.description}</p>\n                  <div className=\"suggestion-impact\">\n                    <div className=\"impact-label\">Impact Score:</div>\n                    <div className=\"impact-bar-container\">\n                      <div \n                        className=\"impact-bar\" \n                        style={{ width: `${Math.min(suggestion.impact_score * 100, 100)}%` }}\n                      ></div>\n                    </div>\n                    <div className=\"impact-value\">{(suggestion.impact_score * 100).toFixed(0)}%</div>\n                  </div>\n                  <div className=\"suggestion-implementation\">\n                    <h4>Implementation Steps:</h4>\n                    <ol>\n                      <li>Conduct assessment of current {suggestion.factor.toLowerCase()} usage patterns</li>\n                      <li>Identify key areas for improvement and set reduction targets</li>\n                      <li>Implement recommended changes and monitor progress</li>\n                      <li>Evaluate results and adjust strategies as needed</li>\n                    </ol>\n                  </div>\n                </div>\n              )}\n            </div>\n          ))}\n        </div>\n      ) : (\n        <div className=\"no-suggestions\">\n          No optimization suggestions available yet. Generate a forecast first.\n        </div>\n      )}\n      \n      {calculatedSavings && (\n        <div className=\"savings-summary\">\n          <div className=\"savings-title\">Total Potential Savings</div>\n          <div className=\"savings-value\">{calculatedSavings.total.toFixed(2)} tons CO2e</div>\n          <div className=\"savings-percentage\">({calculatedSavings.percentage.toFixed(2)}% reduction)</div>\n        </div>\n      )}\n      \n      {generatedSuggestions.length > 0 && !optimizedForecast && (\n        <div className=\"optimization-actions\">\n          <button className=\"btn btn-secondary\" onClick={onOptimize}>\n            Apply Optimizations\n          </button>\n        </div>\n      )}\n      \n      {optimizedForecast && (\n        <div className=\"optimization-summary\">\n          <h4>Optimization Summary</h4>\n          <div className=\"summary-metrics\">\n            <div className=\"metric\">\n              <div className=\"metric-label\">Total Emissions Before</div>\n              <div className=\"metric-value\">\n                {forecast ? forecast.reduce((sum, item) => sum + (item.predicted_emissions || 0), 0).toFixed(2) : '0.00'} tons CO2e\n              </div>\n            </div>\n            <div className=\"metric\">\n              <div className=\"metric-label\">Total Emissions After</div>\n              <div className=\"metric-value\">\n                {optimizedForecast ? optimizedForecast.reduce((sum, item) => sum + (item.predicted_emissions || 0), 0).toFixed(2) : '0.00'} tons CO2e\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default OptimizationPanel;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}