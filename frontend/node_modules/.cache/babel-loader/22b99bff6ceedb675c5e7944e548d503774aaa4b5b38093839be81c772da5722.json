{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SETUP\\\\Desktop\\\\yap-t carbonsync ai\\\\frontend\\\\src\\\\components\\\\ForecastChart.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport './ForecastChart.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ForecastChart = ({\n  data,\n  forecast,\n  optimizedForecast,\n  impacts\n}) => {\n  _s();\n  const chartRef = useRef(null);\n  useEffect(() => {\n    if (!forecast || !chartRef.current) return;\n\n    // Clear previous chart\n    chartRef.current.innerHTML = '';\n\n    // Create a simple SVG chart\n    const createChart = () => {\n      const container = chartRef.current;\n\n      // Process data to ensure one point per month\n      const processedData = processMonthlyData(data);\n      const processedForecast = processForecastData(forecast);\n      const processedOptimized = optimizedForecast ? processForecastData(optimizedForecast) : [];\n\n      // Find min and max values for scaling\n      const allValues = [...processedData.map(d => d.emissions), ...processedForecast.map(d => d.emissions), ...processedForecast.map(d => d.upper), ...processedForecast.map(d => d.lower), ...processedOptimized.map(d => d.emissions)].filter(v => v !== null && v !== undefined);\n      const minValue = Math.min(...allValues) * 0.9;\n      const maxValue = Math.max(...allValues) * 1.1;\n\n      // Combine all months for x-axis\n      const allMonths = [...processedData.map(d => d.monthLabel), ...processedForecast.map(d => d.monthLabel), ...processedOptimized.map(d => d.monthLabel)];\n\n      // Remove duplicates and sort\n      const uniqueMonths = Array.from(new Set(allMonths)).sort();\n\n      // Chart dimensions\n      const chartWidth = 1000;\n      const chartHeight = 500;\n      const marginLeft = 100;\n      const marginRight = 50;\n      const marginTop = 50;\n      const marginBottom = 100;\n      const graphWidth = chartWidth - marginLeft - marginRight;\n      const graphHeight = chartHeight - marginTop - marginBottom;\n\n      // Create SVG element\n      const svg = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n      svg.setAttribute('width', chartWidth);\n      svg.setAttribute('height', chartHeight);\n      svg.style.display = 'block';\n      svg.style.margin = '0 auto';\n      svg.style.background = 'rgba(0, 0, 0, 0.2)';\n      svg.style.borderRadius = '10px';\n\n      // Add title\n      const title = document.createElementNS('http://www.w3.org/2000/svg', 'text');\n      title.setAttribute('x', chartWidth / 2);\n      title.setAttribute('y', 30);\n      title.setAttribute('text-anchor', 'middle');\n      title.setAttribute('font-family', 'Orbitron, sans-serif');\n      title.setAttribute('font-size', '18px');\n      title.setAttribute('fill', '#FFFFFF');\n      title.textContent = 'Monthly Carbon Emissions Forecast';\n      svg.appendChild(title);\n\n      // Create group for graph\n      const graph = document.createElementNS('http://www.w3.org/2000/svg', 'g');\n      graph.setAttribute('transform', `translate(${marginLeft}, ${marginTop})`);\n      svg.appendChild(graph);\n\n      // Helper function to convert data point to position\n      const getX = index => index / (uniqueMonths.length - 1) * graphWidth;\n      const getY = value => graphHeight - (value - minValue) / (maxValue - minValue) * graphHeight;\n\n      // Draw x and y axes\n      const xAxis = document.createElementNS('http://www.w3.org/2000/svg', 'line');\n      xAxis.setAttribute('x1', 0);\n      xAxis.setAttribute('y1', graphHeight);\n      xAxis.setAttribute('x2', graphWidth);\n      xAxis.setAttribute('y2', graphHeight);\n      xAxis.setAttribute('stroke', '#FFFFFF');\n      xAxis.setAttribute('stroke-width', '2');\n      graph.appendChild(xAxis);\n      const yAxis = document.createElementNS('http://www.w3.org/2000/svg', 'line');\n      yAxis.setAttribute('x1', 0);\n      yAxis.setAttribute('y1', 0);\n      yAxis.setAttribute('x2', 0);\n      yAxis.setAttribute('y2', graphHeight);\n      yAxis.setAttribute('stroke', '#FFFFFF');\n      yAxis.setAttribute('stroke-width', '2');\n      graph.appendChild(yAxis);\n\n      // Draw x-axis labels\n      uniqueMonths.forEach((month, index) => {\n        const x = getX(index);\n\n        // Draw tick\n        const tick = document.createElementNS('http://www.w3.org/2000/svg', 'line');\n        tick.setAttribute('x1', x);\n        tick.setAttribute('y1', graphHeight);\n        tick.setAttribute('x2', x);\n        tick.setAttribute('y2', graphHeight + 10);\n        tick.setAttribute('stroke', '#FFFFFF');\n        tick.setAttribute('stroke-width', '2');\n        graph.appendChild(tick);\n\n        // Draw label\n        const label = document.createElementNS('http://www.w3.org/2000/svg', 'text');\n        label.setAttribute('x', x);\n        label.setAttribute('y', graphHeight + 30);\n        label.setAttribute('text-anchor', 'middle');\n        label.setAttribute('font-family', 'Roboto, sans-serif');\n        label.setAttribute('font-size', '12px');\n        label.setAttribute('fill', '#FFFFFF');\n        label.setAttribute('transform', `rotate(45, ${x}, ${graphHeight + 30})`);\n        label.textContent = month;\n        graph.appendChild(label);\n      });\n\n      // Draw y-axis labels\n      const yTicks = 5;\n      for (let i = 0; i <= yTicks; i++) {\n        const value = minValue + (maxValue - minValue) * (i / yTicks);\n        const y = getY(value);\n\n        // Draw tick\n        const tick = document.createElementNS('http://www.w3.org/2000/svg', 'line');\n        tick.setAttribute('x1', -10);\n        tick.setAttribute('y1', y);\n        tick.setAttribute('x2', 0);\n        tick.setAttribute('y2', y);\n        tick.setAttribute('stroke', '#FFFFFF');\n        tick.setAttribute('stroke-width', '2');\n        graph.appendChild(tick);\n\n        // Draw label\n        const label = document.createElementNS('http://www.w3.org/2000/svg', 'text');\n        label.setAttribute('x', -15);\n        label.setAttribute('y', y + 5);\n        label.setAttribute('text-anchor', 'end');\n        label.setAttribute('font-family', 'Roboto, sans-serif');\n        label.setAttribute('font-size', '12px');\n        label.setAttribute('fill', '#FFFFFF');\n        label.textContent = value.toFixed(1);\n        graph.appendChild(label);\n\n        // Draw grid line\n        const gridLine = document.createElementNS('http://www.w3.org/2000/svg', 'line');\n        gridLine.setAttribute('x1', 0);\n        gridLine.setAttribute('y1', y);\n        gridLine.setAttribute('x2', graphWidth);\n        gridLine.setAttribute('y2', y);\n        gridLine.setAttribute('stroke', 'rgba(255, 255, 255, 0.1)');\n        gridLine.setAttribute('stroke-width', '1');\n        graph.appendChild(gridLine);\n      }\n\n      // Draw axis titles\n      const xTitle = document.createElementNS('http://www.w3.org/2000/svg', 'text');\n      xTitle.setAttribute('x', graphWidth / 2);\n      xTitle.setAttribute('y', graphHeight + 70);\n      xTitle.setAttribute('text-anchor', 'middle');\n      xTitle.setAttribute('font-family', 'Orbitron, sans-serif');\n      xTitle.setAttribute('font-size', '14px');\n      xTitle.setAttribute('fill', '#FFFFFF');\n      xTitle.textContent = 'Month';\n      graph.appendChild(xTitle);\n      const yTitle = document.createElementNS('http://www.w3.org/2000/svg', 'text');\n      yTitle.setAttribute('transform', `rotate(-90, -60, ${graphHeight / 2})`);\n      yTitle.setAttribute('x', -60);\n      yTitle.setAttribute('y', graphHeight / 2);\n      yTitle.setAttribute('text-anchor', 'middle');\n      yTitle.setAttribute('font-family', 'Orbitron, sans-serif');\n      yTitle.setAttribute('font-size', '14px');\n      yTitle.setAttribute('fill', '#FFFFFF');\n      yTitle.textContent = 'Emissions (tons CO2e)';\n      graph.appendChild(yTitle);\n\n      // Draw data lines and points\n\n      // Draw actual data\n      if (processedData.length > 0) {\n        // Draw line\n        let pathD = '';\n        processedData.forEach((point, i) => {\n          const monthIndex = uniqueMonths.indexOf(point.monthLabel);\n          if (monthIndex !== -1) {\n            const x = getX(monthIndex);\n            const y = getY(point.emissions);\n            if (i === 0) {\n              pathD = `M ${x} ${y}`;\n            } else {\n              pathD += ` L ${x} ${y}`;\n            }\n          }\n        });\n        const actualPath = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n        actualPath.setAttribute('d', pathD);\n        actualPath.setAttribute('fill', 'none');\n        actualPath.setAttribute('stroke', '#00FFFF');\n        actualPath.setAttribute('stroke-width', '3');\n        graph.appendChild(actualPath);\n\n        // Draw points\n        processedData.forEach(point => {\n          const monthIndex = uniqueMonths.indexOf(point.monthLabel);\n          if (monthIndex !== -1) {\n            const x = getX(monthIndex);\n            const y = getY(point.emissions);\n            const circle = document.createElementNS('http://www.w3.org/2000/svg', 'circle');\n            circle.setAttribute('cx', x);\n            circle.setAttribute('cy', y);\n            circle.setAttribute('r', '8');\n            circle.setAttribute('fill', '#00FFFF');\n            circle.setAttribute('stroke', '#000000');\n            circle.setAttribute('stroke-width', '2');\n\n            // Add tooltip data\n            circle.setAttribute('data-month', point.monthLabel);\n            circle.setAttribute('data-value', point.emissions.toFixed(2));\n            circle.setAttribute('data-type', 'Actual');\n\n            // Add hover effect\n            circle.addEventListener('mouseover', showTooltip);\n            circle.addEventListener('mouseout', hideTooltip);\n            graph.appendChild(circle);\n          }\n        });\n      }\n\n      // Draw forecast data\n      if (processedForecast.length > 0) {\n        // Draw confidence interval\n        let upperPathD = '';\n        let lowerPathD = '';\n        processedForecast.forEach((point, i) => {\n          const monthIndex = uniqueMonths.indexOf(point.monthLabel);\n          if (monthIndex !== -1) {\n            const x = getX(monthIndex);\n            const upperY = getY(point.upper);\n            const lowerY = getY(point.lower);\n            if (i === 0) {\n              upperPathD = `M ${x} ${upperY}`;\n              lowerPathD = `M ${x} ${lowerY}`;\n            } else {\n              upperPathD += ` L ${x} ${upperY}`;\n              lowerPathD += ` L ${x} ${lowerY}`;\n            }\n          }\n        });\n\n        // Draw upper bound\n        const upperPath = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n        upperPath.setAttribute('d', upperPathD);\n        upperPath.setAttribute('fill', 'none');\n        upperPath.setAttribute('stroke', 'rgba(255, 0, 255, 0.3)');\n        upperPath.setAttribute('stroke-width', '2');\n        upperPath.setAttribute('stroke-dasharray', '5,5');\n        graph.appendChild(upperPath);\n\n        // Draw lower bound\n        const lowerPath = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n        lowerPath.setAttribute('d', lowerPathD);\n        lowerPath.setAttribute('fill', 'none');\n        lowerPath.setAttribute('stroke', 'rgba(255, 0, 255, 0.3)');\n        lowerPath.setAttribute('stroke-width', '2');\n        lowerPath.setAttribute('stroke-dasharray', '5,5');\n        graph.appendChild(lowerPath);\n\n        // Fill confidence interval\n        const confidencePath = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n        confidencePath.setAttribute('d', `${upperPathD} L ${getX(uniqueMonths.indexOf(processedForecast[processedForecast.length - 1].monthLabel))} ${getY(processedForecast[processedForecast.length - 1].lower)} ${lowerPathD.replace('M', 'L')} Z`);\n        confidencePath.setAttribute('fill', 'rgba(255, 0, 255, 0.1)');\n        confidencePath.setAttribute('stroke', 'none');\n        graph.insertBefore(confidencePath, upperPath);\n\n        // Draw forecast line\n        let pathD = '';\n        processedForecast.forEach((point, i) => {\n          const monthIndex = uniqueMonths.indexOf(point.monthLabel);\n          if (monthIndex !== -1) {\n            const x = getX(monthIndex);\n            const y = getY(point.emissions);\n            if (i === 0) {\n              pathD = `M ${x} ${y}`;\n            } else {\n              pathD += ` L ${x} ${y}`;\n            }\n          }\n        });\n        const forecastPath = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n        forecastPath.setAttribute('d', pathD);\n        forecastPath.setAttribute('fill', 'none');\n        forecastPath.setAttribute('stroke', '#FF00FF');\n        forecastPath.setAttribute('stroke-width', '3');\n        graph.appendChild(forecastPath);\n\n        // Draw points\n        processedForecast.forEach(point => {\n          const monthIndex = uniqueMonths.indexOf(point.monthLabel);\n          if (monthIndex !== -1) {\n            const x = getX(monthIndex);\n            const y = getY(point.emissions);\n            const circle = document.createElementNS('http://www.w3.org/2000/svg', 'circle');\n            circle.setAttribute('cx', x);\n            circle.setAttribute('cy', y);\n            circle.setAttribute('r', '8');\n            circle.setAttribute('fill', '#FF00FF');\n            circle.setAttribute('stroke', '#000000');\n            circle.setAttribute('stroke-width', '2');\n\n            // Add tooltip data\n            circle.setAttribute('data-month', point.monthLabel);\n            circle.setAttribute('data-value', point.emissions.toFixed(2));\n            circle.setAttribute('data-type', 'Forecast');\n\n            // Add hover effect\n            circle.addEventListener('mouseover', showTooltip);\n            circle.addEventListener('mouseout', hideTooltip);\n            graph.appendChild(circle);\n          }\n        });\n      }\n\n      // Draw optimized forecast data\n      if (processedOptimized.length > 0) {\n        // Draw line\n        let pathD = '';\n        processedOptimized.forEach((point, i) => {\n          const monthIndex = uniqueMonths.indexOf(point.monthLabel);\n          if (monthIndex !== -1) {\n            const x = getX(monthIndex);\n            const y = getY(point.emissions);\n            if (i === 0) {\n              pathD = `M ${x} ${y}`;\n            } else {\n              pathD += ` L ${x} ${y}`;\n            }\n          }\n        });\n        const optimizedPath = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n        optimizedPath.setAttribute('d', pathD);\n        optimizedPath.setAttribute('fill', 'none');\n        optimizedPath.setAttribute('stroke', '#00FF00');\n        optimizedPath.setAttribute('stroke-width', '3');\n        optimizedPath.setAttribute('stroke-dasharray', '5,5');\n        graph.appendChild(optimizedPath);\n\n        // Draw points\n        processedOptimized.forEach(point => {\n          const monthIndex = uniqueMonths.indexOf(point.monthLabel);\n          if (monthIndex !== -1) {\n            const x = getX(monthIndex);\n            const y = getY(point.emissions);\n            const circle = document.createElementNS('http://www.w3.org/2000/svg', 'circle');\n            circle.setAttribute('cx', x);\n            circle.setAttribute('cy', y);\n            circle.setAttribute('r', '8');\n            circle.setAttribute('fill', '#00FF00');\n            circle.setAttribute('stroke', '#000000');\n            circle.setAttribute('stroke-width', '2');\n\n            // Add tooltip data\n            circle.setAttribute('data-month', point.monthLabel);\n            circle.setAttribute('data-value', point.emissions.toFixed(2));\n            circle.setAttribute('data-type', 'Optimized');\n\n            // Add hover effect\n            circle.addEventListener('mouseover', showTooltip);\n            circle.addEventListener('mouseout', hideTooltip);\n            graph.appendChild(circle);\n          }\n        });\n      }\n\n      // Create legend\n      const legendGroup = document.createElementNS('http://www.w3.org/2000/svg', 'g');\n      legendGroup.setAttribute('transform', `translate(${marginLeft + 20}, ${marginTop - 30})`);\n      const legendItems = [{\n        label: 'Actual Emissions',\n        color: '#00FFFF'\n      }, {\n        label: 'Forecast Emissions',\n        color: '#FF00FF'\n      }, {\n        label: 'Optimized Emissions',\n        color: '#00FF00'\n      }];\n      legendItems.forEach((item, index) => {\n        const x = index * 180;\n\n        // Draw color box\n        const rect = document.createElementNS('http://www.w3.org/2000/svg', 'rect');\n        rect.setAttribute('x', x);\n        rect.setAttribute('y', 0);\n        rect.setAttribute('width', 15);\n        rect.setAttribute('height', 15);\n        rect.setAttribute('fill', item.color);\n        rect.setAttribute('stroke', '#000000');\n        rect.setAttribute('stroke-width', '1');\n        legendGroup.appendChild(rect);\n\n        // Draw label\n        const text = document.createElementNS('http://www.w3.org/2000/svg', 'text');\n        text.setAttribute('x', x + 20);\n        text.setAttribute('y', 12);\n        text.setAttribute('font-family', 'Roboto, sans-serif');\n        text.setAttribute('font-size', '12px');\n        text.setAttribute('fill', '#FFFFFF');\n        text.textContent = item.label;\n        legendGroup.appendChild(text);\n      });\n      svg.appendChild(legendGroup);\n\n      // Create tooltip\n      const tooltip = document.createElement('div');\n      tooltip.className = 'chart-tooltip';\n      tooltip.style.display = 'none';\n      tooltip.style.position = 'absolute';\n      tooltip.style.backgroundColor = 'rgba(0, 0, 0, 0.8)';\n      tooltip.style.color = '#FFFFFF';\n      tooltip.style.padding = '10px';\n      tooltip.style.borderRadius = '5px';\n      tooltip.style.pointerEvents = 'none';\n      tooltip.style.zIndex = '1000';\n      tooltip.style.fontFamily = 'Roboto, sans-serif';\n      tooltip.style.fontSize = '12px';\n      tooltip.style.border = '1px solid rgba(0, 255, 255, 0.5)';\n      tooltip.style.boxShadow = '0 0 10px rgba(0, 0, 0, 0.5)';\n      document.body.appendChild(tooltip);\n\n      // Tooltip functions\n      function showTooltip(event) {\n        const circle = event.target;\n        const month = circle.getAttribute('data-month');\n        const value = circle.getAttribute('data-value');\n        const type = circle.getAttribute('data-type');\n        tooltip.innerHTML = `\n          <div style=\"font-weight: bold; margin-bottom: 5px; color: #00FFFF;\">${month}</div>\n          <div>${type} Emissions: ${value} tons CO2e</div>\n        `;\n        tooltip.style.display = 'block';\n\n        // Position tooltip near the point\n        const rect = svg.getBoundingClientRect();\n        const circleRect = circle.getBoundingClientRect();\n        tooltip.style.left = `${circleRect.left + window.scrollX + 10}px`;\n        tooltip.style.top = `${circleRect.top + window.scrollY - 40}px`;\n\n        // Highlight the point\n        circle.setAttribute('r', '10');\n      }\n      function hideTooltip(event) {\n        tooltip.style.display = 'none';\n\n        // Reset point size\n        event.target.setAttribute('r', '8');\n      }\n\n      // Add the SVG to the container\n      container.appendChild(svg);\n\n      // Clean up tooltip when component unmounts\n      return () => {\n        if (tooltip && tooltip.parentNode) {\n          tooltip.parentNode.removeChild(tooltip);\n        }\n      };\n    };\n\n    // Create the chart\n    const cleanup = createChart();\n\n    // Add impact factors section if available\n    if (impacts && Object.keys(impacts).length > 0) {\n      const impactSection = document.createElement('div');\n      impactSection.className = 'impact-factors';\n      const impactTitle = document.createElement('h4');\n      impactTitle.textContent = 'Key Impact Factors';\n      impactSection.appendChild(impactTitle);\n      const impactList = document.createElement('div');\n      impactList.className = 'impact-list';\n\n      // Sort impacts by score\n      const sortedImpacts = Object.entries(impacts).sort((a, b) => Math.abs(b[1].impact_score) - Math.abs(a[1].impact_score)).slice(0, 3);\n      sortedImpacts.forEach(([factor, data], index) => {\n        let factorName = factor;\n        if (factor === 'energy_use') factorName = 'Energy Use';\n        if (factor === 'transport') factorName = 'Transport';\n        if (factor === 'waste') factorName = 'Waste';\n        if (factor === 'water') factorName = 'Water';\n        if (factor === 'fuel') factorName = 'Fuel';\n        if (factor === 'grid_intensity') factorName = 'Grid Intensity';\n        const impactItem = document.createElement('div');\n        impactItem.className = 'impact-item';\n        const impactRank = document.createElement('div');\n        impactRank.className = 'impact-rank';\n        impactRank.textContent = index + 1;\n        const impactInfo = document.createElement('div');\n        impactInfo.className = 'impact-info';\n        const impactName = document.createElement('div');\n        impactName.className = 'impact-name';\n        impactName.textContent = factorName;\n        const impactScore = document.createElement('div');\n        impactScore.className = 'impact-score';\n        const impactValue = document.createElement('span');\n        impactValue.className = 'impact-value';\n        impactValue.textContent = Math.abs(data.impact_score).toFixed(2);\n        impactScore.textContent = 'Impact Score: ';\n        impactScore.appendChild(impactValue);\n        impactInfo.appendChild(impactName);\n        impactInfo.appendChild(impactScore);\n        impactItem.appendChild(impactRank);\n        impactItem.appendChild(impactInfo);\n        impactList.appendChild(impactItem);\n      });\n      impactSection.appendChild(impactList);\n      chartRef.current.appendChild(impactSection);\n    }\n\n    // Return cleanup function\n    return cleanup;\n  }, [data, forecast, optimizedForecast, impacts]);\n\n  // Process actual data to ensure one point per month\n  const processMonthlyData = data => {\n    if (!data || data.length === 0) return [];\n\n    // Group by month\n    const monthlyData = {};\n    data.forEach(item => {\n      if (!item.date || !item.emissions) return;\n      const date = new Date(item.date);\n      const monthKey = `${date.getFullYear()}-${String(date.getMonth() + 1).padStart(2, '0')}`;\n      if (!monthlyData[monthKey]) {\n        monthlyData[monthKey] = {\n          month: monthKey,\n          monthLabel: `${date.toLocaleString('default', {\n            month: 'long'\n          })} ${date.getFullYear()}`,\n          emissions: 0\n        };\n      }\n      monthlyData[monthKey].emissions += parseFloat(item.emissions) || 0;\n    });\n\n    // Convert to array and sort by month\n    return Object.values(monthlyData).sort((a, b) => a.month.localeCompare(b.month));\n  };\n\n  // Process forecast data\n  const processForecastData = forecastData => {\n    if (!forecastData || forecastData.length === 0) return [];\n    return forecastData.map(item => {\n      const date = new Date(item.ds);\n      return {\n        month: `${date.getFullYear()}-${String(date.getMonth() + 1).padStart(2, '0')}`,\n        monthLabel: `${date.toLocaleString('default', {\n          month: 'long'\n        })} ${date.getFullYear()}`,\n        emissions: item.predicted_emissions,\n        upper: item.upper_bound,\n        lower: item.lower_bound\n      };\n    }).sort((a, b) => a.month.localeCompare(b.month));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"forecast-chart-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: chartRef,\n      className: \"chart-area\",\n      style: {\n        minHeight: '600px'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 615,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 614,\n    columnNumber: 5\n  }, this);\n};\n_s(ForecastChart, \"X+1SfQQ6xefXNU27aQW843M7cTw=\");\n_c = ForecastChart;\nexport default ForecastChart;\nvar _c;\n$RefreshReg$(_c, \"ForecastChart\");","map":{"version":3,"names":["React","useEffect","useRef","jsxDEV","_jsxDEV","ForecastChart","data","forecast","optimizedForecast","impacts","_s","chartRef","current","innerHTML","createChart","container","processedData","processMonthlyData","processedForecast","processForecastData","processedOptimized","allValues","map","d","emissions","upper","lower","filter","v","undefined","minValue","Math","min","maxValue","max","allMonths","monthLabel","uniqueMonths","Array","from","Set","sort","chartWidth","chartHeight","marginLeft","marginRight","marginTop","marginBottom","graphWidth","graphHeight","svg","document","createElementNS","setAttribute","style","display","margin","background","borderRadius","title","textContent","appendChild","graph","getX","index","length","getY","value","xAxis","yAxis","forEach","month","x","tick","label","yTicks","i","y","toFixed","gridLine","xTitle","yTitle","pathD","point","monthIndex","indexOf","actualPath","circle","addEventListener","showTooltip","hideTooltip","upperPathD","lowerPathD","upperY","lowerY","upperPath","lowerPath","confidencePath","replace","insertBefore","forecastPath","optimizedPath","legendGroup","legendItems","color","item","rect","text","tooltip","createElement","className","position","backgroundColor","padding","pointerEvents","zIndex","fontFamily","fontSize","border","boxShadow","body","event","target","getAttribute","type","getBoundingClientRect","circleRect","left","window","scrollX","top","scrollY","parentNode","removeChild","cleanup","Object","keys","impactSection","impactTitle","impactList","sortedImpacts","entries","a","b","abs","impact_score","slice","factor","factorName","impactItem","impactRank","impactInfo","impactName","impactScore","impactValue","monthlyData","date","Date","monthKey","getFullYear","String","getMonth","padStart","toLocaleString","parseFloat","values","localeCompare","forecastData","ds","predicted_emissions","upper_bound","lower_bound","children","ref","minHeight","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/SETUP/Desktop/yap-t carbonsync ai/frontend/src/components/ForecastChart.js"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport './ForecastChart.css';\n\nconst ForecastChart = ({ data, forecast, optimizedForecast, impacts }) => {\n  const chartRef = useRef(null);\n\n  useEffect(() => {\n    if (!forecast || !chartRef.current) return;\n    \n    // Clear previous chart\n    chartRef.current.innerHTML = '';\n    \n    // Create a simple SVG chart\n    const createChart = () => {\n      const container = chartRef.current;\n      \n      // Process data to ensure one point per month\n      const processedData = processMonthlyData(data);\n      const processedForecast = processForecastData(forecast);\n      const processedOptimized = optimizedForecast ? processForecastData(optimizedForecast) : [];\n      \n      // Find min and max values for scaling\n      const allValues = [\n        ...processedData.map(d => d.emissions),\n        ...processedForecast.map(d => d.emissions),\n        ...processedForecast.map(d => d.upper),\n        ...processedForecast.map(d => d.lower),\n        ...processedOptimized.map(d => d.emissions)\n      ].filter(v => v !== null && v !== undefined);\n      \n      const minValue = Math.min(...allValues) * 0.9;\n      const maxValue = Math.max(...allValues) * 1.1;\n      \n      // Combine all months for x-axis\n      const allMonths = [\n        ...processedData.map(d => d.monthLabel),\n        ...processedForecast.map(d => d.monthLabel),\n        ...processedOptimized.map(d => d.monthLabel)\n      ];\n      \n      // Remove duplicates and sort\n      const uniqueMonths = Array.from(new Set(allMonths)).sort();\n      \n      // Chart dimensions\n      const chartWidth = 1000;\n      const chartHeight = 500;\n      const marginLeft = 100;\n      const marginRight = 50;\n      const marginTop = 50;\n      const marginBottom = 100;\n      \n      const graphWidth = chartWidth - marginLeft - marginRight;\n      const graphHeight = chartHeight - marginTop - marginBottom;\n      \n      // Create SVG element\n      const svg = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n      svg.setAttribute('width', chartWidth);\n      svg.setAttribute('height', chartHeight);\n      svg.style.display = 'block';\n      svg.style.margin = '0 auto';\n      svg.style.background = 'rgba(0, 0, 0, 0.2)';\n      svg.style.borderRadius = '10px';\n      \n      // Add title\n      const title = document.createElementNS('http://www.w3.org/2000/svg', 'text');\n      title.setAttribute('x', chartWidth / 2);\n      title.setAttribute('y', 30);\n      title.setAttribute('text-anchor', 'middle');\n      title.setAttribute('font-family', 'Orbitron, sans-serif');\n      title.setAttribute('font-size', '18px');\n      title.setAttribute('fill', '#FFFFFF');\n      title.textContent = 'Monthly Carbon Emissions Forecast';\n      svg.appendChild(title);\n      \n      // Create group for graph\n      const graph = document.createElementNS('http://www.w3.org/2000/svg', 'g');\n      graph.setAttribute('transform', `translate(${marginLeft}, ${marginTop})`);\n      svg.appendChild(graph);\n      \n      // Helper function to convert data point to position\n      const getX = (index) => (index / (uniqueMonths.length - 1)) * graphWidth;\n      const getY = (value) => graphHeight - ((value - minValue) / (maxValue - minValue)) * graphHeight;\n      \n      // Draw x and y axes\n      const xAxis = document.createElementNS('http://www.w3.org/2000/svg', 'line');\n      xAxis.setAttribute('x1', 0);\n      xAxis.setAttribute('y1', graphHeight);\n      xAxis.setAttribute('x2', graphWidth);\n      xAxis.setAttribute('y2', graphHeight);\n      xAxis.setAttribute('stroke', '#FFFFFF');\n      xAxis.setAttribute('stroke-width', '2');\n      graph.appendChild(xAxis);\n      \n      const yAxis = document.createElementNS('http://www.w3.org/2000/svg', 'line');\n      yAxis.setAttribute('x1', 0);\n      yAxis.setAttribute('y1', 0);\n      yAxis.setAttribute('x2', 0);\n      yAxis.setAttribute('y2', graphHeight);\n      yAxis.setAttribute('stroke', '#FFFFFF');\n      yAxis.setAttribute('stroke-width', '2');\n      graph.appendChild(yAxis);\n      \n      // Draw x-axis labels\n      uniqueMonths.forEach((month, index) => {\n        const x = getX(index);\n        \n        // Draw tick\n        const tick = document.createElementNS('http://www.w3.org/2000/svg', 'line');\n        tick.setAttribute('x1', x);\n        tick.setAttribute('y1', graphHeight);\n        tick.setAttribute('x2', x);\n        tick.setAttribute('y2', graphHeight + 10);\n        tick.setAttribute('stroke', '#FFFFFF');\n        tick.setAttribute('stroke-width', '2');\n        graph.appendChild(tick);\n        \n        // Draw label\n        const label = document.createElementNS('http://www.w3.org/2000/svg', 'text');\n        label.setAttribute('x', x);\n        label.setAttribute('y', graphHeight + 30);\n        label.setAttribute('text-anchor', 'middle');\n        label.setAttribute('font-family', 'Roboto, sans-serif');\n        label.setAttribute('font-size', '12px');\n        label.setAttribute('fill', '#FFFFFF');\n        label.setAttribute('transform', `rotate(45, ${x}, ${graphHeight + 30})`);\n        label.textContent = month;\n        graph.appendChild(label);\n      });\n      \n      // Draw y-axis labels\n      const yTicks = 5;\n      for (let i = 0; i <= yTicks; i++) {\n        const value = minValue + ((maxValue - minValue) * (i / yTicks));\n        const y = getY(value);\n        \n        // Draw tick\n        const tick = document.createElementNS('http://www.w3.org/2000/svg', 'line');\n        tick.setAttribute('x1', -10);\n        tick.setAttribute('y1', y);\n        tick.setAttribute('x2', 0);\n        tick.setAttribute('y2', y);\n        tick.setAttribute('stroke', '#FFFFFF');\n        tick.setAttribute('stroke-width', '2');\n        graph.appendChild(tick);\n        \n        // Draw label\n        const label = document.createElementNS('http://www.w3.org/2000/svg', 'text');\n        label.setAttribute('x', -15);\n        label.setAttribute('y', y + 5);\n        label.setAttribute('text-anchor', 'end');\n        label.setAttribute('font-family', 'Roboto, sans-serif');\n        label.setAttribute('font-size', '12px');\n        label.setAttribute('fill', '#FFFFFF');\n        label.textContent = value.toFixed(1);\n        graph.appendChild(label);\n        \n        // Draw grid line\n        const gridLine = document.createElementNS('http://www.w3.org/2000/svg', 'line');\n        gridLine.setAttribute('x1', 0);\n        gridLine.setAttribute('y1', y);\n        gridLine.setAttribute('x2', graphWidth);\n        gridLine.setAttribute('y2', y);\n        gridLine.setAttribute('stroke', 'rgba(255, 255, 255, 0.1)');\n        gridLine.setAttribute('stroke-width', '1');\n        graph.appendChild(gridLine);\n      }\n      \n      // Draw axis titles\n      const xTitle = document.createElementNS('http://www.w3.org/2000/svg', 'text');\n      xTitle.setAttribute('x', graphWidth / 2);\n      xTitle.setAttribute('y', graphHeight + 70);\n      xTitle.setAttribute('text-anchor', 'middle');\n      xTitle.setAttribute('font-family', 'Orbitron, sans-serif');\n      xTitle.setAttribute('font-size', '14px');\n      xTitle.setAttribute('fill', '#FFFFFF');\n      xTitle.textContent = 'Month';\n      graph.appendChild(xTitle);\n      \n      const yTitle = document.createElementNS('http://www.w3.org/2000/svg', 'text');\n      yTitle.setAttribute('transform', `rotate(-90, -60, ${graphHeight / 2})`);\n      yTitle.setAttribute('x', -60);\n      yTitle.setAttribute('y', graphHeight / 2);\n      yTitle.setAttribute('text-anchor', 'middle');\n      yTitle.setAttribute('font-family', 'Orbitron, sans-serif');\n      yTitle.setAttribute('font-size', '14px');\n      yTitle.setAttribute('fill', '#FFFFFF');\n      yTitle.textContent = 'Emissions (tons CO2e)';\n      graph.appendChild(yTitle);\n      \n      // Draw data lines and points\n      \n      // Draw actual data\n      if (processedData.length > 0) {\n        // Draw line\n        let pathD = '';\n        processedData.forEach((point, i) => {\n          const monthIndex = uniqueMonths.indexOf(point.monthLabel);\n          if (monthIndex !== -1) {\n            const x = getX(monthIndex);\n            const y = getY(point.emissions);\n            \n            if (i === 0) {\n              pathD = `M ${x} ${y}`;\n            } else {\n              pathD += ` L ${x} ${y}`;\n            }\n          }\n        });\n        \n        const actualPath = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n        actualPath.setAttribute('d', pathD);\n        actualPath.setAttribute('fill', 'none');\n        actualPath.setAttribute('stroke', '#00FFFF');\n        actualPath.setAttribute('stroke-width', '3');\n        graph.appendChild(actualPath);\n        \n        // Draw points\n        processedData.forEach(point => {\n          const monthIndex = uniqueMonths.indexOf(point.monthLabel);\n          if (monthIndex !== -1) {\n            const x = getX(monthIndex);\n            const y = getY(point.emissions);\n            \n            const circle = document.createElementNS('http://www.w3.org/2000/svg', 'circle');\n            circle.setAttribute('cx', x);\n            circle.setAttribute('cy', y);\n            circle.setAttribute('r', '8');\n            circle.setAttribute('fill', '#00FFFF');\n            circle.setAttribute('stroke', '#000000');\n            circle.setAttribute('stroke-width', '2');\n            \n            // Add tooltip data\n            circle.setAttribute('data-month', point.monthLabel);\n            circle.setAttribute('data-value', point.emissions.toFixed(2));\n            circle.setAttribute('data-type', 'Actual');\n            \n            // Add hover effect\n            circle.addEventListener('mouseover', showTooltip);\n            circle.addEventListener('mouseout', hideTooltip);\n            \n            graph.appendChild(circle);\n          }\n        });\n      }\n      \n      // Draw forecast data\n      if (processedForecast.length > 0) {\n        // Draw confidence interval\n        let upperPathD = '';\n        let lowerPathD = '';\n        \n        processedForecast.forEach((point, i) => {\n          const monthIndex = uniqueMonths.indexOf(point.monthLabel);\n          if (monthIndex !== -1) {\n            const x = getX(monthIndex);\n            const upperY = getY(point.upper);\n            const lowerY = getY(point.lower);\n            \n            if (i === 0) {\n              upperPathD = `M ${x} ${upperY}`;\n              lowerPathD = `M ${x} ${lowerY}`;\n            } else {\n              upperPathD += ` L ${x} ${upperY}`;\n              lowerPathD += ` L ${x} ${lowerY}`;\n            }\n          }\n        });\n        \n        // Draw upper bound\n        const upperPath = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n        upperPath.setAttribute('d', upperPathD);\n        upperPath.setAttribute('fill', 'none');\n        upperPath.setAttribute('stroke', 'rgba(255, 0, 255, 0.3)');\n        upperPath.setAttribute('stroke-width', '2');\n        upperPath.setAttribute('stroke-dasharray', '5,5');\n        graph.appendChild(upperPath);\n        \n        // Draw lower bound\n        const lowerPath = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n        lowerPath.setAttribute('d', lowerPathD);\n        lowerPath.setAttribute('fill', 'none');\n        lowerPath.setAttribute('stroke', 'rgba(255, 0, 255, 0.3)');\n        lowerPath.setAttribute('stroke-width', '2');\n        lowerPath.setAttribute('stroke-dasharray', '5,5');\n        graph.appendChild(lowerPath);\n        \n        // Fill confidence interval\n        const confidencePath = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n        confidencePath.setAttribute('d', `${upperPathD} L ${getX(uniqueMonths.indexOf(processedForecast[processedForecast.length-1].monthLabel))} ${getY(processedForecast[processedForecast.length-1].lower)} ${lowerPathD.replace('M', 'L')} Z`);\n        confidencePath.setAttribute('fill', 'rgba(255, 0, 255, 0.1)');\n        confidencePath.setAttribute('stroke', 'none');\n        graph.insertBefore(confidencePath, upperPath);\n        \n        // Draw forecast line\n        let pathD = '';\n        processedForecast.forEach((point, i) => {\n          const monthIndex = uniqueMonths.indexOf(point.monthLabel);\n          if (monthIndex !== -1) {\n            const x = getX(monthIndex);\n            const y = getY(point.emissions);\n            \n            if (i === 0) {\n              pathD = `M ${x} ${y}`;\n            } else {\n              pathD += ` L ${x} ${y}`;\n            }\n          }\n        });\n        \n        const forecastPath = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n        forecastPath.setAttribute('d', pathD);\n        forecastPath.setAttribute('fill', 'none');\n        forecastPath.setAttribute('stroke', '#FF00FF');\n        forecastPath.setAttribute('stroke-width', '3');\n        graph.appendChild(forecastPath);\n        \n        // Draw points\n        processedForecast.forEach(point => {\n          const monthIndex = uniqueMonths.indexOf(point.monthLabel);\n          if (monthIndex !== -1) {\n            const x = getX(monthIndex);\n            const y = getY(point.emissions);\n            \n            const circle = document.createElementNS('http://www.w3.org/2000/svg', 'circle');\n            circle.setAttribute('cx', x);\n            circle.setAttribute('cy', y);\n            circle.setAttribute('r', '8');\n            circle.setAttribute('fill', '#FF00FF');\n            circle.setAttribute('stroke', '#000000');\n            circle.setAttribute('stroke-width', '2');\n            \n            // Add tooltip data\n            circle.setAttribute('data-month', point.monthLabel);\n            circle.setAttribute('data-value', point.emissions.toFixed(2));\n            circle.setAttribute('data-type', 'Forecast');\n            \n            // Add hover effect\n            circle.addEventListener('mouseover', showTooltip);\n            circle.addEventListener('mouseout', hideTooltip);\n            \n            graph.appendChild(circle);\n          }\n        });\n      }\n      \n      // Draw optimized forecast data\n      if (processedOptimized.length > 0) {\n        // Draw line\n        let pathD = '';\n        processedOptimized.forEach((point, i) => {\n          const monthIndex = uniqueMonths.indexOf(point.monthLabel);\n          if (monthIndex !== -1) {\n            const x = getX(monthIndex);\n            const y = getY(point.emissions);\n            \n            if (i === 0) {\n              pathD = `M ${x} ${y}`;\n            } else {\n              pathD += ` L ${x} ${y}`;\n            }\n          }\n        });\n        \n        const optimizedPath = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n        optimizedPath.setAttribute('d', pathD);\n        optimizedPath.setAttribute('fill', 'none');\n        optimizedPath.setAttribute('stroke', '#00FF00');\n        optimizedPath.setAttribute('stroke-width', '3');\n        optimizedPath.setAttribute('stroke-dasharray', '5,5');\n        graph.appendChild(optimizedPath);\n        \n        // Draw points\n        processedOptimized.forEach(point => {\n          const monthIndex = uniqueMonths.indexOf(point.monthLabel);\n          if (monthIndex !== -1) {\n            const x = getX(monthIndex);\n            const y = getY(point.emissions);\n            \n            const circle = document.createElementNS('http://www.w3.org/2000/svg', 'circle');\n            circle.setAttribute('cx', x);\n            circle.setAttribute('cy', y);\n            circle.setAttribute('r', '8');\n            circle.setAttribute('fill', '#00FF00');\n            circle.setAttribute('stroke', '#000000');\n            circle.setAttribute('stroke-width', '2');\n            \n            // Add tooltip data\n            circle.setAttribute('data-month', point.monthLabel);\n            circle.setAttribute('data-value', point.emissions.toFixed(2));\n            circle.setAttribute('data-type', 'Optimized');\n            \n            // Add hover effect\n            circle.addEventListener('mouseover', showTooltip);\n            circle.addEventListener('mouseout', hideTooltip);\n            \n            graph.appendChild(circle);\n          }\n        });\n      }\n      \n      // Create legend\n      const legendGroup = document.createElementNS('http://www.w3.org/2000/svg', 'g');\n      legendGroup.setAttribute('transform', `translate(${marginLeft + 20}, ${marginTop - 30})`);\n      \n      const legendItems = [\n        { label: 'Actual Emissions', color: '#00FFFF' },\n        { label: 'Forecast Emissions', color: '#FF00FF' },\n        { label: 'Optimized Emissions', color: '#00FF00' }\n      ];\n      \n      legendItems.forEach((item, index) => {\n        const x = index * 180;\n        \n        // Draw color box\n        const rect = document.createElementNS('http://www.w3.org/2000/svg', 'rect');\n        rect.setAttribute('x', x);\n        rect.setAttribute('y', 0);\n        rect.setAttribute('width', 15);\n        rect.setAttribute('height', 15);\n        rect.setAttribute('fill', item.color);\n        rect.setAttribute('stroke', '#000000');\n        rect.setAttribute('stroke-width', '1');\n        legendGroup.appendChild(rect);\n        \n        // Draw label\n        const text = document.createElementNS('http://www.w3.org/2000/svg', 'text');\n        text.setAttribute('x', x + 20);\n        text.setAttribute('y', 12);\n        text.setAttribute('font-family', 'Roboto, sans-serif');\n        text.setAttribute('font-size', '12px');\n        text.setAttribute('fill', '#FFFFFF');\n        text.textContent = item.label;\n        legendGroup.appendChild(text);\n      });\n      \n      svg.appendChild(legendGroup);\n      \n      // Create tooltip\n      const tooltip = document.createElement('div');\n      tooltip.className = 'chart-tooltip';\n      tooltip.style.display = 'none';\n      tooltip.style.position = 'absolute';\n      tooltip.style.backgroundColor = 'rgba(0, 0, 0, 0.8)';\n      tooltip.style.color = '#FFFFFF';\n      tooltip.style.padding = '10px';\n      tooltip.style.borderRadius = '5px';\n      tooltip.style.pointerEvents = 'none';\n      tooltip.style.zIndex = '1000';\n      tooltip.style.fontFamily = 'Roboto, sans-serif';\n      tooltip.style.fontSize = '12px';\n      tooltip.style.border = '1px solid rgba(0, 255, 255, 0.5)';\n      tooltip.style.boxShadow = '0 0 10px rgba(0, 0, 0, 0.5)';\n      document.body.appendChild(tooltip);\n      \n      // Tooltip functions\n      function showTooltip(event) {\n        const circle = event.target;\n        const month = circle.getAttribute('data-month');\n        const value = circle.getAttribute('data-value');\n        const type = circle.getAttribute('data-type');\n        \n        tooltip.innerHTML = `\n          <div style=\"font-weight: bold; margin-bottom: 5px; color: #00FFFF;\">${month}</div>\n          <div>${type} Emissions: ${value} tons CO2e</div>\n        `;\n        \n        tooltip.style.display = 'block';\n        \n        // Position tooltip near the point\n        const rect = svg.getBoundingClientRect();\n        const circleRect = circle.getBoundingClientRect();\n        \n        tooltip.style.left = `${circleRect.left + window.scrollX + 10}px`;\n        tooltip.style.top = `${circleRect.top + window.scrollY - 40}px`;\n        \n        // Highlight the point\n        circle.setAttribute('r', '10');\n      }\n      \n      function hideTooltip(event) {\n        tooltip.style.display = 'none';\n        \n        // Reset point size\n        event.target.setAttribute('r', '8');\n      }\n      \n      // Add the SVG to the container\n      container.appendChild(svg);\n      \n      // Clean up tooltip when component unmounts\n      return () => {\n        if (tooltip && tooltip.parentNode) {\n          tooltip.parentNode.removeChild(tooltip);\n        }\n      };\n    };\n    \n    // Create the chart\n    const cleanup = createChart();\n    \n    // Add impact factors section if available\n    if (impacts && Object.keys(impacts).length > 0) {\n      const impactSection = document.createElement('div');\n      impactSection.className = 'impact-factors';\n      \n      const impactTitle = document.createElement('h4');\n      impactTitle.textContent = 'Key Impact Factors';\n      impactSection.appendChild(impactTitle);\n      \n      const impactList = document.createElement('div');\n      impactList.className = 'impact-list';\n      \n      // Sort impacts by score\n      const sortedImpacts = Object.entries(impacts)\n        .sort((a, b) => Math.abs(b[1].impact_score) - Math.abs(a[1].impact_score))\n        .slice(0, 3);\n      \n      sortedImpacts.forEach(([factor, data], index) => {\n        let factorName = factor;\n        if (factor === 'energy_use') factorName = 'Energy Use';\n        if (factor === 'transport') factorName = 'Transport';\n        if (factor === 'waste') factorName = 'Waste';\n        if (factor === 'water') factorName = 'Water';\n        if (factor === 'fuel') factorName = 'Fuel';\n        if (factor === 'grid_intensity') factorName = 'Grid Intensity';\n        \n        const impactItem = document.createElement('div');\n        impactItem.className = 'impact-item';\n        \n        const impactRank = document.createElement('div');\n        impactRank.className = 'impact-rank';\n        impactRank.textContent = index + 1;\n        \n        const impactInfo = document.createElement('div');\n        impactInfo.className = 'impact-info';\n        \n        const impactName = document.createElement('div');\n        impactName.className = 'impact-name';\n        impactName.textContent = factorName;\n        \n        const impactScore = document.createElement('div');\n        impactScore.className = 'impact-score';\n        \n        const impactValue = document.createElement('span');\n        impactValue.className = 'impact-value';\n        impactValue.textContent = Math.abs(data.impact_score).toFixed(2);\n        \n        impactScore.textContent = 'Impact Score: ';\n        impactScore.appendChild(impactValue);\n        \n        impactInfo.appendChild(impactName);\n        impactInfo.appendChild(impactScore);\n        \n        impactItem.appendChild(impactRank);\n        impactItem.appendChild(impactInfo);\n        \n        impactList.appendChild(impactItem);\n      });\n      \n      impactSection.appendChild(impactList);\n      chartRef.current.appendChild(impactSection);\n    }\n    \n    // Return cleanup function\n    return cleanup;\n  }, [data, forecast, optimizedForecast, impacts]);\n\n  // Process actual data to ensure one point per month\n  const processMonthlyData = (data) => {\n    if (!data || data.length === 0) return [];\n    \n    // Group by month\n    const monthlyData = {};\n    \n    data.forEach(item => {\n      if (!item.date || !item.emissions) return;\n      \n      const date = new Date(item.date);\n      const monthKey = `${date.getFullYear()}-${String(date.getMonth() + 1).padStart(2, '0')}`;\n      \n      if (!monthlyData[monthKey]) {\n        monthlyData[monthKey] = {\n          month: monthKey,\n          monthLabel: `${date.toLocaleString('default', { month: 'long' })} ${date.getFullYear()}`,\n          emissions: 0\n        };\n      }\n      \n      monthlyData[monthKey].emissions += parseFloat(item.emissions) || 0;\n    });\n    \n    // Convert to array and sort by month\n    return Object.values(monthlyData)\n      .sort((a, b) => a.month.localeCompare(b.month));\n  };\n  \n  // Process forecast data\n  const processForecastData = (forecastData) => {\n    if (!forecastData || forecastData.length === 0) return [];\n    \n    return forecastData.map(item => {\n      const date = new Date(item.ds);\n      return {\n        month: `${date.getFullYear()}-${String(date.getMonth() + 1).padStart(2, '0')}`,\n        monthLabel: `${date.toLocaleString('default', { month: 'long' })} ${date.getFullYear()}`,\n        emissions: item.predicted_emissions,\n        upper: item.upper_bound,\n        lower: item.lower_bound\n      };\n    }).sort((a, b) => a.month.localeCompare(b.month));\n  };\n\n  return (\n    <div className=\"forecast-chart-container\">\n      <div ref={chartRef} className=\"chart-area\" style={{ minHeight: '600px' }}></div>\n    </div>\n  );\n};\n\nexport default ForecastChart;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}